{"version":3,"sources":["./src/app/editor/_components/common/item-row.abstract.ts","./src/app/editor/_components/common/json-summary.component.ts","./src/app/editor/_components/forms/main/aaiinfo-section.component.ts","./src/app/editor/_components/forms/main/aaiinfo-section.component.html","./src/app/editor/_components/dialogs/add-message-reference.component.ts","./src/app/editor/_components/dialogs/add-message-reference.component.html","./src/app/editor/_components/forms/channel/operation/headers-tab.component.ts","./src/app/editor/_components/forms/channel/operation/headers-tab.component.html","./src/app/editor/_components/dialogs/add-extension.component.ts","./src/app/editor/_components/dialogs/add-extension.component.html","./src/app/editor/_components/dialogs/clone-channel.component.ts","./src/app/editor/_components/dialogs/clone-channel.component.html","./src/app/editor/_components/common/collaborator-aggregate.component.ts","./src/app/editor/_components/common/collaborator-aggregate.component.html","./src/app/editor/_components/forms/channel/operation/message-section.component.ts","./src/app/editor/_components/forms/channel/operation/message-section.component.html","./src/app/editor/_components/forms/shared/schema-type-editor.component.ts","./src/app/editor/_components/forms/shared/schema-type-editor.component.html","./src/app/editor/_directives/autosize.directive.ts","./src/app/editor/_components/common/collaborator-overlay.component.ts","./src/app/editor/_components/common/collaborator-overlay.component.html","./src/app/editor/_components/common/inline-example-editor.component.ts","./src/app/editor/_components/common/inline-example-editor.component.html","./src/app/editor/_components/forms/definition-form.component.ts","./src/app/editor/_components/forms/definition-form.component.html","./src/app/editor/_services/command.service.ts","./src/app/editor/_components/title-bar/redo-icon.component.ts","./src/app/editor/_components/title-bar/redo-icon.component.html","./src/app/editor/_components/dialogs/add-aai-example.component.ts","./src/app/editor/_components/dialogs/add-aai-example.component.html","./src/app/editor/_components/forms/path-form.component.ts","./src/app/editor/_components/forms/path-form.component.html","./src/app/editor/_components/problem-drawer.component.ts","./src/app/editor/_components/problem-drawer.component.html","./src/app/editor/_components/common/schema-type.component.ts","./src/app/editor/_components/common/schema-type.component.html","./src/app/editor/_components/forms/path/operation/response-tab-30.component.ts","./src/app/editor/_components/forms/path/operation/response-tab-30.component.html","./src/app/editor/_components/forms/shared/section.component.ts","./src/app/editor/_components/forms/shared/section.component.html","./src/app/editor/_components/forms/main/aaisecurity-schemes-section.component.ts","./src/app/editor/_components/forms/main/security-schemes-section.component.html","./src/app/editor/_components/dialogs/clone-path.component.ts","./src/app/editor/_components/dialogs/clone-path.component.html","./src/app/editor/_components/editors/security-requirement-editor.component.ts","./src/app/editor/_components/editors/security-requirement-editor.component.html","./src/app/editor/_components/common/inline-array-editor.component.ts","./src/app/editor/_components/common/inline-array-editor.component.html","./src/app/editor/_components/dialogs/add-response.component.ts","./src/app/editor/_components/dialogs/add-response.component.html","./src/app/editor/_components/forms/messagetrait-item.component.ts","./src/app/editor/_components/forms/messagetrait-item.component.html","./src/app/editor/_components/forms/messagetrait-form.component.ts","./src/app/editor/_components/forms/messagetrait-form.component.html","./src/app/editor/_components/forms/shared/extensions-section.component.ts","./src/app/editor/_components/forms/shared/extensions-section.component.html","./src/app/editor/_components/forms/definition/oneof-row.component.ts","./src/app/editor/_components/forms/definition/oneof-row.component.html","./src/app/editor/_components/forms/shared/path-params-section.component.ts","./src/app/editor/_components/forms/shared/path-params-section.component.html","./src/app/editor/_components/common/pf-inline-text-editor.component.ts","./src/app/editor/_components/common/pf-inline-text-editor.component.html","./src/app/editor/_components/forms/shared/cookie-param-row.component.ts","./src/app/editor/_components/forms/shared/cookie-param-row.component.html","./src/app/editor/_components/forms/shared/media-type-row.component.ts","./src/app/editor/_components/forms/shared/media-type-row.component.html","./src/app/editor/_util/schema.util.ts","./src/environments/environment.ts","./src/app/editor/_models/component-type.model.ts","./src/app/editor/oaieditor.component.ts","./src/app/editor/oaieditor.component.html","./src/app/editor/_visitors/message-definitions.visitor.ts","./src/app/editor/_components/common/markdown-summary.component.ts","./src/app/editor/_components/common/icon-button.component.ts","./src/app/editor/_components/common/icon-button.component.html","./src/app/editor/_components/common/base-component.ts","./src/app/editor/_components/forms/path/operation/requestBody-section.component.ts","./src/app/editor/_components/forms/path/operation/requestBody-section.component.html","./src/app/editor/_components/dialogs/add-example.component.ts","./src/app/editor/_components/dialogs/add-example.component.html","./src/app/editor/_components/forms/main/license-section.component.ts","./src/app/editor/_components/forms/main/license-section.component.html","./src/app/editor/_components/forms/channel-form.component.ts","./src/app/editor/_components/forms/channel-form.component.html","./src/app/editor/_services/collaborator.service.ts","./src/app/editor/_components/common/drop-down.component.ts","./src/app/editor/_components/common/drop-down.component.html","./src/app/editor/_components/forms/message-form.component.ts","./src/app/editor/_components/forms/message-form.component.html","./src/app/editor/_visitors/path-items.visitor.ts","./src/app/editor/_components/common/checkbox-input.component.ts","./src/app/editor/_components/common/checkbox-input.component.html","./src/app/editor/_components/common/validation-problem.component.ts","./src/app/editor/_components/common/validation-problem.component.html","./src/app/editor/_components/forms/path/operation/no-operation.component.ts","./src/app/editor/_components/forms/path/operation/no-operation.component.html","./src/app/editor/_components/title-bar.component.ts","./src/app/editor/_components/title-bar.component.html","./src/app/editor/_components/forms/shared/header-row.component.ts","./src/app/editor/_components/forms/shared/header-row.component.html","./src/app/editor/_visitors/schema-definitions.visitor.ts","./src/app/editor.module.ts","./src/app/editor/_components/common/scopes-input.component.ts","./src/app/editor/_components/common/scopes-input.component.html","./src/app/editor/_components/dialogs/clone-response.component.ts","./src/app/editor/_components/dialogs/clone-response.component.html","./src/app/editor/_components/forms/response-item.component.ts","./src/app/editor/_components/forms/response-item.component.html","./src/app/editor/_components/dialogs/rename-path.component.ts","./src/app/editor/_components/dialogs/rename-path.component.html","./src/app/editor/_components/dialogs/rename-entity.component.ts","./src/app/editor/_components/dialogs/rename-entity.component.html","./src/app/editor/_components/forms/channel/operation/info-section.component.ts","./src/app/editor/_components/forms/channel/operation/info-section.component.html","./src/app/editor/_components/forms/aaimain-form.component.ts","./src/app/editor/_components/forms/aaimain-form.component.html","./src/app/editor/_components/forms/channel/operation/payload-tab.component.ts","./src/app/editor/_components/forms/channel/operation/payload-tab.component.html","./src/app/editor/_components/aaimaster.component.ts","./src/app/editor/_components/aaimaster.component.html","./src/app/services/logger.service.ts","./src/app/editor/_components/forms/shared/query-params-section.component.ts","./src/app/editor/_components/forms/shared/query-params-section.component.html","./src/app/editor/_util/keypress.util.ts","./src/app/editor/aaieditor.component.ts","./src/app/editor/aaieditor.component.html","./src/app/editor/_components/dialogs/edit-example-20.component.ts","./src/app/editor/_components/dialogs/edit-example-20.component.html","./src/app/editor/_components/forms/main/tags-section.component.ts","./src/app/editor/_components/forms/main/tags-section.component.html","./src/app/editor/_components/editors/security-scheme-editor.component.ts","./src/app/editor/_components/editors/security-scheme-editor.component.html","./src/app/editor/_components/common/validation-aggregate.component.ts","./src/app/editor/_components/common/validation-aggregate.component.html","./src/app/editor/_components/forms/path/operation/http-headers.component.ts","./src/app/editor/_components/forms/path/operation/http-headers.component.html","./src/app/editor/_components/forms/shared/header-param-row.component.ts","./src/app/editor/_components/forms/shared/header-param-row.component.html","./src/app/editor/_components/editors/property-editor.component.ts","./src/app/editor/_components/editors/property-editor.component.html","./src/app/editor/_components/editors/message-editor.component.ts","./src/app/editor/_components/editors/message-editor.component.html","./src/app/editor/_components/common/inline-json-editor.component.ts","./src/app/editor/_components/common/inline-json-editor.component.html","./src/app/editor/_services/rest-resource.service.ts","./src/app/editor/_components/forms/channel/info-section.component.ts","./src/app/editor/_components/forms/channel/info-section.component.html","./src/app/editor/_util/model.util.ts","./src/app/editor/_components/forms/definition/info-section.component.ts","./src/app/editor/_components/forms/definition/info-section.component.html","./src/app/editor/_services/features.service.ts","./src/app/editor/_components/editors/aaiserver-editor.component.ts","./src/app/editor/_components/editors/aaiserver-editor.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/editor/_components/forms/path/operation/content.component.ts","./src/app/editor/_components/forms/path/operation/content.component.html","./src/app/editor/_components/forms/definition/properties-section.component.ts","./src/app/editor/_components/forms/definition/properties-section.component.html","./src/app/editor/_components/forms/shared/cookie-params-section.component.ts","./src/app/editor/_components/forms/shared/cookie-params-section.component.html","./src/app/editor/_components/editors/messagetrait-editor.component.ts","./src/app/editor/_components/editors/messagetrait-editor.component.html","./src/app/editor/_components/forms/shared/aaiserver-row.component.ts","./src/app/editor/_components/forms/shared/aaiserver-row.component.html","./src/app/editor/_components/forms/shared/servers-section.component.ts","./src/app/editor/_components/forms/shared/servers-section.component.html","./src/app/editor/_components/dialogs/add-media-type.component.ts","./src/app/editor/_components/dialogs/add-media-type.component.html","./src/app/editor/_services/selection.service.ts","./src/app/editor/_components/forms/definition/schema-row.component.ts","./src/app/editor/_components/forms/definition/schema-row.component.html","./src/app/editor/_components/common/context-help.component.ts","./src/app/editor/_components/common/context-help.component.html","./src/app/editor/_services/api-catalog.service.ts","./src/app/editor/_components/dialogs/clone-definition.component.ts","./src/app/editor/_components/dialogs/clone-definition.component.html","./src/app/editor/_visitors/operationtrait-definitions.visitor.ts","./src/app/editor/_models/api.model.ts","./src/app/editor/_components/common/counter.component.ts","./src/app/editor/_components/common/counter.component.html","./src/app/editor/_components/common/server-url.component.ts","./src/app/editor/_components/common/server-url.component.html","./src/app/components/editors/openapi-editor.component.ts","./src/app/components/editors/openapi-editor.component.html","./src/app/editor/_components/forms/main/info-section.component.ts","./src/app/editor/_components/forms/main/info-section.component.html","./src/app/editor/_components/common/markdown-editor.component.ts","./src/app/editor/_components/common/markdown-editor.component.html","./src/app/editor/_components/forms/response-form.component.ts","./src/app/editor/_components/forms/response-form.component.html","./src/app/editor/_components/dialogs/clone-response-definition.component.ts","./src/app/editor/_components/dialogs/clone-response-definition.component.html","./src/app/editor/_components/forms/main/security-scheme-row.component.ts","./src/app/editor/_components/forms/main/security-scheme-row.component.html","./src/app/editor/_components/forms/definition-item.component.ts","./src/app/editor/_components/forms/definition-item.component.html","./src/app/editor/_components/forms/main/contact-section.component.ts","./src/app/editor/_components/forms/main/contact-section.component.html","./src/app/editor/_components/forms/path/operations-section.component.ts","./src/app/editor/_components/forms/path/operations-section.component.html","./src/app/editor/_components/forms/definition/schemas-section.component.ts","./src/app/editor/_components/forms/definition/schemas-section.component.html","./src/app/editor/_components/editors/entity-editor.component.ts","./src/app/editor/_components/editors/entity-editor.component.html","./src/app/app.module.ts","./src/app/editor/_components/editors/data-type-editor.component.ts","./src/app/editor/_components/editors/data-type-editor.component.html","./src/app/editor/_components/forms/shared/path-param-row.component.ts","./src/app/editor/_components/forms/shared/path-param-row.component.html","./src/app/editor/_components/editors/oneof-in-message-editor.component.ts","./src/app/editor/_components/editors/oneof-in-message-editor.component.html","./src/app/editor/_components/editors/parameter-editor.component.ts","./src/app/editor/_components/editors/parameter-editor.component.html","./src/app/services/window-ref.service.ts","./src/app/editor/editor.base.ts","./src/app/editor/_components/dialogs/add-tag.component.ts","./src/app/editor/_components/dialogs/add-tag.component.html","./src/app/editor/_components/forms/path/operation/info-section.component.ts","./src/app/editor/_components/forms/path/operation/info-section.component.html","./src/app/editor/_components/dialogs/add-header.component.ts","./src/app/editor/_components/dialogs/add-header.component.html","./src/app/editor/_components/dialogs/set-license.component.ts","./src/app/editor/_components/dialogs/set-license.component.html","./src/app/editor/_components/forms/main/tag-row.component.ts","./src/app/editor/_components/forms/main/tag-row.component.html","./src/app/editor/_components/forms/shared/extension-row.component.ts","./src/app/editor/_components/forms/shared/extension-row.component.html","./src/app/editor/_components/forms/shared/aaiservers-section.component.ts","./src/app/editor/_components/forms/shared/aaiservers-section.component.html","./src/app/editor/_components/editors/operationtrait-editor.component.ts","./src/app/editor/_components/editors/operationtrait-editor.component.html","./src/app/editor/_components/forms/path/operation/formData-param-row.component.ts","./src/app/editor/_components/forms/path/operation/formData-param-row.component.html","./src/app/editor/_services/editors.service.ts","./src/app/editor/_components/forms/shared/query-param-row.component.ts","./src/app/editor/_components/forms/shared/query-param-row.component.html","./src/app/editor/_components/forms/path/operation/response-tab.component.ts","./src/app/editor/_components/forms/path/operation/response-tab.component.html","./src/app/editor/_components/forms/message-item.component.ts","./src/app/editor/_components/forms/message-item.component.html","./src/app/editor/_components/forms/shared/aaisecurity-requirement-row.component.ts","./src/app/editor/_components/forms/shared/aaisecurity-requirement-row.component.html","./src/app/editor/_components/common/markdown.component.ts","./src/app/editor/_components/common/inline-markdown-editor.component.ts","./src/app/editor/_components/common/inline-markdown-editor.component.html","./src/app/editor/_models/features.model.ts","./src/app/editor/_components/forms/operationtrait-item.component.ts","./src/app/editor/_components/forms/operationtrait-item.component.html","./src/app/editor/_components/forms/main-form.component.ts","./src/app/editor/_components/forms/main-form.component.html","./src/app/editor/_components/common/signpost.component.ts","./src/app/editor/_components/common/signpost.component.html","./src/app/editor/_components/dialogs/add-path.component.ts","./src/app/editor/_components/dialogs/add-path.component.html","./src/app/components/editors/asyncapi-editor.component.ts","./src/app/components/editors/asyncapi-editor.component.html","./src/app/editor/_components/title-bar/undo-icon.component.ts","./src/app/editor/_components/title-bar/undo-icon.component.html","./src/app/editor/_components/forms/shared/header-params-section.component.ts","./src/app/editor/_components/forms/shared/header-params-section.component.html","./src/app/editor/_components/forms/shared/security-requirements-section.component.ts","./src/app/editor/_components/forms/shared/security-requirements-section.component.html","./src/app/editor/_components/common/inline-editor.base.ts","./src/app/editor/_services/httpcode.service.ts","./src/app/editor/_components/forms/path/operation/responses-section.component.ts","./src/app/editor/_components/forms/path/operation/responses-section.component.html","./src/app/editor/_components/editors/response-editor.component.ts","./src/app/editor/_components/editors/response-editor.component.html","./src/app/editor/_components/title-bar/validation-icon.component.ts","./src/app/editor/_components/title-bar/validation-icon.component.html","./src/app/editor/_visitors/response-definitions.visitor.ts","./src/app/editor/_components/common/form-error-message.component.html","./src/app/editor/_components/common/form-error-message.component.ts","./src/app/editor/_components/common/ace-editor.component.ts","./src/app/editor/_components/forms/definition/property-row.component.ts","./src/app/editor/_components/forms/definition/property-row.component.html","./src/app/editor/_components/dialogs/add-example-20.component.ts","./src/app/editor/_components/dialogs/add-example-20.component.html","./src/app/editor/_services/document.service.ts","./src/app/editor/_components/dialogs/edit-aai-example.component.ts","./src/app/editor/_components/dialogs/edit-aai-example.component.html","./src/app/editor/_components/forms/main/aailicense-section.component.ts","./src/app/editor/_components/forms/main/aailicense-section.component.html","./src/app/editor/_components/forms/operationtrait-form.component.ts","./src/app/editor/_components/forms/operationtrait-form.component.html","./src/app/editor/_components/forms/main/security-schemes-section.component.ts","./src/app/editor/_components/forms/source-form.base.ts","./src/app/editor/_services/license.service.ts","./src/app/services/config.service.ts","./src/app/editor/_components/forms/main/aaicontact-section.component.ts","./src/app/editor/_components/forms/main/aaicontact-section.component.html","./src/app/editor/_components/dialogs/add-schema.component.ts","./src/app/editor/_components/dialogs/add-schema.component.html","./src/app/editor/_components/dialogs/edit-example.component.ts","./src/app/editor/_components/dialogs/edit-example.component.html","./src/app/editor/_components/common/search.component.ts","./src/app/editor/_components/common/search.component.html","./src/app/editor/_components/dialogs/add-channel.component.ts","./src/app/editor/_components/dialogs/add-channel.component.html","./src/app/editor/_components/common/path-item.component.ts","./src/app/editor/_components/common/path-item.component.html","./src/app/editor/_components/forms/path/info-section.component.ts","./src/app/editor/_components/forms/path/info-section.component.html","./src/app/editor/_components/common/code-editor.component.ts","./src/app/editor/_components/common/code-editor.component.html","./src/app/editor/_components/forms/shared/server-row.component.ts","./src/app/editor/_components/forms/shared/server-row.component.html","./src/app/editor/_components/forms/definition/example-section.component.ts","./src/app/editor/_components/forms/definition/example-section.component.html","./src/app/editor/_services/problems.service.ts","./src/app/editor/_components/forms/channel/operations-section.component.ts","./src/app/editor/_components/forms/channel/operations-section.component.html","./src/app/editor/_visitors/messagetrait-definitions.visitor.ts","./src/app/editor/_components/editors/server-editor.component.ts","./src/app/editor/_components/editors/server-editor.component.html","./src/app/editor/_components/master.component.ts","./src/app/editor/_components/master.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object","./src/app/editor/_visitors/channel-items.visitor.ts"],"names":[],"mappings":"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c,CAAC,UAAiC;QAC1D,OAAO,UAAU,CAAC,OAAO,EAAE,CAAC;IAChC,CAAC;IAED;;;OAGG;IACK,mBAAmB,CAAC,IAA2B;QACnD,8EAA8E;QAC9E,IAAI,IAAI,CAAC,cAAc,KAAK,IAAI,EAAE;YAC9B,OAAO,IAAI,CAAC;SACf;QACD,MAAM,IAAI,GAAW,IAAI,CAAC,OAAO,EAAE,CAAC;QACpC,IAAI,OAAO,IAAI,CAAC,cAAc,IAAI,QAAQ,EAAE;YACxC,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;SAChE;aAAM;YACH,OAAO,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;SACpC;IACL,CAAC;CAEJ;;;;;;;;;;;;;ACxa;AACR;AAEiD;AACb;AACP;AACS;AACJ;AACM;AACK;AACR;AACkB;AACZ;AACO;AACN;AACQ;AACP;AACA;AACZ;AACM;AACU;AACV;AACA;AACU;AACI;AACA;AACzB;AACW;AACvB;AACuB;AACM;AACE;AACI;AAClB;AACW;AACM;AACL;AACE;AACG;AACE;AACK;AACE;AACvC;AACE;AACJ;AACoB;AACL;AACA;AACU;AACC;AACW;AACrC;AACkC;AACI;AACN;AACW;AACX;AACW;AACjB;AACmC;AACZ;AACR;AACE;AACE;AAC3C;AACoC;AACtB;AACS;AACzB;AACwB;AACL;AACA;AACgB;AACI;AACG;AACU;AAC3B;AACQ;AACF;AACI;AACM;AACX;AACY;AAC/B;AACgB;AACd;AAC0B;AACS;AAClB;AACM;AACL;AACF;AACU;AACD;AACU;AACH;AACU;AACV;AACR;AACA;AACD;AACjB;AAC+B;AACH;AACpB;AACmB;AACxB;AACc;AACK;AACV;AAC7B;AACwC;AAChC;AAC4B;AACP;AACc;AACV;AACN;AACY;AACJ;AACd;AACA;AAC+B;AACxD;AAC8C;AACK;AACrB;AACH;AAClB;AACmB;AACc;AACT;AACD;AACyB;AACE;AACrB;AACZ;AACC;AACM;AACJ;AACgB;AACC;AACJ;AACV;AAC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","file":"main.f1910cac03fcd86fa252.js","sourcesContent":["/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AbstractBaseComponent} from \"./base-component\";\nimport { ChangeDetectorRef, Input, SimpleChanges, Directive } from \"@angular/core\";\nimport {OasDocument, Node} from \"@apicurio/data-models\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n@Directive()\nexport abstract class AbstractRowComponent<T extends Node, M> extends AbstractBaseComponent {\n\n    @Input() item: T;\n\n    protected _editing: boolean = false;\n    protected _tab: string = \"\";\n    protected _model: M = null;\n\n    protected constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        this.updateModel();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        if (changes[\"item\"]) {\n            this.updateModel();\n        }\n    }\n\n    protected abstract updateModel(): void;\n\n    public model(): M {\n        return this._model;\n    }\n\n    public document(): OasDocument {\n        return <OasDocument> this.item.ownerDocument();\n    }\n\n    public isEditing(): boolean {\n        return this._editing;\n    }\n\n    public isEditingTab(tab: string): boolean {\n        return this.isEditing() && this._tab === tab;\n    }\n\n    public toggleTab(tab: string): void {\n        if (this.isEditing() && this._tab === tab) {\n            this._editing = false;\n        } else {\n            this._editing = true;\n            this._tab = tab;\n        }\n        // Either way, let's fire off a selection event, since we're clearly at least\n        // looking at this element.\n        let selectedPath: string = ModelUtils.nodeToPath(this.item);\n        this.__selectionService.simpleSelect(selectedPath);\n    }\n\n}\n","/**\n * @license\n * Copyright 2018 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Input, OnChanges, SimpleChanges, ViewEncapsulation} from \"@angular/core\";\n\n@Component({\n    selector: \"json-summary\",\n    template: `<span class=\"json-summary\" [innerHTML]=\"convertedData\" [class.empty]=\"isEmpty()\"></span>`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class JsonSummaryComponent implements OnChanges {\n    @Input(\"data\")\n    data: string;\n    @Input(\"emptyText\")\n    emptyText: string = \"No value.\";\n\n    convertedData: string;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.isEmpty()) {\n            this.convertedData = this.emptyText;\n        } else {\n            this.convertedData = JSON.stringify(this.data);\n        }\n    }\n\n    public isEmpty(): boolean {\n        return this.data === null || this.data === undefined;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, ICommand, Library, AaiDocument, AaiInfo} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\n\n\n@Component({\n    selector: \"aaiinfo-section\",\n    templateUrl: \"aaiinfo-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AsyncApiInfoSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: AaiDocument;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public info(): AaiInfo {\n        return this.document.info;\n    }\n\n    /**\n     * returns the version.\n     */\n    public version(): string {\n        if (this.info()) {\n            return this.info().version;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * returns the description.\n     */\n    public description(): string {\n        if (this.info()) {\n            return this.info().description;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * returns the termsOfService.\n     */\n    public termsOfService(): string {\n        if (this.info()) {\n            return this.info().termsOfService;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Called when the user changes the version.\n     * @param newVersion\n     */\n    public onVersionChange(newVersion: string): void {\n        console.info(\"[AsyncApiInfoSectionComponent] User changed the version to: \", newVersion);\n        let command: ICommand = CommandFactory.createChangeVersionCommand(newVersion);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the description.\n     * @param newDescription\n     */\n    public onDescriptionChange(newDescription: string): void {\n        console.info(\"[AsyncApiInfoSectionComponent] User changed the description.\");\n        let command: ICommand = CommandFactory.createChangeDescriptionCommand(newDescription);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the terms of service.\n     * @param newTermsOfService\n     */\n    public onTermsOfServiceChange(newTermsOfService: string): void {\n        console.info(\"[AsyncApiInfoSectionComponent] User changed the terms of service.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.info(), \"termsOfService\", newTermsOfService);\n        this.commandService.emit(command);\n    }\n}\n","<section type=\"info\" label=\"INFO\" contextHelp=\"This section allows you to modify the Version and Description of the API.\" [collaborationNodePath]=\"[ '/info/version', '/info/description' ]\" [validationModels]=\"[info()]\" [validationProperties]=\"['version', 'description']\"\n    [validationShallow]=\"true\">\n    <span actions></span>\n    <div body>\n        <!-- Version -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"info()\" property=\"version\" [shallow]=\"true\"></validation-problem>\n            <span>Version</span>\n        </div>\n        <div class=\"section-field version\">\n            <pf-inline-text-editor [value]=\"version()\" [labelClass]=\"'api-version'\" [formClass]=\"'api-title-editor-form'\" [inputClass]=\"'api-item-editor api-version-editor api-version api-item-version'\" [baseNode]=\"info()\" nodePath=\"version\" [noValueMessage]=\"'N/A'\"\n                (onChange)=\"onVersionChange($event)\"></pf-inline-text-editor>\n        </div>\n        <!-- Description -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"info()\" property=\"description\" [shallow]=\"true\"></validation-problem>\n            <span>Description</span>\n        </div>\n        <div class=\"section-field description\">\n            <inline-markdown-editor [value]=\"description()\" [labelClass]=\"'api-description api-item-description'\" [formClass]=\"'api-description-editor-form'\" [inputClass]=\"'api-item-editor api-description-editor api-description api-item-description'\" [baseNode]=\"info()\"\n                nodePath=\"description\" [noValueMessage]=\"'No description.'\" (onChange)=\"onDescriptionChange($event)\"></inline-markdown-editor>\n        </div>\n        <!-- TermsOfService -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"info()\" property=\"termsOfService\" [shallow]=\"true\"></validation-problem>\n            <span>Terms of Service</span>\n        </div>\n        <div class=\"section-field termsOfService\">\n            <pf-inline-text-editor [value]=\"termsOfService()\" [labelClass]=\"'api-termsOfService'\" [formClass]=\"'api-title-editor-form'\" [inputClass]=\"'api-item-editor api-termsOfService-editor api-termsOfService api-item-termsOfService'\" [baseNode]=\"info()\" nodePath=\"termsOfService\"\n                [noValueMessage]=\"'No URL provided'\" (onChange)=\"onTermsOfServiceChange($event)\"></pf-inline-text-editor>\n        </div>\n    </div>\n</section>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {Aai20Schema} from \"@apicurio/data-models\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\n\n@Component({\n    selector: \"add-oneof-in-message-dialog\",\n    templateUrl: \"add-message-reference.component.html\"\n})\nexport class AddOneOfInMessageDialogComponent {\n\n    @Input() messages: Aai20Schema[];\n    @Output() onAdd: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"addReferenceModal\") addReferenceModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    refSelected: string;\n    messagesFromDocument: string[] = [];\n    alreadyUsedReferences: string[] = [];\n    messagesFromDocExists: boolean = false;\n    private _referenceOptions: DropDownOption[] = [];\n\n    constructor(){\n    }\n\n    /**\n     * Called to open the dialog.\n     * @param messages\n     */\n    public open(messages: string[], referencesAlreadyAdded: string[]): void{\n        this.messagesFromDocument = messages;\n        this.alreadyUsedReferences = referencesAlreadyAdded;\n        this.messagesFromDocExists = ObjectUtils.isNullOrUndefined(this.messagesFromDocument) || this.messagesFromDocument.length <= 0;\n        this._referenceOptions = messages.filter( f => !this.alreadyUsedReferences.includes(f) ).map(m => new DropDownOptionValue(m,m));\n        this._isOpen = true;\n        this.addReferenceModal.changes.subscribe(thing => {\n            if (this.addReferenceModal.first) {\n                this.addReferenceModal.first.show();\n            }\n        });\n    }\n\n    referenceOptions(): DropDownOption[]{\n        return this._referenceOptions;\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void{\n        this._isOpen = false;\n        this.refSelected = null;\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n        add(): void{\n        this.onAdd.emit(this.refSelected);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void{\n        this.addReferenceModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean{\n        return this._isOpen;\n    }\n\n}\n","<!-- Add refSelected in Message Dialog -->\n<div bsModal #addReferenceModal=\"bs-modal\" class=\"modal fade\" id=\"addReferenceModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addReferenceModal\" role=\"dialog\" aria-hidden=\"true\" [config]=\"{ backdrop: true }\" (onHidden)=\"close()\"\n    *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addReferenceModalLabel\">Add a message to the operation </h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Choose a message below and then click Add.</p>\n                <form id=\"addReference-form\" class=\"form-horizontal\" (submit)=\"add()\" #addReferenceForm=\"ngForm\" data-dismiss=\"modal\">\n\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-3 control-label required\" for=\"mt\">Reference </label>\n                        <div class=\"col-sm-9\">\n                            <drop-down id=\"mt\" [id]=\"'ref-message'\" [value]=\"refSelected\" [options]=\"referenceOptions()\"\n                                       (onValueChange)=\"refSelected = $event\" noSelectionLabel=\"Choose a message\"></drop-down>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!addReferenceForm.form.valid || messagesFromDocExists\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    AaiDocument,\n    AaiMessage,\n    AaiOperation,\n    CommandFactory,\n    ICommand,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\n\n@Component({\n    selector: \"headers-tab\",\n    templateUrl: \"headers-tab.component.html\",\n    styleUrls: [ \"headers-tab.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeadersTabComponent extends AbstractBaseComponent {\n\n    @Input() message: AaiMessage;\n\n    protected _model: SimplifiedType = null;\n    protected editing: boolean = false;\n    protected tab: string = \"\";\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n        private commandService: CommandService, private selectionService: SelectionService) {\n            super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public model(): SimplifiedType {\n        return this._model;\n    }\n    public document(): AaiDocument {\n        return <AaiDocument> this.message.ownerDocument();\n    }\n\n    public toggleTab(tab: string): void {\n        if (this.isEditing() && this.tab === tab) {\n            this.editing = false;\n        } else {\n            this.editing = true;\n            this.tab = tab;\n        }\n    }\n    public isEditing(): boolean {\n        return this.editing;\n    }\n    public isEditingTab(tab: string): boolean {\n        return this.isEditing() && this.tab === tab;\n    }\n\n    public toggleType(): void {\n        this.toggleTab(\"type\");\n    }\n    public isEditingType(): boolean {\n        return this.isEditingTab(\"type\");\n    }\n\n    public displayType(): SimplifiedType {\n        let type: SimplifiedType = new SimplifiedType();\n        if (this.message.headers && this.message.headers.$ref) {\n            type.type = this.message.headers.$ref;\n        }\n        return type;\n    }\n\n    public changeRefType(newType: SimplifiedType): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n\n        let command: ICommand = CommandFactory.createChangeHeadersRefCommand_Aai20(nt.type, this.message.parent() as AaiOperation);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n}\n","<div class=\"headers\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"reference\">\n            <span>Reference</span>\n        </div>\n        <div class=\"problem-flex type\" (click)=\"toggleType()\" [class.selected]=\"isEditingType()\">\n            <!-- <validation-problem [model]=\"message.headers\" property=\"$ref\"></validation-problem> --> \n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingType()\"></span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"mt-content\" *ngIf=\"isEditingType()\">\n                        <div class=\"mt-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"false\"\n                                                [dataTypesOnly]=\"true\"\n                                                (onChange)=\"changeRefType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!--\n    <div class=\"headers-reference\">\n        <div class=\"form-label\">Reference</div>\n        <div class=\"problem-flex\">\n            <pf-inline-text-editor [value]=\"messageHeadersRef()\" [noValueMessage]=\"'No reference.'\"\n                        [labelClass]=\"'api-version'\"\n                        [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                        [baseNode]=\"message\" nodePath=\"headers.$ref\"\n                        (onChange)=\"changeReference($event)\"></pf-inline-text-editor>\n        </div>\n    </div>\n    -->\n</div>","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ElementRef, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {ExtensibleNode} from \"@apicurio/data-models\";\nimport {CodeEditorMode} from \"../common/code-editor.component\";\n\n\n@Component({\n    selector: \"add-extension-dialog\",\n    templateUrl: \"add-extension.component.html\",\n    styleUrls: [\"add-extension.component.css\"]\n})\nexport class AddExtensionDialogComponent {\n\n    @Output() onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"addExtensionModal\") addExtensionModal: QueryList<ModalDirective>;\n    @ViewChildren(\"addExtensionInput\") addExtensionInput: QueryList<ElementRef>;\n\n    private _isOpen: boolean = false;\n    private _parent: ExtensibleNode;\n\n    name: string = \"\";\n    _value: string = \"\";\n    set value(value: string) {\n        this._value = value;\n        this.validateValue();\n    }\n    get value(): string {\n        return this._value;\n    }\n\n    extensionExists: boolean = false;\n    nameValid: boolean = false;\n    valueValid: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     */\n    public open(parent: ExtensibleNode): void {\n        this._parent = parent;\n        this.name = \"x-\";\n        this.nameValid = true;\n        this.extensionExists = false;\n        this.value = \"\";\n        this.valueValid = false;\n        this._isOpen = true;\n        this.addExtensionModal.changes.subscribe( () => {\n            if (this.addExtensionModal.first) {\n                this.addExtensionModal.first.show();\n            }\n        });\n\n        this.extensionExists = false;\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.name = \"\";\n        this.value = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        let extensionInfo: any = {\n            name: this.name,\n            value: JSON.parse(this._value)\n        };\n        this.onAdd.emit(extensionInfo);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addExtensionModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Called to initialize the selection/focus to the addExtensionInput field.\n     */\n    doSelect(): void {\n        this.addExtensionInput.first.nativeElement.focus();\n    }\n\n    validateName(name: string): void {\n        this.extensionExists = this._parent.getExtension(name) != null;\n        this.nameValid = name && name.startsWith(\"x-\");\n    }\n\n    valueEditorMode() {\n        return CodeEditorMode.JSON;\n    }\n\n    validateValue(): void {\n        try {\n            console.debug(\"Validating: \", this._value);\n            JSON.parse(this._value);\n            this.valueValid = true;\n        } catch (e) {\n            this.valueValid = false;\n        }\n        console.debug(\"valueValid is now: \", this.valueValid);\n    }\n}\n","<!-- Add Extension Dialog -->\n<div bsModal #addExtensionModal=\"bs-modal\" class=\"modal fade\" id=\"addExtensionModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addExtensionModalLabel\"\n     role=\"dialog\" aria-hidden=\"true\" (onShown)=\"doSelect()\" [config]=\"{ backdrop: true }\"\n     (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addExtensionModalLabel\">Add Extension</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter information about the new extension below and then click <strong>Add</strong>.</p>\n                <form id=\"addextension-form\" class=\"form-horizontal\" (submit)=\"add()\" #addExtensionForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label required\" for=\"extension\">Name</label>\n                        <div class=\"col-sm-10\">\n                            <input #addExtensionInput name=\"extension\" type=\"text\" id=\"extension\" class=\"form-control\" placeholder=\"Extension Name\"\n                                   required [(ngModel)]=\"name\" (ngModelChange)=\"validateName($event)\" #nameInput=\"ngModel\">\n                            <div class=\"form-error-message error\" *ngIf=\"extensionExists\">Extension already exists.</div>\n                            <div class=\"form-error-message error\" *ngIf=\"!nameValid\">Name must begin with \"x-\".</div>\n                            <form-error-message [inputModel]=\"nameInput\" [type]=\"'required'\">Name is required.</form-error-message>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\" for=\"extension-value\">Value</label>\n                        <div class=\"col-sm-10\">\n                            <code-editor [mode]=\"valueEditorMode()\" #codeEditor\n                                         id=\"extension-value\"\n                                         [debounceTime]=\"150\"\n                                         [(text)]=\"value\"\n                                         wordWrap=\"true\"\n                                         [editorStyle]=\"{ position: 'relative', height: '220px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <div class=\"form-error-message error\" *ngIf=\"!valueValid\">Valid JSON required.</div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!addExtensionForm.form.valid || extensionExists || !valueValid || !nameValid\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ElementRef, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {AaiChannelItem, AaiDocument} from \"@apicurio/data-models\";\n\n\n@Component({\n    selector: \"clone-channel-dialog\",\n    templateUrl: \"clone-channel.component.html\"\n})\nexport class CloneChannelDialogComponent {\n\n    @Input() channelRegex: string;\n    @Output() onClone: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"cloneChannelModal\") cloneChannelModal: QueryList<ModalDirective>;\n    @ViewChildren(\"cloneChannelInput\") cloneChannelInput: QueryList<ElementRef>;\n\n    private _isOpen: boolean = false;\n\n    channelName: string = \"\";\n    object: AaiChannelItem;\n\n    channelNames: string[] = [];\n    channelExists: boolean = false;\n\n    constructor() {\n    }\n\n    /**\n     * Called to open the dialog.\n     * @param document\n     * @param channel\n     */\n    public open(document: AaiDocument, channel: AaiChannelItem): void {\n        this.object = channel;\n        this.channelName = channel.getName();\n        this._isOpen = true;\n        this.cloneChannelModal.changes.subscribe( () => {\n            if (this.cloneChannelModal.first) {\n                this.cloneChannelModal.first.show();\n            }\n        });\n\n        this.channelNames = [];\n        this.channelExists = false;\n        if (document.channels) {\n            document.getChannels().forEach( channelItem => {\n                this.channelNames.push(channelItem.getName());\n            });\n        }\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.channelName = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"clone\".\n     */\n    clone(): void {\n        let modalData: any = {\n            channelName: this.channelName,\n            object: this.object\n        };\n        this.onClone.emit(modalData);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.cloneChannelModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Called to initialize the selection/focus to the cloneChannelInput field.\n     */\n    doSelect(): void {\n        this.cloneChannelInput.first.nativeElement.focus();\n        this.cloneChannelInput.first.nativeElement.selectionStart = this.cloneChannelInput.first.nativeElement.selectionEnd = this.channelName.length\n    }\n\n    /**\n     * Called whenever the user types anything in the channel field - this validates that the channel entered\n     * is OK.\n     * @param newChannelName\n     */\n    validateChannelName(newChannelName: string) {\n        this.channelExists = this.channelNames.indexOf(newChannelName) != -1;\n    }\n}\n","<!-- Clone Channel Dialog -->\n<div bsModal #cloneChannelModal=\"bs-modal\" class=\"modal fade\" id=\"cloneChannelModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"cloneChannelModalLabel\"\n     role=\"dialog\" aria-hidden=\"true\" (onShown)=\"doSelect()\" [config]=\"{ backdrop: true }\"\n     (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"cloneChannelModalLabel\">Clone Channel</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter a new channel name below and then click Clone.</p>\n                <form id=\"clonechannel-form\" class=\"form-horizontal\" (submit)=\"clone()\" #clonePathForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label required\" for=\"channelName\">Path</label>\n                        <div class=\"col-sm-10\">\n                            <input #pname=\"ngModel\" name=\"channel\" type=\"text\" id=\"channelName\" class=\"form-control\" placeholder=\"Enter a Channel name\"\n                                   pattern=\"{{ channelRegex }}\" required [(ngModel)]=\"channelName\"\n                                   (ngModelChange)=\"validateChannelName($event)\">\n                            <div class=\"form-error-message error\" *ngIf=\"channelExists\">Channel already exists.</div>\n                            <form-error-message [inputModel]=\"pname\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid channel name.</form-error-message>\n                            <form-error-message [inputModel]=\"pname\" [type]=\"'required'\">Channel name is required.</form-error-message>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clone()\" [disabled]=\"!clonePathForm.form.valid || channelExists\">Clone</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation} from \"@angular/core\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CollaboratorService} from \"../../_services/collaborator.service\";\nimport {AbstractCollaboratorComponent} from \"./collaborator-overlay.component\";\n\n@Component({\n    selector: \"collaborator-aggregate\",\n    templateUrl: \"collaborator-aggregate.component.html\",\n    styleUrls: [ \"collaborator-aggregate.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollaboratorAggregateComponent extends AbstractCollaboratorComponent {\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     * @param collaboratorService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService, collaboratorService: CollaboratorService) {\n        super(changeDetectorRef, documentService, selectionService, collaboratorService);\n    }\n\n    public displayText(): string {\n        let dt: string = \"?\";\n        if (this.hasCollaborators()) {\n            dt = \"\" + this.collaborators().length;\n            if (this.collaborators().length === 1) {\n                // First letter of the name\n                dt = this.collaborators()[0].fullName[0];\n            }\n        }\n        return dt;\n    }\n\n    public iconColor(): string {\n        let color: string = \"CD3EBA\";\n        if (this.hasCollaborators()) {\n            if (this.collaborators().length === 1) {\n                color = this.collaborators()[0].attributes[\"color\"];\n            }\n        }\n        return color;\n    }\n}\n","<span class=\"collaborator-aggregate\" *ngIf=\"hasCollaborators()\">\n    <a (mouseover)=\"open($event)\"\n       (mousemove)=\"open($event)\"\n       (mouseleave)=\"close()\"\n       (mouseout)=\"close()\"\n       class=\"collaborator-icon\"\n       [style.background-color]=\"'#' + iconColor()\">{{ displayText() }}</a>\n    <div *ngIf=\"isOpen()\" class=\"collaborator-aggregate-panel\" [style.left]=\"left\" [style.top]=\"top\">\n        <div class=\"collaborator\" *ngFor=\"let collaborator of collaborators()\" title=\"{{ collaborator.fullName }}\">\n            <span class=\"collaborator-icon\" [style.background-color]=\"'#' + iconColorFor(collaborator)\">&nbsp;</span>\n            <span class=\"collaborator-name\">{{ collaborator.fullName }}</span>\n            </div>\n    </div>\n</span>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {\n    AaiDocument,\n    AaiMessage,\n    AaiOperation,\n    CommandFactory,\n    ICommand,\n    Library,\n    NodePath,\n    ReferenceUtil\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../../_util/model.util\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {SchemaUtil} from \"../../../../_util/schema.util\";\nimport {EditorsService} from \"../../../../_services/editors.service\";\nimport {DropDownOption, DropDownOptionValue} from \"../../../common/drop-down.component\";\n\nconst INHERITANCE_TYPES: DropDownOption[] = [\n    new DropDownOptionValue(\"OneOf\", \"oneOf\")\n];\n\n@Component({\n    selector: \"message-section\",\n    templateUrl: \"message-section.component.html\",\n    styleUrls: [ \"message-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MessageSectionComponent extends AbstractBaseComponent {\n\n    @Input() operation: AaiOperation;\n\n    currentPart: string = 'payload';\n    nodePathToDel: NodePath = undefined;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     * @param editors\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService, private editors: EditorsService) {\n            super(changeDetectorRef, documentService, selectionService);\n    }\n\n    ngOnInit(): void {\n        console.log(\"operation.ownerDocument: \" + this.operation.ownerDocument());\n        if (this.operation.message != null) {\n            console.log(\"operation.message.ownerDocument: \" + this.operation.message.ownerDocument());\n            console.log(\"operation.message.name: \" + this.operation.message.name);\n            console.log(\"operation.message.title: \" + this.operation.message.title);\n            console.log(\"operation.message.description: \" + this.operation.message.description);\n        }\n    }\n\n    public messagePath(): string {\n        return ModelUtils.nodeToPath(this.operation) + \"/message\";\n    }\n\n    /**\n     * Called when the user selects the main/default element from the master area.\n     */\n    public selectMain(): void {\n        this.__selectionService.selectRoot();\n    }\n\n    /**\n     * Deselects the currently selected message definition.\n     */\n    public deselectMessage(): void {\n        this.selectMain();\n    }\n\n    public addOneOf(newOneOf: string){\n        let doc: AaiDocument = this.operation.ownerDocument() as AaiDocument;\n        let message: AaiMessage = doc.components.getMessage(newOneOf);\n        message.setReference(message.payload.$ref.replace(\"schemas\",\"messages\").replace(message.payload.$ref.split(\"/\")[3],message.getName()));\n        message.name = null;\n        message.payload = null;\n        let command: ICommand = CommandFactory.createAddOneOfInMessageCommand(message,this.operation.message);\n        this.commandService.emit(command);\n\n        let nodePath = Library.createNodePath(this.operation);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public deleteMessageInOneOf(data: AaiMessage, idx: number): void {\n        let command: ICommand = CommandFactory.createDeleteOneOfMessageCommand(data, idx);\n        this.commandService.emit(command);\n\n        let nodePath = Library.createNodePath(this.operation);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n\n    public isMultiMessages(): boolean {\n        if (ObjectUtils.isNullOrUndefined((this.messageFromOperation()))) {\n            return false;\n        }\n        return !ObjectUtils.isNullOrUndefined((this.messageFromOperation().oneOf)) && this.messageFromOperation().oneOf.length > 0;\n    }\n\n    //message from operation\n    public messageFromOperation(): AaiMessage {\n        return this.operation.message;\n    }\n\n    // Name Message list from document\n    public getMessagesFromDocument(): string[] {\n        let doc: AaiDocument = this.operation.ownerDocument() as AaiDocument;\n        return doc.components.getMessagesList().map( m =>\n            m.getName()\n        );\n    }\n\n    public referenceAlreadyAdd(): string[] {\n        return this.operation.message.oneOf.map(m => m.getReference().split('/')[3]);\n    }\n\n    public hasMessage(): boolean {\n        return !ObjectUtils.isNullOrUndefined((this.operation).message);\n    }\n\n    public schemaFormatOptions() {\n        return SchemaUtil.schemaFormatOptions;\n    }\n\n    public isPartActive(part: string): boolean {\n        return this.currentPart === part;\n    }\n    public setActivePart(part: string): void {\n        this.currentPart = part;\n    }\n\n    public oneOfName(message: AaiMessage): string {\n        if (message && message.$ref) {\n            const r: any = this.deref(message);\n            if (r && r.getName && r.getName()) {\n                return r.getName();\n            } else {\n                return message.$ref;\n            }\n        } else if (message.name) {\n            return message.name;\n        } else {\n            return \"Unknown message\";\n        }\n    }\n\n    public deref(message: AaiMessage){\n        return ReferenceUtil.resolveFragmentFromJS(this.messageFromOperation().ownerDocument(), message.$ref);\n    }\n\n    public changeName(newName: string): void {\n        console.info(\"[MessageSectionComponent] Changing message name to: \", this.messageFromOperation());\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageFromOperation(),\n                \"name\", newName);\n        this.commandService.emit(command);\n    }\n\n    public changeTitle(newTitle: string): void {\n        console.info(\"[MessageSectionComponent] Changing message title to: \", newTitle);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageFromOperation(),\n                \"title\", newTitle);\n        this.commandService.emit(command);\n    }\n\n    public changeSummary(newSummary: string): void {\n        console.info(\"[MessageSectionComponent] Changing message summary to: \", newSummary);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageFromOperation(),\n                \"summary\", newSummary);\n        this.commandService.emit(command);\n    }\n\n    public changeDescription(newDescription: string): void {\n        console.info(\"[MessageSectionComponent] Changing message description to: \", newDescription);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageFromOperation(),\n                \"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n    public changeContentType(newContentType: string): void {\n        console.info(\"[MessageSectionComponent] Changing message contentType to: \", newContentType);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageFromOperation(),\n                \"contentType\", newContentType);\n        this.commandService.emit(command);\n    }\n\n    public changeSchemaFormat(newSchemaFormat: boolean): void {\n        console.info(\"[MessageSectionComponent] Changing message schemaFormat to: \", newSchemaFormat);\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.messageFromOperation(),\n                \"schemaFormat\", newSchemaFormat);\n        this.commandService.emit(command);\n    }\n\n    public inheritanceType(): string {\n        return \"oneOf\";\n    }\n\n\n}\n","<section type=\"message\" label=\"MESSAGE\"\n         contextHelp=\"Use this section to configure the operation's Message.\"\n         [collaborationNodePath]=\"messagePath()\"\n         [validationModels]=\"[messageFromOperation()]\" [validationProperties]=\"[ 'name', 'title', 'summary', 'description' ]\">\n    <span actions>\n        <icon-button (onClick)=\"addOneOfDialog.open(getMessagesFromDocument(),referenceAlreadyAdd())\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a refrence into the message.'\"></icon-button>\n    </span>\n    <div body>\n        <!--<signpost *ngIf=\"!hasMessage()\">\n            <span>No message has been defined.</span>\n            <a (click)=\"addMessage()\">Add a message</a>\n        </signpost>-->\n\n        <div *ngIf=\"isMultiMessages()\">\n            <!-- One Of -->\n            <!-- Inheritance -->\n            <div class=\"section-field-label\">\n                <span>Inheritance Type OneOf</span>\n            </div><br>\n            <oneof-row *ngFor=\"let sel of this.messageFromOperation().oneOf; let idx = index\" [item]=\"sel\" [oneOfName]=\"oneOfName(sel)\"\n                          (onDelete)=\"deleteMessageInOneOf(this.messageFromOperation(),idx)\"></oneof-row>\n        </div>\n\n        <div class=\"half-section\" *ngIf=\"hasMessage() && !isMultiMessages()\">\n            <!-- Name -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'name'\"></validation-problem>\n                <span>Name</span>\n            </div>\n            <div class=\"section-field name\">\n                <pf-inline-text-editor [value]=\"messageFromOperation().name\" [noValueMessage]=\"'No name.'\"\n                                        [labelClass]=\"'api-version'\"\n                                        [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                        [baseNode]=\"messageFromOperation()\" nodePath=\"name\"\n                                        (onChange)=\"changeName($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Title -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'title'\"></validation-problem>\n                <span>Title</span>\n            </div>\n            <div class=\"section-field title\">\n                <pf-inline-text-editor [value]=\"messageFromOperation().title\" [noValueMessage]=\"'No title.'\"\n                                        [labelClass]=\"'api-version'\"\n                                        [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                        [baseNode]=\"messageFromOperation()\" nodePath=\"title\"\n                                        (onChange)=\"changeTitle($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Summary -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'summary'\"></validation-problem>\n                <span>Summary</span>\n            </div>\n            <div class=\"section-field summary\">\n                <pf-inline-text-editor [value]=\"messageFromOperation().summary\" [noValueMessage]=\"'No summary.'\"\n                                        [labelClass]=\"'api-version'\"\n                                        [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                        [baseNode]=\"messageFromOperation()\" nodePath=\"summary\"\n                                        (onChange)=\"changeSummary($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Description -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'description'\"></validation-problem>\n                <span>Description</span>\n            </div>\n            <div class=\"section-field description\">\n                <inline-markdown-editor [value]=\"messageFromOperation().description\" [noValueMessage]=\"'No description.'\"\n                                        [labelClass]=\"'api-item-editor api-description-editor operation-description api-item-description'\"\n                                        [inputClass]=\"'api-item-description'\"\n                                        [formClass]=\"'api-description-editor-form'\"\n                                        [baseNode]=\"messageFromOperation()\" nodePath=\"description\"\n                                        (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n            </div>\n        </div>\n\n        <div class=\"half-section right\" *ngIf=\"hasMessage() && !isMultiMessages()\">\n            <!-- Correlation ID -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'name'\"></validation-problem>\n                <span>Correlation ID</span>\n            </div>\n            <div class=\"section-field name\">\n                <pf-inline-text-editor [value]=\"messageFromOperation().name\" [noValueMessage]=\"'No name.'\"\n                                        [labelClass]=\"'api-version'\"\n                                        [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                        [baseNode]=\"messageFromOperation()\" nodePath=\"name\"\n                                        (onChange)=\"changeName($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Content Type -->\n            <div class=\"section-field-label\" *ngIf=\"hasMessage() && !isMultiMessages()\">\n                <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'contentType'\"></validation-problem>\n                <span>Content Type</span>\n            </div>\n            <div class=\"section-field contentType\">\n                <pf-inline-text-editor [value]=\"messageFromOperation().contentType\" [noValueMessage]=\"'No content type. Default will apply.'\"\n                                        [labelClass]=\"'api-version'\"\n                                        [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                        [baseNode]=\"messageFromOperation()\" nodePath=\"contentType\"\n                                        (onChange)=\"changeContentType($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Schema Format -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'schemaFormat'\"></validation-problem>\n                <span>Schema Format</span>\n            </div>\n            <div class=\"section-field schemaFormat\">\n                <drop-down [value]=\"messageFromOperation().schemaFormat\"\n                                        [options]=\"schemaFormatOptions()\"\n                                        (onValueChange)=\"changeSchemaFormat($event)\"\n                                        noSelectionLabel=\"No Schema Format\"></drop-down>\n            </div>\n        </div>\n\n        <div class=\"section-field-label\" *ngIf=\"hasMessage() && !isMultiMessages()\">\n            <validation-problem [model]=\"messageFromOperation()\" [shallow]=\"true\" [property]=\"'payload'\"></validation-problem>\n            <span>Content</span>\n        </div>\n        <div class=\"parts-tabs\" *ngIf=\"hasMessage() && !isMultiMessages()\">\n            <div class=\"tab\" [class.active]=\"isPartActive('payload')\">\n                <a (click)=\"setActivePart('payload')\">\n                    <span>Payload</span>\n                </a>\n            </div>\n            <div class=\"tab\" [class.active]=\"isPartActive('headers')\">\n                <a (click)=\"setActivePart('headers')\">\n                    <span>Headers</span>\n                </a>\n            </div>\n        </div>\n        <div class=\"parts-tab-content\" *ngIf=\"hasMessage() && !isMultiMessages() \">\n            <payload-tab [message]=\"messageFromOperation()\" *ngIf=\"isPartActive('payload')\"></payload-tab>\n            <headers-tab [message]=\"messageFromOperation()\" *ngIf=\"isPartActive('headers')\"></headers-tab>\n        </div>\n    </div>\n\n</section>\n<add-oneof-in-message-dialog #addOneOfDialog (onAdd)=\"addOneOf($event)\" ></add-oneof-in-message-dialog>\n\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    Aai20SchemaDefinition,\n    AaiDocument, DocumentType,\n    Node,\n    Oas20SchemaDefinition,\n    Oas30SchemaDefinition,\n    OasDocument, ReferenceUtil,\n    SimplifiedType,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {FindSchemaDefinitionsVisitor, FindAaiSchemaDefinitionsVisitor} from \"../../../_visitors/schema-definitions.visitor\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {DIVIDER, DropDownOption, DropDownOptionValue} from \"../../common/drop-down.component\";\n\n\n/**\n * Component to select a \"SimplifiedType\" value\n */\n@Component({\n    selector: \"schema-type-editor\",\n    templateUrl: \"schema-type-editor.component.html\",\n    styleUrls: [ \"schema-type-editor.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SchemaTypeEditorComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument | AaiDocument;\n    @Input() value: SimplifiedType;\n    @Input() typeLabel: string = \"Type\";\n    @Input() validationModel: Node;\n    @Input() validationProperty: string;\n\n    /**\n     * Is the component being used in \"data type\" definition?\n     * i.e. should the dropdown contain references to data type schemas?\n     */\n    @Input() isParameter: boolean = false;\n\n    /**\n     * Should the component list \"data type\" definition only?\n     * i.e. should the primitive types and As/Of fields be masked?\n     */\n    @Input() dataTypesOnly: boolean = false;\n\n    /**\n     * Emit the value when it is updated\n     */\n    @Output() onChange: EventEmitter<SimplifiedType> = new EventEmitter<SimplifiedType>();\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public hasValidationModel(): boolean {\n        return this.validationModel !== null && this.validationModel !== undefined;\n    }\n\n    public type(): string {\n        if (!ObjectUtils.isNullOrUndefined(this.value)) {\n            if (this.value.isEnum()) {\n                return \"enum\";\n            }\n            return ObjectUtils.undefinedAsNull(this.value.type);\n        }\n        return null;\n    }\n\n    /**\n     * Main options\n     */\n    public typeOptions(): DropDownOption[] {\n        let options: DropDownOption[] = [];\n\n        let primitiveTypesOptions: DropDownOption[] = [\n            new DropDownOptionValue(\"Array\", \"array\"),\n            new DropDownOptionValue(\"Enum\", \"enum\"),\n            DIVIDER,\n            new DropDownOptionValue(\"String\", \"string\"),\n            new DropDownOptionValue(\"Integer\", \"integer\"),\n            new DropDownOptionValue(\"Boolean\", \"boolean\"),\n            new DropDownOptionValue(\"Number\", \"number\")\n        ];\n\n        /**\n         * Add primitive types to the dropdown menu\n         */\n        if (!this.dataTypesOnly) {\n            options.push(...primitiveTypesOptions);\n        }\n\n        /**\n         * Add schema definitions to the dropdown menu\n         */\n        let schemaDefinitionsOptions = this.getSchemaDefinitionsOptions();\n        if (schemaDefinitionsOptions.length > 0) {\n            if (options.length > 0) {\n                options.push(DIVIDER);\n            }\n            options.push(...schemaDefinitionsOptions);\n        }\n\n        if (!this.isParameter && !this.dataTypesOnly && this.document.getDocumentType() === DocumentType.openapi2) {\n            if (options.length > 0) {\n                options.push(DIVIDER);\n            }\n            options.push(new DropDownOptionValue(\"File\", \"file\"));\n        }\n\n        return options;\n    }\n\n    public typeOf(): string {\n        if (this.value && this.value.of) {\n            return ObjectUtils.undefinedAsNull(this.value.of.type);\n        }\n        return null;\n    }\n\n    /**\n     * Additional options when e.g. an array is selected,\n     * to choose the type of the array elements\n     */\n    public typeOfOptions(): DropDownOption[] {\n        let options: DropDownOption[] = [\n            new DropDownOptionValue(\"String\", \"string\"),\n            new DropDownOptionValue(\"Integer\", \"integer\"),\n            new DropDownOptionValue(\"Boolean\", \"boolean\"),\n            new DropDownOptionValue(\"Number\", \"number\")\n        ];\n\n        if (!this.isParameter) {\n            options = [...options, ...this.getSchemaDefinitionsOptions()]\n        }\n        return options;\n    }\n\n    /**\n     * Get additional options, when reference to \"schema definition data type\"\n     * can be used\n     */\n    private getSchemaDefinitionsOptions(): DropDownOption[] {\n        let options: DropDownOption[] = [];\n        let refPrefix: string = \"#/components/schemas/\";\n        if (this.document.getDocumentType() === DocumentType.openapi2) {\n            refPrefix = \"#/definitions/\";\n        }\n\n        // Schema Def filter used when the type is a parameter\n        const isSimpleType: (schemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition, recursionDepth?: number) => boolean = (schemaDef, recursionDepth) => {\n            if (!recursionDepth) {\n                recursionDepth = 1;\n            }\n            if (schemaDef.type === \"string\" || schemaDef.type === \"number\" || schemaDef.type === \"integer\" || schemaDef.type === \"boolean\") {\n                return true;\n            }\n            if (recursionDepth < 5 && schemaDef.$ref !== null && ReferenceUtil.canResolveRef(schemaDef.$ref, schemaDef)) {\n                const resolvedSchemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition = <any>(ReferenceUtil.resolveNodeRef(schemaDef));\n                return isSimpleType(resolvedSchemaDef, recursionDepth + 1);\n            }\n\n            // TODO if the SchemaDef is an **external** \"$ref\" we need to resolve it here and include it if the $ref points to a simple\n            // type schema.  This should use the API catalog to resolve the reference.\n\n            return false;\n        };\n\n        let defs: (Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition)[];\n        if (this.document.getDocumentType() === DocumentType.openapi3 || this.document.getDocumentType() === DocumentType.openapi2) {\n            const filterCriteria: any = this.isParameter ? isSimpleType : null;\n            let viz: FindSchemaDefinitionsVisitor = new FindSchemaDefinitionsVisitor(filterCriteria);\n            VisitorUtil.visitTree(this.document, viz, TraverserDirection.down);\n            defs = viz.getSortedSchemaDefinitions();\n        } else if (this.document.getDocumentType() === DocumentType.asyncapi2) {\n            let viz: FindAaiSchemaDefinitionsVisitor = new FindAaiSchemaDefinitionsVisitor(null);\n            VisitorUtil.visitTree(this.document, viz, TraverserDirection.down);\n            defs = viz.getSortedSchemaDefinitions();\n        }\n\n        if (defs.length > 0) {\n            defs.forEach(def => {\n                let defName: string = def.getName();\n                options.push(new DropDownOptionValue(defName, refPrefix + defName));\n            });\n        }\n        return options;\n    }\n\n    public typeAs(): string {\n        if (ObjectUtils.isNullOrUndefined(this.value)) {\n            return null;\n        }\n        if (this.value.isArray() && this.value.of && this.value.of.isSimpleType()) {\n            return ObjectUtils.undefinedAsNull(this.value.of.as);\n        }\n        if (this.value.isSimpleType()) {\n            return ObjectUtils.undefinedAsNull(this.value.as);\n        }\n        if (this.value.isFileType()) {\n            return ObjectUtils.undefinedAsNull(this.value);\n        }\n        return null;\n    }\n\n    /**\n     * Specify a \"sub-type\" for some of the selected types,\n     * e.g. int64 for an Integer\n     */\n    public typeAsOptions(): DropDownOption[] {\n        let options: DropDownOption[];\n        let st: SimplifiedType = this.value;\n        if (this.value && this.value.isArray() && this.value.of && this.value.of.isSimpleType()) {\n            st = this.value.of;\n        }\n        if (st.type === \"string\") {\n            options = [\n                new DropDownOptionValue(\"String\", null),\n                new DropDownOptionValue(\"Byte\", \"byte\"),\n                new DropDownOptionValue(\"Binary\", \"binary\"),\n                new DropDownOptionValue(\"Date\", \"date\"),\n                new DropDownOptionValue(\"DateTime\", \"date-time\"),\n                new DropDownOptionValue(\"Password\", \"password\")\n            ];\n        } else if (st.type === \"integer\") {\n            options = [\n                new DropDownOptionValue(\"Integer\", null),\n                new DropDownOptionValue(\"32-Bit Integer\", \"int32\"),\n                new DropDownOptionValue(\"64-Bit Integer\", \"int64\")\n            ];\n        } else if (st.type === \"number\") {\n            options = [\n                new DropDownOptionValue(\"Number\", null),\n                new DropDownOptionValue(\"Float\", \"float\"),\n                new DropDownOptionValue(\"Double\", \"double\")\n            ];\n        }\n        return options;\n    }\n\n    public shouldShowFormattedAs(): boolean {\n        let st: SimplifiedType = this.value;\n        if (this.value && this.value.isArray() && this.value.of && this.value.of.isSimpleType()) {\n            st = this.value.of;\n        }\n        return st && st.isSimpleType() && !st.isEnum() && (st.type !== \"boolean\");\n    }\n\n    public shouldShowEnumEditor(): boolean {\n        return this.value && this.value.isEnum();\n    }\n\n    public changeType(type: string): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        if (type === \"enum\") {\n            nt.type = \"string\";\n            nt.enum_ = [];\n            nt.of = null;\n            nt.as = null;\n        } else {\n            nt.type = type;\n            nt.enum_ = null;\n            nt.of = null;\n            nt.as = null;\n        }\n        this.onChange.emit(nt);\n    }\n\n    public changeTypeEnum(value: string[]): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = this.value.type;\n        if (!nt.type) {\n            nt.type = \"string\";\n        }\n        nt.enum_ = value;\n        nt.of = null;\n        nt.as = null;\n        this.onChange.emit(nt);\n    }\n\n    public changeTypeOf(typeOf: string): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = this.value.type;\n        nt.of = new SimplifiedType();\n        nt.of.type = typeOf;\n        nt.as = null;\n        this.onChange.emit(nt);\n    }\n\n    public changeTypeAs(typeAs: string): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = this.value.type;\n        nt.enum_ = null;\n        if (nt.isSimpleType()) {\n            nt.of = null;\n            nt.as = typeAs;\n        }\n        if (nt.isArray()) {\n            nt.of = new SimplifiedType();\n            nt.of.as = typeAs;\n            if (this.value.of) {\n                nt.of.type = this.value.of.type;\n            }\n        }\n        this.onChange.emit(nt);\n    }\n\n    public isArray(): boolean {\n        return this.value && this.value.type === \"array\";\n    }\n}\n","<div class=\"schema-type-type\">\n    <span class=\"strong dropdown-label\">{{ typeLabel }}:</span>\n    <validation-problem *ngIf=\"hasValidationModel()\" [model]=\"validationModel\" [property]=\"validationProperty\"></validation-problem>\n    <drop-down [id]=\"'api-property-type'\"\n               [value]=\"type()\"\n               [options]=\"typeOptions()\"\n               (onValueChange)=\"changeType($event)\"\n               [noSelectionLabel]=\"'Choose Type'\"></drop-down>\n    <span class=\"dropdowns-label\" *ngIf=\"isArray()\">of</span>\n    <drop-down *ngIf=\"isArray()\"\n               [id]=\"'api-property-type-of'\"\n               [value]=\"typeOf()\"\n               [options]=\"typeOfOptions()\"\n               (onValueChange)=\"changeTypeOf($event)\"\n               [noSelectionLabel]=\"'Choose Type'\"></drop-down>\n    <span class=\"dropdowns-label\" *ngIf=\"shouldShowFormattedAs()\">as</span>\n    <drop-down *ngIf=\"shouldShowFormattedAs()\"\n               [id]=\"'api-property-type-as'\"\n               [value]=\"typeAs()\"\n               [options]=\"typeAsOptions()\"\n               (onValueChange)=\"changeTypeAs($event)\"\n               [noSelectionLabel]=\"'Format'\"></drop-down>\n</div>\n<div class=\"schema-type-enum\" *ngIf=\"shouldShowEnumEditor()\">\n    <span class=\"enum-label\">Enum Values:</span>\n    <inline-array-editor [value]=\"value.enum_\" (onChange)=\"changeTypeEnum($event)\"\n                         noValueMessage=\"Click to define enum values.\"></inline-array-editor>\n</div>\n","/**\n * @license\n * Copyright 2017 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AfterContentChecked, AfterViewChecked, Directive, ElementRef, HostListener, Input} from \"@angular/core\";\n\n@Directive({\n    selector: \"textarea[autosize]\"\n})\nexport class TextAreaAutosize implements AfterContentChecked {\n\n    @HostListener(\"input\", [\"$event.target\"])\n    onInput(textArea: HTMLTextAreaElement): void {\n        this.adjust();\n    }\n\n    constructor(public element: ElementRef) {}\n\n    ngAfterContentChecked(): void {\n        this.adjust();\n    }\n\n    adjust(): void {\n        this.element.nativeElement.style.overflow = \"hidden\";\n        this.element.nativeElement.style.height = \"auto\";\n        this.element.nativeElement.style.height = this.element.nativeElement.scrollHeight + \"px\";\n    }\n}\n\n\n@Directive({\n    selector: \"div[autoheight]\"\n})\nexport class DivAutoHeight implements AfterViewChecked {\n\n    lastHeight: number = -1;\n\n    @Input() maxHeight: number;\n\n    constructor(public element: ElementRef) {\n    }\n\n    ngAfterViewChecked(): void {\n        this.adjust();\n    }\n\n    adjust(): void {\n        let height: number = this.element.nativeElement.scrollHeight;\n        if (this.maxHeight && height > this.maxHeight) {\n            height = this.maxHeight;\n        }\n        if (Math.abs(height - this.lastHeight) > 5) {\n            this.element.nativeElement.style.height = height + \"px\";\n            this.lastHeight = height;\n            if (height == this.maxHeight) {\n                this.element.nativeElement.style.overflowY = \"auto\";\n            } else {\n                this.element.nativeElement.style.overflowY = \"visible\";\n            }\n        }\n    }\n}\n\n\n@Directive({\n    selector: \"input[autosize]\"\n})\nexport class TextBoxAutosize implements AfterContentChecked {\n\n    @HostListener(\"input\", [\"$event.target\"])\n    onInput(textInput: HTMLInputElement): void {\n        this.adjust();\n    }\n\n    constructor(public element: ElementRef) {\n    }\n\n    ngAfterContentChecked(): void {\n        this.adjust();\n    }\n\n    adjust(): void {\n        this.element.nativeElement.style.width = \"auto\";\n        this.element.nativeElement.style.width = this.element.nativeElement.scrollWidth + \"px\";\n        console.info(\"New Width: \", this.element.nativeElement.style.width);\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, SimpleChanges, ViewEncapsulation, Directive } from \"@angular/core\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CollaboratorService} from \"../../_services/collaborator.service\";\nimport {TopicSubscription} from \"apicurio-ts-core\";\nimport {ApiEditorUser} from \"../../_models/editor-user.model\";\n\n/**\n * Common base class for collaboration components (overlay and aggregate icon).\n */\n@Directive()\nexport abstract class AbstractCollaboratorComponent extends AbstractBaseComponent {\n\n    @Input() nodePath: string | string[];\n\n    private _open: boolean = false;\n    public left: string;\n    public top: string;\n\n    private _collaborators: ApiEditorUser[];\n\n    private _collabSub: TopicSubscription<ApiEditorUser>;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     * @param collaboratorService\n     */\n    protected constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService, private collaboratorService: CollaboratorService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this._collabSub = this.collaboratorService.collaboratorSelection().subscribe(() => {\n            this.updateCollaborators();\n            this.__changeDetectorRef.markForCheck();\n        });\n    }\n\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        if (this._collabSub) {\n            this._collabSub.unsubscribe();\n        }\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.updateCollaborators();\n    }\n\n    protected onDocumentChange(): void {\n        this.updateCollaborators();\n    }\n\n    /**\n     * Update the list of collaborators for the currently configured node path.\n     */\n    protected updateCollaborators(): void {\n        // console.info(\"[CollaboratorOverlayComponent] Determine collaborators for node path: \", this.nodePath);\n        if (Array.isArray(this.nodePath)) {\n            this._collaborators = [];\n            (<string[]>this.nodePath).forEach( nodePath => {\n                this._collaborators = this._collaborators.concat(this.collaboratorService.getCollaboratorsForPath(nodePath));\n            });\n        } else {\n            this._collaborators = this.collaboratorService.getCollaboratorsForPath(<string>this.nodePath);\n        }\n        // console.info(\"[CollaboratorOverlayComponent] # Collaborators found: \", this._collaborators.length);\n    }\n\n    public open(event: MouseEvent): void {\n        this.left = (event.clientX + 5) + \"px\";\n        this.top = (event.clientY + 12) + \"px\";\n        this._open = true;\n    }\n\n    public close(): void {\n        this._open = false;\n    }\n\n    public isOpen(): boolean {\n        return this._open;\n    }\n\n    public hasCollaborators(): boolean {\n        return this._collaborators && this._collaborators.length > 0;\n    }\n\n    public collaborators(): ApiEditorUser[] {\n        return this._collaborators;\n    }\n\n    public iconColorFor(collaborator: ApiEditorUser): string {\n        let color: string = collaborator.attributes[\"color\"];\n        if (color === null) {\n            color = \"CD3EBA\";\n        }\n        return color;\n    }\n}\n\n\n@Component({\n    selector: \"collaborator-overlay\",\n    templateUrl: \"collaborator-overlay.component.html\",\n    styleUrls: [ \"collaborator-overlay.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollaboratorOverlayComponent extends AbstractCollaboratorComponent {\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     * @param collaboratorService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService, collaboratorService: CollaboratorService) {\n        super(changeDetectorRef, documentService, selectionService, collaboratorService);\n    }\n\n    public overlayColor(): string {\n        let color: string = \"CD3EBA\";\n        if (this.hasCollaborators()) {\n            if (this.collaborators().length === 1) {\n                color = this.collaborators()[0].attributes[\"color\"];\n            }\n        }\n        return color;\n    }\n}\n","<span class=\"collaborator-overlay\" *ngIf=\"hasCollaborators()\" [style.border-color]=\"'#' + overlayColor()\">\n    <a (mouseover)=\"open($event)\"\n       (mousemove)=\"open($event)\"\n       (mouseleave)=\"close()\"\n       (mouseout)=\"close()\"\n       class=\"collaborator-overlay-icon\"\n       [style.background-color]=\"'#' + overlayColor()\">&nbsp;</a>\n    <div *ngIf=\"isOpen()\" class=\"collaborator-overlay-panel\" [style.left]=\"left\" [style.top]=\"top\">\n        <div class=\"collaborator\" *ngFor=\"let collaborator of collaborators()\" title=\"{{ collaborator.fullName }}\">\n            <span class=\"collaborator-icon\" [style.background-color]=\"'#' + iconColorFor(collaborator)\">&nbsp;</span>\n            <span class=\"collaborator-name\">{{ collaborator.fullName }}</span>\n            </div>\n    </div>\n</span>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AfterViewInit, Component, Input, QueryList, ViewChildren, ViewEncapsulation} from \"@angular/core\";\nimport {TextAreaEditorComponent} from \"./inline-editor.base\";\nimport {OasSchema} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {StringUtils} from \"apicurio-ts-core\";\nimport {CodeEditorComponent, CodeEditorMode} from \"./code-editor.component\";\n\n@Component({\n    selector: \"inline-example-editor\",\n    templateUrl: \"inline-example-editor.component.html\",\n    styleUrls: [ \"inline-example-editor.component.css\" ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class InlineExampleEditorComponent extends TextAreaEditorComponent implements AfterViewInit {\n\n    @Input() schema: OasSchema;\n\n    @ViewChildren(\"codeEditor\") codeEditor: QueryList<CodeEditorComponent>;\n\n    _mode: CodeEditorMode = CodeEditorMode.JSON;\n\n    constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    ngAfterViewInit(): void {\n        this.codeEditor.changes.subscribe(changes => {\n            if (changes.last) {\n                changes.last.focus();\n            }\n        });\n    }\n\n    displayValue(): string {\n        if (this.isEmpty()) {\n            return this.noValueMessage;\n        }\n        return this.formatValue(this.value);\n    }\n\n\n    public codeEditorMode(): CodeEditorMode {\n        return this._mode;\n    }\n\n    public canGenerateExample(): boolean {\n        return this.schema !== null && this.schema !== undefined;\n    }\n\n    public generate(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.schema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.codeEditor.first.setText(exampleStr);\n    }\n\n    public updateModeFromContent(text: string): void {\n        if (StringUtils.isJSON(text)) {\n            this._mode = CodeEditorMode.JSON;\n        } else if (StringUtils.isXml(text)) {\n            this._mode = CodeEditorMode.XML;\n        } else {\n            this._mode = CodeEditorMode.YAML;\n        }\n    }\n\n}\n","<div class=\"inline-example-editor-label\" *ngIf=\"!editing\" (click)=\"onStartEditing()\" title=\"Click to edit.\">\n    <pre *ngIf=\"!isEmpty()\">{{ displayValue() }}</pre>\n    <div class=\"no-value\" *ngIf=\"isEmpty()\">\n        <span class=\"empty\">{{ noValueMessage }}</span>\n        <i class=\"glyphicon glyphicon-pencil\"></i>\n    </div>\n</div>\n<div class=\"inline-editor inline-example-editor\" *ngIf=\"editing\" (keyup)=\"onInputKeypress($event)\">\n    <code-editor [mode]=\"codeEditorMode()\" #codeEditor\n                 [debounceTime]=\"150\"\n                 [(text)]=\"evalue\"\n                 (textChange)=\"updateModeFromContent($event)\"\n                 wordWrap=\"true\"\n                 [editorStyle]=\"{ position: 'relative', height: '220px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n    <button title=\"Save changes.\" class=\"btn btn-xs btn-primary btn-save\" (click)=\"onSave()\"><span class=\"fa fa-fw fa-check\"></span></button>\n    <button title=\"Cancel changes.\" class=\"btn btn-xs btn-default btn-cancel\" (click)=\"onCancel()\"><span class=\"fa fa-fw fa-close\"></span></button>\n    <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generate()\"\n            *ngIf=\"canGenerateExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    Library,\n    Oas20Document,\n    Oas20SchemaDefinition,\n    Oas30Document,\n    Oas30SchemaDefinition,\n    OasDocument,\n    OasSchema, ReferenceUtil,\n    SimplifiedType,\n    TraverserDirection,\n    VisitorUtil,\n} from \"@apicurio/data-models\";\n\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {CloneDefinitionDialogComponent} from \"../dialogs/clone-definition.component\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {EditorsService} from \"../../_services/editors.service\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../dialogs/rename-entity.component\";\nimport {ApiCatalogService} from \"../../_services/api-catalog.service\";\nimport {DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\nconst INHERITANCE_TYPES: DropDownOption[] = [\n    new DropDownOptionValue(\"No inheritance\", \"none\"),\n    new DropDownOptionValue(\"AnyOf\", \"anyOf\"),\n    new DropDownOptionValue(\"AllOf\", \"allOf\"),\n    new DropDownOptionValue(\"OneOf\", \"oneOf\")\n];\nconst INHERITANCE_TYPES_20: DropDownOption[] = [\n    new DropDownOptionValue(\"No inheritance\", \"none\"),\n    new DropDownOptionValue(\"AllOf\", \"allOf\")\n];\n\n\n@Component({\n    selector: \"definition-form\",\n    templateUrl: \"definition-form.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefinitionFormComponent extends SourceFormComponent<OasSchema> {\n\n    private _stype: SimplifiedType = null;\n\n    private _definition: Oas20SchemaDefinition | Oas30SchemaDefinition;\n    @Input()\n    set definition(definition: Oas20SchemaDefinition | Oas30SchemaDefinition) {\n        this._definition = definition;\n        this.sourceNode = definition;\n        this._stype = null;\n        this.revertSource();\n    }\n\n    get definition(): Oas20SchemaDefinition | Oas30SchemaDefinition {\n        return this._definition;\n    }\n\n    @ViewChild(\"cloneDefinitionDialog\", { static: true }) cloneDefinitionDialog: CloneDefinitionDialogComponent;\n    @ViewChild(\"renameDefinitionDialog\", { static: true }) renameDefinitionDialog: RenameEntityDialogComponent;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param selectionService\n     * @param commandService\n     * @param documentService\n     * @param editors\n     * @param catalog\n     */\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n                       protected selectionService: SelectionService,\n                       protected commandService: CommandService,\n                       protected documentService: DocumentService,\n                       private editors: EditorsService,\n                       private catalog: ApiCatalogService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    public definitionName(): string {\n        return this._definitionName(this.definition);\n    }\n\n    isImported(): boolean {\n        return this.definition.$ref && !this.definition.$ref.startsWith(\"#\");\n    }\n\n    protected createEmptyNodeForSource(): Oas20SchemaDefinition | Oas30SchemaDefinition {\n        if (this.definition.ownerDocument().getDocumentType() == DocumentType.openapi2) {\n            return (this.definition.ownerDocument() as Oas20Document).definitions.createSchemaDefinition(this.definitionName());\n        } else {\n            return (this.definition.ownerDocument() as Oas30Document).components.createSchemaDefinition(this.definitionName());\n        }\n    }\n\n    protected createReplaceNodeCommand(node: Oas20SchemaDefinition | Oas30SchemaDefinition): ICommand {\n        return CommandFactory.createReplaceSchemaDefinitionCommand(this.definition.ownerDocument().getDocumentType(), this.definition, node);\n    }\n\n    public delete(): void {\n        console.info(\"[DefinitionFormComponent] Deleting schema definition.\");\n        let command: ICommand = CommandFactory.createDeleteSchemaDefinitionCommand(this.definition.ownerDocument().getDocumentType(),\n            this.definitionName());\n        this.commandService.emit(command);\n    }\n\n    public clone(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            this.cloneDefinitionDialog.open(<OasDocument> this.definition.ownerDocument(), this.definition);\n        } else {\n            let definition: Oas20SchemaDefinition | Oas30SchemaDefinition = modalData.definition;\n            console.info(\"[DefinitionFormComponent] Clone definition: %s\", modalData.name);\n            let cloneSrcObj: any = Library.writeNode(definition);\n            let command: ICommand = CommandFactory.createAddSchemaDefinitionCommand(this.definition.ownerDocument().getDocumentType(),\n                modalData.name, cloneSrcObj);\n            this.commandService.emit(command);\n        }\n    }\n\n    public rename(event?: RenameEntityEvent): void {\n        if (undefined === event || event === null) {\n            let schemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition = this.definition;\n            let name: string = this.definitionName();\n            let definitionNames: string[] = [];\n            let form: DefinitionFormComponent = this;\n            VisitorUtil.visitTree(this.definition.ownerDocument(), new class extends CombinedVisitorAdapter {\n                public visitSchemaDefinition(node: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n                    definitionNames.push(form._definitionName(node));\n                }\n            }, TraverserDirection.down);\n            this.renameDefinitionDialog.open(schemaDef, name, newName => {\n                return definitionNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let oldName: string = this.definitionName();\n            console.info(\"[DefinitionFormComponent] Rename definition to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameSchemaDefinitionCommand(this.definition.ownerDocument().getDocumentType(),\n                oldName, event.newName);\n            this.commandService.emit(command);\n            // TODO reselect the renamed definition - we can fabricate the path and then fire a selection event.\n        }\n    }\n\n    public enableSourceMode(): void {\n        this.sourceNode = this.definition;\n        super.enableSourceMode();\n    }\n\n    /**\n     * Figures out the definition name.\n     * @param schemaDef\n     */\n    protected _definitionName(schemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition): string {\n        return schemaDef.getName();\n    }\n\n    public isObject(): boolean {\n        return this.definition.type == \"object\" || this.definition.type == null || this.definition.type == undefined;\n    }\n\n    public simpleType(): SimplifiedType {\n        if (this._stype === null) {\n            this._stype = SimplifiedType.fromSchema(this.definition);\n        }\n        return this._stype;\n    }\n\n    protected onDocumentChange(): void {\n        super.onDocumentChange();\n        this._stype = null;\n    }\n\n    public changeSimpleType(newType: SimplifiedType): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeSchemaTypeCommand(this.definition, nt);\n        this.commandService.emit(command);\n    }\n\n    public inheritanceType(): string {\n        if (this.definition.allOf) {\n            return \"allOf\";\n        }\n        if (this.definition['anyOf']) {\n            return \"anyOf\";\n        }\n        if (this.definition['oneOf']) {\n            return \"oneOf\";\n        }\n\n        return \"none\";\n    }\n\n    public inheritanceTypeOptions(): DropDownOption[] {\n        if (this.definition.ownerDocument().getDocumentType() === DocumentType.openapi2) {\n            return INHERITANCE_TYPES_20;\n        }\n        return INHERITANCE_TYPES;\n    }\n\n    public isInheritanceEnabled(): boolean {\n        return this.inheritanceType() !== \"none\";\n    }\n\n    public setInheritanceType(newInheritanceType: string): void {\n        console.info(\"[DefinitionFormComponent] Setting inheritance type to: \", newInheritanceType);\n        let command: ICommand = CommandFactory.createChangeSchemaInheritanceCommand(this.definition, newInheritanceType);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * When the definition is an import, returns the content for the imported entity.\n     */\n    referenceContent(): string {\n        if (this.definition.$ref && this.definition.$ref.indexOf(\"#\") > 0) {\n            let hashIdx: number = this.definition.$ref.indexOf(\"#\");\n            let resourceUrl: string = this.definition.$ref.substring(0, hashIdx);\n            let content: any = this.catalog.lookup(resourceUrl);\n            if (content) {\n                let fragment: string = this.definition.$ref.substring(hashIdx+1);\n                content = ReferenceUtil.resolveFragmentFromJS(content, fragment);\n                if (content) {\n                    return JSON.stringify(content, null, 3);\n                }\n            }\n        }\n        return \"Content not available.\";\n    }\n\n    refLink(): string {\n        if (this.definition.$ref && this.definition.$ref.startsWith(\"apicurio:\")) {\n            let currentUrl: string = window.location.href;\n            let refId: string = this.getRefId();\n            // Drop the /editor and /12345 (apiId) from the URL\n            let prefix: string = currentUrl.substring(0, currentUrl.lastIndexOf('/'));\n            prefix = prefix.substring(0, prefix.lastIndexOf('/'));\n            return prefix + \"/\" + refId;\n        } else {\n            return this.definition.$ref;\n        }\n    }\n\n    private getRefId(): string {\n        let colonIdx: number = this.definition.$ref.indexOf(':');\n        let hashIdx: number = this.definition.$ref.indexOf('#');\n        return this.definition.$ref.substring(colonIdx + 1, hashIdx);\n    }\n\n}\n","<div class=\"detail-title\">\n    <div class=\"detail-label\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span>{{ definitionName() }}</span>\n        <span class=\"imported label label-info\" *ngIf=\"isImported()\">Imported</span>\n    </div>\n    <div class=\"detail-actions\">\n        <div class=\"dropdown\">\n            <button class=\"btn btn-link dropdown-toggle\" type=\"button\" id=\"dropdownKebab\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                <span class=\"fa fa-ellipsis-v\"></span>\n            </button>\n            <ul class=\"dropdown-menu \" aria-labelledby=\"dropdownKebab\">\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"collapseAllSections()\">\n                        <span class=\"fa fa-compress\"></span>\n                        <span>Collapse All Sections</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"expandAllSections()\">\n                        <span class=\"fa fa-expand\"></span>\n                        <span>Expand All Sections</span>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"rename()\">\n                        <span class=\"fa fa-pencil-square-o\"></span>\n                        <span>Rename Data Type</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"clone()\">\n                        <span class=\"fa fa-clone\"></span>\n                        <span>Clone Data Type</span>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"delete()\">\n                        <span class=\"pficon pficon-delete\"></span>\n                        <span>Delete Data Type</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n    <div class=\"api-definition-detail\" *ngIf=\"!isImported()\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\">\n\n                <!-- Info about the Definition -->\n                <definition-info-section [definition]=\"definition\"></definition-info-section>\n\n                <!-- Simple Type -->\n                <section type=\"simpleType\" label=\"TYPE\" *ngIf=\"!isObject()\"\n                         contextHelp=\"Use this section to manage the type information.\"\n                         [validationModels]=\"[ definition ]\"\n                         [validationProperties]=\"['type', 'format', 'items']\"\n                         [validationShallow]=\"true\">\n                    <div body>\n                        <schema-type-editor [document]=\"definition.ownerDocument()\" [value]=\"simpleType()\" [isParameter]=\"false\"\n                                            (onChange)=\"changeSimpleType($event)\"></schema-type-editor>\n                    </div>\n                </section>\n\n                <!-- Inheritance -->\n                <section type=\"inheritance\" label=\"INHERITANCE\" *ngIf=\"isObject()\">\n                    <div body>\n                        <div class=\"section-field-label\">\n                            <span>Inheritance Type</span>\n                        </div>\n                        <div class=\"section-field inheritance-type\">\n                            <drop-down [id]=\"'inheritance-type'\" [value]=\"inheritanceType()\" [options]=\"inheritanceTypeOptions()\"\n                                       (onValueChange)=\"setInheritanceType($event)\"></drop-down>\n                        </div>\n                    </div>\n                </section>\n\n                <!-- Object Type : Properties -->\n                <schemas-section [definition]=\"definition\" *ngIf=\"isInheritanceEnabled()\"></schemas-section>\n\n                <!-- Object Type : Properties -->\n                <properties-section [definition]=\"definition\" *ngIf=\"isObject()\"></properties-section>\n\n                <!-- Definition Example -->\n                <definition-example-section [definition]=\"definition\"></definition-example-section>\n\n                <!-- Vendor Extensions -->\n                <extensions-section [parent]=\"definition\"></extensions-section>\n\n            </div>\n        </div>\n    </div>\n    <div class=\"api-definition-detail\" *ngIf=\"isImported()\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\">\n                <!-- Reference -->\n                <section type=\"dtReference\" label=\"REFERENCE\"\n                         contextHelp=\"This section describes the externally referenced Data Type.\"\n                         [validationModels]=\"[ definition ]\"\n                         [validationProperties]=\"['$ref']\"\n                         [validationShallow]=\"true\">\n                    <div body>\n                        <span>This Data Type is an external reference to: </span>\n                        <em><a [href]=\"refLink()\" target=\"_blank\"><span class=\"fa fa-fw fa-external-link\"></span>{{ definition.$ref }}</a></em>\n                    </div>\n                </section>\n                <!-- Reference Details -->\n                <section type=\"dtReferenceDetails\" label=\"REFERENCE DETAILS\"\n                         contextHelp=\"This section shows details about the externally referenced Data Type.\">\n                    <div body>\n                        <pre>{{ referenceContent() }}</pre>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clone-definition-dialog #cloneDefinitionDialog (onClone)=\"clone($event)\"></clone-definition-dialog>\n<rename-entity-dialog #renameDefinitionDialog\n                      type=\"Data Type\"\n                      title=\"Rename Data Type\"\n                      warning=\"Renaming a Data Type will also update any references to the type elsewhere in the API (e.g. responses and request bodies).\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {ICommand} from \"@apicurio/data-models\";\nimport {Topic} from \"apicurio-ts-core\";\n\n/**\n * A simple service that tracks the user's current command in the editor.  The command\n * is represented as a node path - a full path to a node in the data model.\n */\n@Injectable()\nexport class CommandService {\n\n    private _commands: Topic<ICommand>;\n\n    constructor() {\n        this.reset();\n    }\n\n    public emit(command: ICommand): void {\n        this._commands.send(command);\n    }\n\n    public commands(): Topic<ICommand> {\n        return this._commands;\n    }\n\n    public reset(): void {\n        this._commands = new Topic();\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n@Component({\n    selector: \"redo-icon\",\n    templateUrl: \"redo-icon.component.html\",\n    styleUrls: [\"redo-icon.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RedoIconComponent extends AbstractBaseComponent {\n\n    @Input() commandStackCount: number;\n    @Output() onClick: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public isRedoable(): boolean {\n        return this.commandStackCount > 0;\n    }\n\n}\n","<div class=\"redo-icon\">\n    <button class=\"btn btn-link nav-item-iconic\" [class.enabled]=\"isRedoable()\"\n            title=\"Click to redo the last change.\" (click)=\"onClick.emit(true)\">\n        <span class=\"fa fa-share\"></span>\n    </button>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport * as YAML from 'js-yaml';\nimport {Aai20Schema} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {ObjectUtils, StringUtils} from \"apicurio-ts-core\";\nimport {CodeEditorComponent, CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\n\n\n@Component({\n    selector: \"add-aai-example-dialog\",\n    templateUrl: \"add-aai-example.component.html\",\n    styleUrls: [ \"add-aai-example.component.css\" ]\n})\nexport class AddAsyncApiExampleDialogComponent {\n\n    @Input() payloadSchema: Aai20Schema;\n    @Input() headersSchema: Aai20Schema;\n    @Output() onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"addExampleModal\") addExampleModal: QueryList<ModalDirective>;\n    @ViewChildren(\"payloadCodeEditor\") payloadCodeEditor: QueryList<CodeEditorComponent>;\n    @ViewChildren(\"headersCodeEditor\") headersCodeEditor: QueryList<CodeEditorComponent>;\n\n    private _isOpen: boolean = false;\n\n    model: any = {\n        name: null,\n        payloadValue: null,\n        headersValue: null,\n        format: CodeEditorMode.JSON,\n        valid: true\n    };\n\n    get payloadValue() {\n        return this.model.payloadValue;\n    }\n    get headersValue() {\n        return this.model.headersValue;\n    }\n\n    set payloadValue(value: string) {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        }\n        this.model.payloadValue = value;\n    }\n    set headersValue(value: string) {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        }\n        this.model.headersValue = value;\n    }\n\n    /**\n     * Called to open the dialog.\n     */\n    public open(): void {\n        this._isOpen = true;\n        this.model = {\n            name: null,\n            payloadValue: null,\n            headersValue: null,\n            format: CodeEditorMode.JSON,\n            valid: true\n        };\n\n        this.addExampleModal.changes.subscribe(() => {\n            if (this.addExampleModal.first) {\n                this.addExampleModal.first.show();\n            }\n        });\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        let event: any = {\n            name: this.model.name,\n            payloadValue: this.model.payloadValue,\n            headersValue: this.model.headersValue\n        };\n\n        // Convert to jsobject if the data is JSON and is valid\n        if (this.model.valid && this.model.format === CodeEditorMode.JSON) {\n            try {\n                event.payloadValue = JSON.parse(this.model.payloadValue)\n                event.headersValue = JSON.parse(this.model.headersValue)\n            } catch (e) { // should never happen!\n                console.error(\"[AddAsyncApiExampleDialogComponent] Failed to parse example.\");\n            }\n        }\n\n        this.onAdd.emit(event);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addExampleModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    valueEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    valueEditorMode(): CodeEditorMode {\n        return this.model.format;\n    }\n\n    hasValue(): boolean {\n        return !ObjectUtils.isNullOrUndefined(this.model.payloadValue);\n    }\n\n    canGeneratePayloadExample(): boolean {\n        return this.payloadSchema !== null && this.payloadSchema !== undefined;\n    }\n    canGenerateHeadersExample(): boolean {\n        return this.headersSchema !== null && this.headersSchema !== undefined;\n    }\n\n    generatePayload(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.payloadSchema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.payloadCodeEditor.first.setText(exampleStr);\n    }\n    generateHeaders(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.headersSchema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.headersCodeEditor.first.setText(exampleStr);\n    }\n}\n","<!-- Add Example Dialog -->\n<div>\n    <div bsModal #addExampleModal=\"bs-modal\" class=\"modal fade\" id=\"addExampleModal\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"addExampleModalLabel\" aria-hidden=\"true\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\"\n         (onShown)=\"addExampleInput.focus()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"addExampleModalLabel\">Add Example</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter the new example name and payload value below and then click Add.</p>\n                    <form id=\"addexample-form\" class=\"form-horizontal\" #addExampleForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label required\" for=\"exampleName\">Name</label>\n                            <div class=\"col-sm-10\">\n                                <input #addExampleInput name=\"exampleName\" type=\"text\" id=\"exampleName\" class=\"form-control\"\n                                       placeholder=\"Enter an Example Name\" #name=\"ngModel\"\n                                       required [(ngModel)]=\"model.name\">\n                                <form-error-message [inputModel]=\"name\" [type]=\"'required'\">Name is required.</form-error-message>\n                            </div>\n                        </div>\n\n                        <div class=\"example\">\n                            <label class=\"control-label required\">Payload</label>\n                            <code-editor [theme]=\"valueEditorTheme()\" #payloadCodeEditor\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"150\"\n                                         [(text)]=\"payloadValue\"\n                                         [editorStyle]=\"{ position: 'relative', height: '200px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generatePayload()\"\n                                    *ngIf=\"canGeneratePayloadExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                        <div class=\"example\">\n                            <label class=\"control-label required\">Headers</label>\n                            <code-editor [theme]=\"valueEditorTheme()\" #headersCodeEditor\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"150\"\n                                         [(text)]=\"headersValue\"\n                                         [editorStyle]=\"{ position: 'relative', height: '200px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generateHeaders()\"\n                                    *ngIf=\"canGenerateHeadersExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\"\n                            [disabled]=\"!addExampleForm.form.valid || !hasValue()\">Add</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    Oas20PathItem,\n    Oas30PathItem,\n    OasDocument,\n    OasParameter,\n    OasPathItem,\n    OasPaths,\n    SimplifiedParameterType\n} from \"@apicurio/data-models\";\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {ClonePathDialogComponent} from \"../dialogs/clone-path.component\";\nimport {AddPathDialogComponent} from \"../dialogs/add-path.component\";\nimport {RenamePathDialogComponent} from \"../dialogs/rename-path.component\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {EditorsService} from \"../../_services/editors.service\";\n// import {SectionComponent} from \"./shared/section.component\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\n\n\n@Component({\n    selector: \"path-form\",\n    templateUrl: \"path-form.component.html\",\n    styleUrls: [ \"path-form.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PathFormComponent extends SourceFormComponent<OasPathItem> {\n\n    protected _path: OasPathItem;\n    @Input()\n    set path(path: OasPathItem) {\n        this._path = path;\n        this.sourceNode = path;\n        this.revertSource();\n    }\n    get path(): OasPathItem {\n        return this._path;\n    }\n\n    @ViewChild(\"clonePathDialog\", { static: true }) clonePathDialog: ClonePathDialogComponent;\n    @ViewChild(\"addPathDialog\", { static: true }) addPathDialog: AddPathDialogComponent;\n    @ViewChild(\"renamePathDialog\", { static: true }) renamePathDialog: RenamePathDialogComponent;\n\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n                       protected selectionService: SelectionService,\n                       protected commandService: CommandService,\n                       protected documentService: DocumentService,\n                       private editors: EditorsService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    protected createEmptyNodeForSource(): OasPathItem {\n        return (<OasPaths>this.path.parent()).createPathItem(this.path.getPath());\n    }\n\n    protected createReplaceNodeCommand(node: OasPathItem): ICommand {\n        return CommandFactory.createReplacePathItemCommand(this.path, node);\n    }\n\n    public document(): OasDocument {\n        return <OasDocument>this.path.ownerDocument();\n    }\n\n    public is3xDocument(): boolean {\n        return (<OasDocument>this.path.ownerDocument()).is3xDocument();\n    }\n\n    public delete(): void {\n        let command: ICommand = CommandFactory.createDeletePathCommand(this.path.getPath());\n        this.commandService.emit(command);\n    }\n\n    public newPath(): void {\n        this.addPathDialog.open(<OasDocument>this.path.ownerDocument(), this.path.getPath());\n    }\n\n    public addPath(path: string): void {\n        let command: ICommand = CommandFactory.createNewPathCommand(path);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.path.ownerDocument());\n        nodePath.appendSegment(\"paths\", false);\n        nodePath.appendSegment(path, true);\n        this.selectionService.select(nodePath.toString());\n    }\n\n    public clone(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            this.clonePathDialog.open(<OasDocument>this.path.ownerDocument(), this.path);\n        } else {\n            let pathItem: OasPathItem = modalData.object;\n            console.info(\"[PathFormComponent] Clone path item: %s\", modalData.path);\n            let cloneSrcObj: any = Library.writeNode(pathItem);\n            let command: ICommand = CommandFactory.createAddPathItemCommand(modalData.path, cloneSrcObj);\n            this.commandService.emit(command);\n            let nodePath = Library.createNodePath(this.path.ownerDocument());\n            nodePath.appendSegment(\"paths\", false);\n            nodePath.appendSegment(modalData.path, true);\n            this.selectionService.select(nodePath.toString());\n        }\n    }\n\n    public rename(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            this.renamePathDialog.open(<OasDocument>this.path.ownerDocument(), this.path as Oas20PathItem | Oas30PathItem);\n        } else {\n            let path: OasPathItem = modalData.path;\n            console.info(\"[PathFormComponent] Rename path item: %s\", modalData.path);\n            let oldName: string = path.getPath();\n            console.info(\"[PathFormComponent] Rename definition to: %s\", modalData.name);\n            let command: ICommand = CommandFactory.createRenamePathItemCommand(oldName, modalData.name, modalData.renameSubpaths);\n            this.commandService.emit(command);\n        }\n    }\n\n    public hasParameters(type: string): boolean {\n        if (!this.path.parameters) {\n            return false;\n        }\n        return this.path.parameters.filter((value) => {\n                return value.in === type;\n            }).length > 0;\n    }\n\n    public parameters(paramType: string): OasParameter[] {\n        if (!this.path.parameters) {\n            return [];\n        }\n        let params: OasParameter[] = this.path.parameters;\n        return params.filter( value => {\n            return value.in === paramType;\n        }).sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n    }\n\n    public changeParamDescription(param: OasParameter, newParamDescription: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(param, \"description\", newParamDescription);\n        this.commandService.emit(command);\n    }\n\n    public changeParamType(param: OasParameter, newType: SimplifiedParameterType): void {\n        let command: ICommand = CommandFactory.createChangeParameterTypeCommand(this.path.ownerDocument().getDocumentType(),\n            param as any, newType);\n        this.commandService.emit(command);\n    }\n\n    public deleteParam(parameter: OasParameter): void {\n        let command: ICommand = CommandFactory.createDeleteParameterCommand(parameter);\n        this.commandService.emit(command);\n    }\n\n    public enableSourceMode(): void {\n        this.sourceNode = this.path;\n        super.enableSourceMode();\n    }\n\n}\n","<div class=\"detail-title\">\n    <div path-item class=\"detail-label\" [path]=\"path.getPath()\"></div>\n    <div class=\"detail-actions\">\n        <div class=\"dropdown\">\n            <button class=\"btn btn-link dropdown-toggle\" type=\"button\" id=\"dropdownKebab\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                <span class=\"fa fa-ellipsis-v\"></span>\n            </button>\n            <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownKebab\">\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"collapseAllSections()\">\n                        <span class=\"fa fa-compress\"></span>\n                        <span>Collapse All Sections</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"expandAllSections()\">\n                        <span class=\"fa fa-expand\"></span>\n                        <span>Expand All Sections</span>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"newPath()\">\n                        <span class=\"pficon pficon-add-circle-o\"></span>\n                        <span>New Sub-Path</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:return false\" (click)=\"rename()\">\n                        <span class=\"fa fa-pencil-square-o\"></span>\n                        <span>Rename Path</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"javascript:return false\" (click)=\"clone()\">\n                        <span class=\"fa fa-clone\"></span>\n                        <span>Clone Path</span>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"javascript:return false\" (click)=\"delete()\">\n                        <span class=\"pficon pficon-delete\"></span>\n                        <span>Delete Path</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n\n    <div class=\"api-path-detail\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"apipath-2-get\">\n                <!-- Info Section -->\n                <path-info-section [path]=\"path\" *ngIf=\"is3xDocument()\"></path-info-section>\n\n                <!-- Servers -->\n                <servers-section *ngIf=\"is3xDocument()\" [parent]=\"path\" [collapsed]=\"true\"\n                                 [description]=\"'Configure servers specific to this Path Item and all its Operations.  Once defined, servers indicate where to access the API (e.g. host and port).'\"></servers-section>\n\n                <!-- Path Parameters Section -->\n                <path-params-section [parent]=\"path\" [path]=\"path\"></path-params-section>\n\n                <!-- Query Parameters Section -->\n                <query-params-section [parent]=\"path\" [path]=\"path\"></query-params-section>\n\n                <!-- Header Parameters Section -->\n                <header-params-section [parent]=\"path\" [path]=\"path\"></header-params-section>\n\n                <!-- Cookie Parameters Section -->\n                <cookie-params-section [parent]=\"path\" [path]=\"path\" *ngIf=\"is3xDocument()\"></cookie-params-section>\n\n                <!-- Vendor Extensions -->\n                <extensions-section [parent]=\"path\"></extensions-section>\n\n                <!-- Operations Section -->\n                <operations-section [path]=\"path\"></operations-section>\n            </div>\n        </div>\n    </div>\n</div>\n\n<add-path-dialog #addPathDialog (onAdd)=\"addPath($event)\"></add-path-dialog>\n<clone-path-dialog #clonePathDialog (onClone)=\"clone($event)\"></clone-path-dialog>\n<rename-path-dialog #renamePathDialog (onRename)=\"rename($event)\"></rename-path-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {ValidationProblem, ValidationProblemSeverity} from \"@apicurio/data-models\";\nimport {SelectionService} from \"../_services/selection.service\";\nimport {ProblemsService} from \"../_services/problems.service\";\nimport {AbstractBaseComponent} from \"./common/base-component\";\nimport {DocumentService} from \"../_services/document.service\";\nimport {FeaturesService} from \"../_services/features.service\";\n\n\n/**\n * The component that models the list of problems found in the document.  This is only shown\n * when the user clicks the bell icon to drop down the list of problems.\n */\n@Component({\n    selector: \"problem-drawer\",\n    templateUrl: \"problem-drawer.component.html\",\n    styleUrls: [ \"problem-drawer.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditorProblemDrawerComponent extends AbstractBaseComponent {\n\n    @Input() validationErrors: ValidationProblem[];\n    @Output() close: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() onConfigureValidation: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     * @param problemsService\n     * @param features\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService, private problemsService: ProblemsService,\n                private features: FeaturesService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public hasProblems(): boolean {\n        return this.validationErrors && this.validationErrors.length > 0;\n    }\n\n    public goTo(problem: ValidationProblem): void {\n        this.close.emit(true);\n        let goToPath: string = problem.nodePath.toString();\n        if (problem.property) {\n            goToPath += \"/\" + problem.property;\n        }\n        this.__selectionService.select(goToPath);\n        // Delay the highlighting of the path so that the UI has a chance to display\n        // the correct components for the new selection (see above).\n        setTimeout(() => {\n            this.__selectionService.highlightPath(goToPath);\n        }, 50);\n    }\n\n    public iconFor(problem: ValidationProblem): string {\n        switch (problem.severity) {\n            case ValidationProblemSeverity.low:\n                return \"pficon-info\";\n            case ValidationProblemSeverity.medium:\n                return \"pficon-warning-triangle-o\";\n            case ValidationProblemSeverity.high:\n                return \"pficon-error-circle-o\";\n            default:\n                return \"pficon-info\";\n        }\n    }\n\n    public summaryFor(problem: ValidationProblem): string {\n        return this.problemsService.summary(problem);\n    }\n\n    public explanationFor(problem: ValidationProblem): string {\n        return this.problemsService.explanation(problem);\n    }\n\n    public showValidationSettings(): boolean {\n        return this.features.getFeatures().validationSettings;\n    }\n\n}\n","<div class=\"editor-problem-drawer\">\n    <div class=\"drawer-pf drawer-pf-notifications-non-clickable\">\n        <div class=\"drawer-pf-title\">\n            <a class=\"drawer-pf-close pficon pficon-close\" (click)=\"close.emit(true)\"></a>\n            <a title=\"Customize validation settings for this API...\" class=\"drawer-pf-settings pficon pficon-settings\"\n               *ngIf=\"showValidationSettings()\"\n               (click)=\"onConfigureValidation.emit()\"></a>\n            <h3 class=\"text-center\">Validation Problems</h3>\n        </div>\n        <div class=\"panel-group\">\n            <div class=\"panel panel-default\">\n                <div class=\"panel-body\">\n                    <div class=\"drawer-pf-notification\" *ngFor=\"let error of validationErrors\">\n                        <span class=\"pficon {{ iconFor(error) }} pull-left\" title=\"{{ error.errorCode }}\"></span>\n                        <div class=\"drawer-pf-notification-content\">\n                            <span class=\"drawer-pf-notification-message\">{{ summaryFor(error) }}</span>\n                            <div class=\"drawer-pf-notification-info\">\n                                <div class=\"explanation\">{{ explanationFor(error) }}</div>\n                                <a (click)=\"goTo(error)\">Go to problem</a>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"blank-slate-pf\" *ngIf=\"!hasProblems()\">\n                        <div class=\"blank-slate-pf-icon\">\n                            <span class=\"pficon-info\"></span>\n                        </div>\n                        <h1>There are no problems to display.</h1>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input} from \"@angular/core\";\nimport {SimplifiedType} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\n\n@Component({\n    selector: \"schema-type\",\n    templateUrl: \"schema-type.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SchemaTypeComponent extends AbstractBaseComponent {\n\n    @Input() type: SimplifiedType;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public displayType(): string {\n        if (ObjectUtils.isNullOrUndefined(this.type)) {\n            return \"No Type\";\n        }\n        if (this.type.isRef()) {\n            return this.type.type.substr(this.type.type.lastIndexOf('/') + 1);\n        } else if (this.type.isArray()) {\n            if (this.type.of && this.type.of.as) {\n                return \"Array of: \" + this.type.of.type + \" as \" + this.type.of.as;\n            }\n            if (this.type.of && this.type.of.isSimpleType()) {\n                return \"Array of: \" + this.type.of.type;\n            }\n            if (this.type.of && this.type.of.isRef()) {\n                return \"Array of: \" + this.type.of.type.substr(this.type.of.type.lastIndexOf('/') + 1);\n            }\n            return \"Array\";\n        } else if (this.type.isEnum()) {\n            return `Enum (${ this.type.enum_.length } items)`;\n        } else if (this.type.isSimpleType()) {\n            if (this.type.as) {\n                return this.type.type + \" as \" + this.type.as;\n            } else {\n                return this.type.type;\n            }\n        } else {\n            return \"No Type\";\n        }\n    }\n\n    public hasType(): boolean {\n        return !ObjectUtils.isNullOrUndefined(this.type) && (this.type.isRef() || this.type.isEnum() ||\n            this.type.isSimpleType() || this.type.isArray());\n    }\n\n}\n","<span [class.empty]=\"!hasType()\">{{ displayType() }}</span>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, DocumentType, ICommand, NodePath, Oas30Response} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\n\n\n@Component({\n    selector: \"response-tab-30\",\n    templateUrl: \"response-tab-30.component.html\",\n    styleUrls: [\"response-tab-30.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResponseTab30Component extends AbstractBaseComponent {\n\n    @Input() response: Oas30Response;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    isRef(): boolean {\n        return this.response.$ref !== null && this.response.$ref !== undefined;\n    }\n\n    responseDefRefPrefix(): string {\n        let prefix: string = \"#/components/responses/\";\n        if (this.response.ownerDocument().getDocumentType() === DocumentType.openapi2) {\n            prefix = \"#/responses/\";\n        }\n        return prefix;\n    }\n\n    responseDefPathPrefix(): string {\n        return this.responseDefRefPrefix().substr(1);\n    }\n\n    definitionName(): string {\n        if (this.isRef()) {\n            let prefix: string = this.responseDefRefPrefix();\n            let $ref: string = this.response.$ref;\n            if ($ref.startsWith(prefix)) {\n                return $ref.substr(prefix.length);\n            }\n            return this.response.$ref\n        }\n        return null;\n    }\n\n    navigateToDefinition(): void {\n        let path: NodePath = new NodePath(this.responseDefPathPrefix());\n        path.appendSegment(this.definitionName(), true);\n        this.selectionService.select(path.toString());\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.response, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n}\n","<div class=\"response\">\n    <div class=\"response-description\" *ngIf=\"!isRef()\">\n        <div class=\"form-label\">Description</div>\n        <div class=\"problem-flex\">\n            <validation-problem [model]=\"response\" property=\"description\"></validation-problem>\n            <div class=\"grow\">\n                <inline-markdown-editor [value]=\"response.description\" noValueMessage=\"No description.\"\n                                        [baseNode]=\"response\" nodePath=\"description\"\n                                        (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n            </div>\n        </div>\n    </div>\n    <div class=\"response-header\" *ngIf=\"!isRef()\">\n        <div class=\"form-label\">Response Headers</div>\n        <httpHeaders [parent]=\"response\"></httpHeaders>\n    </div>\n    <div class=\"response-content\" *ngIf=\"!isRef()\">\n        <div class=\"form-label\">Response Body</div>\n        <content [parent]=\"response\"></content>\n    </div>\n\n    <div class=\"response-ref\" *ngIf=\"isRef()\">\n        <div class=\"form-label\">Response Definition</div>\n        <validation-problem [model]=\"response\" property=\"$ref\"></validation-problem>\n        <span>This response references the </span>\n        <em><a (click)=\"navigateToDefinition()\">{{ definitionName() }}</a></em>\n        <span> Response Definition.</span>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Node} from \"@apicurio/data-models\";\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    HostListener,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {TopicSubscription} from \"apicurio-ts-core\";\nimport {KeypressUtils} from \"../../../_util/keypress.util\";\n\n\n@Component({\n    selector: \"section\",\n    templateUrl: \"section.component.html\",\n    styleUrls: [\"section.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SectionComponent extends AbstractBaseComponent {\n\n    public static allVisibleSections: SectionComponent[] = [];\n\n    @Input() type: string;\n    @Input() label: string;\n    @Input() expanded: boolean = true;\n    @Input() counterItems: any[];\n    @Input() contextHelp: string;\n\n    @Input() validationModels: Node[];\n    @Input() validationShallow: boolean;\n    @Input() validationProperties: string[];\n\n    @Input() collaborationNodePath: string | string[];\n\n    @Input() inForm: boolean = true;\n\n    @ViewChild(\"sectionHeader\", { static: true }) sectionHeader: ElementRef;\n    @ViewChild(\"sectionBody\", { static: true }) sectionBody: ElementRef;\n\n    showContextMenu: boolean = false;\n    contextMenuPos: any = {\n        top: \"0px\",\n        left: \"0px\"\n    }\n\n    private _highlightSubscription: TopicSubscription<string>;\n    public showHighlight: boolean = false;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        if (this.inForm) {\n            SectionComponent.allVisibleSections.push(this);\n        }\n\n        if (this.inForm) {\n            let component: SectionComponent = this;\n            this._highlightSubscription = this.__selectionService.highlight().subscribe(path => {\n                setTimeout(() => {\n                    if (component.acceptsPath(path)) {\n                        component.highlight();\n                    }\n                }, 50);\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        super.ngOnDestroy();\n        let idx: number = SectionComponent.allVisibleSections.indexOf(this);\n        if (idx !== -1) {\n            SectionComponent.allVisibleSections.splice(idx, 1);\n        }\n        if (this._highlightSubscription) {\n            this._highlightSubscription.unsubscribe();\n        }\n    }\n\n    /**\n     * Returns true if the given path is \"contained within\" this section.\n     * @param path\n     */\n    protected acceptsPath(path: string): boolean {\n        if (!this.collaborationNodePath || !path) {\n            return false;\n        }\n\n        let sectionPaths: string[] = [];\n        if (Array.isArray(this.collaborationNodePath)) {\n            sectionPaths = <string[]>this.collaborationNodePath;\n        } else {\n            sectionPaths.push(this.collaborationNodePath);\n        }\n\n        for (let sectionPath of sectionPaths) {\n            if (path.indexOf(sectionPath) === 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Briefly? highlight this section (visually).\n     */\n    public highlight(): void {\n        console.info(\"[SectionComponent] Highlighting section: \", this.type);\n        this.expand();\n        this.showHighlight = true;\n        let me: SectionComponent = this;\n        setTimeout( () => {\n            me.sectionBody.nativeElement.scrollIntoView({\n                block: \"center\", inline: \"nearest\", behavior: \"smooth\"\n            });\n        }, 50);\n        setTimeout(() => {\n            me.showHighlight = false;\n            this.__changeDetectorRef.markForCheck();\n        }, 5000);\n        this.__changeDetectorRef.markForCheck();\n    }\n\n    public hasCounter(): boolean {\n        return this.counterItems !== null && this.counterItems !== undefined;\n    }\n\n    public hasValidationAggregate(): boolean {\n        return this.validationModels !== null && this.validationModels !== undefined;\n    }\n\n    public toggleExpansion(): void {\n        this.expanded = !this.expanded;\n    }\n\n    public openContextMenu(event: MouseEvent): void {\n        if (!this.inForm) {\n            return;\n        }\n        event.preventDefault();\n        event.stopPropagation();\n\n        let box = this.sectionHeader.nativeElement.getBoundingClientRect();\n\n        let body = document.body;\n        let docEl = document.documentElement;\n\n        let scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop;\n        let scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft;\n\n        let clientTop = docEl.clientTop || body.clientTop || 0;\n        let clientLeft = docEl.clientLeft || body.clientLeft || 0;\n\n        let top  = box.top +  scrollTop - clientTop;\n        let left = box.left + scrollLeft - clientLeft;\n\n        this.contextMenuPos.left = Math.round(left) + \"px\";\n        this.contextMenuPos.top = (Math.round(top) + box.height - 5) + \"px\";\n        this.showContextMenu = true;\n    }\n\n    public closeContextMenu(): void {\n        this.showContextMenu = false;\n    }\n\n    public collapseAllOtherSections(): void {\n        this.expanded = true;\n        let me: SectionComponent = this;\n        SectionComponent.allVisibleSections.forEach( section => {\n            if (section !== me) {\n                section.collapse();\n            }\n        });\n    }\n\n    public collapse(): void {\n        this.expanded = false;\n        // The collapse() method is called from outside the normal chain of command, so we need\n        // to mark it as needing change detection (since we just changed its state).  This is because\n        // we're using OnPush as the change detection strategy across all editor components.\n        this.__changeDetectorRef.markForCheck();\n    }\n\n    public expand(): void {\n        this.expanded = true;\n        // The expand() method is called from outside the normal chain of command, so we need\n        // to mark it as needing change detection (since we just changed its state).  This is because\n        // we're using OnPush as the change detection strategy across all editor components.\n        this.__changeDetectorRef.markForCheck();\n    }\n\n    public collapseAllSections(): void {\n        SectionComponent.allVisibleSections.forEach( section => {\n            section.collapse();\n        });\n    }\n\n    public expandAllSections(): void {\n        SectionComponent.allVisibleSections.forEach( section => {\n            section.expand();\n        });\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.closeContextMenu();\n        }\n    }\n\n    @HostListener(\"document:click\", [\"$event\"])\n    public onDocumentClick(event: MouseEvent): void {\n        this.closeContextMenu();\n    }\n\n}\n","<div class=\"section {{ type }}-section panel-group\" [class.highlight]=\"showHighlight\">\n    <div class=\"section-header panel-title\" #sectionHeader>\n        <a [class.collapsed]=\"!expanded\" (click)=\"toggleExpansion()\" (contextmenu)=\"openContextMenu($event)\">\n            <span class=\"section-label\">{{ label }} <counter [items]=\"counterItems\" *ngIf=\"hasCounter()\"></counter></span>\n            <validation-aggregate *ngIf=\"hasValidationAggregate()\" [models]=\"validationModels\"\n                                  [shallow]=\"validationShallow\" [properties]=\"validationProperties\"></validation-aggregate>\n        </a>\n        <context-help>\n            <p>{{ contextHelp }}</p>\n        </context-help>\n        <collaborator-aggregate [nodePath]=\"collaborationNodePath\"></collaborator-aggregate>\n        <div class=\"section-actions\">\n            <ng-content select=\"[actions]\"></ng-content>\n        </div>\n    </div>\n    <div class=\"section-body\" [class.collapsed]=\"!expanded\" #sectionBody>\n        <ng-content select=\"[body]\"></ng-content>\n    </div>\n\n    <!-- Section Context Menu -->\n    <ul class=\"dropdown-menu context-menu section-context-menu\" *ngIf=\"showContextMenu\" (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"collapseAllOtherSections()\">\n                <span class=\"fa fa-long-arrow-right\"></span>\n                <span>Collapse All Other Sections</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"collapseAllSections()\">\n                <span class=\"fa fa-compress\"></span>\n                <span>Collapse All Sections</span>\n            </a>\n        </li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"expandAllSections()\">\n                <span class=\"fa fa-expand\"></span>\n                <span>Expand All Sections</span>\n            </a>\n        </li>\n    </ul>\n\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    Aai20NodeFactory,\n    Aai20SecurityScheme,\n    AaiDocument, AaiSecurityScheme,\n    CombinedVisitorAdapter,\n    CommandFactory,\n    ICommand,\n    Library,\n    SecurityScheme,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {\n    ISecuritySchemeEditorHandler,\n    SecuritySchemeAai20Data,\n    SecuritySchemeEditorComponent,\n    SecuritySchemeEditorEvent\n} from \"../../editors/security-scheme-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {Scope} from \"../../../_models/scope.model\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\n\n\n@Component({\n    selector: \"aaisecurity-schemes-section\",\n    templateUrl: \"security-schemes-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AaiSecuritySchemesSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: AaiDocument;\n\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param editors\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editors: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Opens the security scheme dialog.\n     * @param scheme\n     */\n    public openSecuritySchemeModal(scheme?: SecurityScheme): void {\n        let editor: SecuritySchemeEditorComponent = this.editors.getSecuritySchemeEditor();\n        let handler: ISecuritySchemeEditorHandler = {\n            onSave: (event: SecuritySchemeEditorEvent) => {\n                if (!scheme) {\n                    this.addSecurityScheme(event.data as SecuritySchemeAai20Data);\n                } else {\n                    this.changeSecurityScheme(event.data as SecuritySchemeAai20Data);\n                }\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.document, scheme);\n    }\n\n    /**\n     * Returns true if there is at least one security scheme defined.\n     * @return\n     */\n    public hasSecuritySchemes(): boolean {\n        return this.securitySchemes().length > 0;\n    }\n\n    /**\n     * Returns all defined security schemes.\n     * @return\n     */\n    public securitySchemes(): SecurityScheme[] {\n            if (this.document.components) {\n                let schemes: AaiSecurityScheme[] = this.document.components.getSecuritySchemesList();\n                return schemes.sort( (scheme1, scheme2) => {\n                    return scheme1.getSchemeName().localeCompare(scheme2.getSchemeName());\n                });\n            }\n            return [];\n    }\n\n    /**\n     * Node path that is the base for all security schemes.\n     */\n    public securitySchemesPath(): string {\n        return \"/components/securitySchemes\";\n    }\n\n    /**\n     * Called when the user adds a new security scheme.\n     * @param event\n     */\n    public addSecurityScheme(event: SecuritySchemeAai20Data): void {\n        console.info(\"[AaiSecuritySchemesSectionComponent] Adding a security scheme: %s\", event.schemeName);\n\n        let scheme: Aai20SecurityScheme = new Aai20NodeFactory().createSecurityScheme(this.document.createComponents(), event.schemeName);\n        this.copySchemeToModel(event, scheme);\n\n        let command: ICommand = CommandFactory.createNewSecuritySchemeCommand(this.document.getDocumentType(), scheme);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(scheme);\n        this.selectionService.select(path.toString());\n    }\n\n    /**\n     * Called when the user changes an existing security scheme.\n     * @param event\n     */\n    public changeSecurityScheme(event: SecuritySchemeAai20Data): void {\n        console.info(\"[AaiSecuritySchemesSectionComponent] Changing a security scheme: %s\", event.schemeName);\n\n        let scheme: Aai20SecurityScheme = new Aai20NodeFactory().createSecurityScheme(this.document.components, event.schemeName);\n        this.copySchemeToModel(event, scheme);\n\n        let command: ICommand = CommandFactory.createChangeSecuritySchemeCommand(this.document.getDocumentType(), scheme);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Deletes a security scheme.\n     * @param scheme\n     */\n    public deleteSecurityScheme(scheme: SecurityScheme): void {\n        let command: ICommand = CommandFactory.createDeleteSecuritySchemeCommand(this.document.getDocumentType(), scheme.getSchemeName());\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Converts from array of scopes to scopes object for data model.\n     * @param scopes\n     */\n    private toScopes(scopes: Scope[]): any {\n        let rval: any = {};\n        scopes.forEach( scope => {\n            rval[scope.name] = scope.description;\n        });\n        return rval;\n    }\n\n    /**\n     * Copy the event data to the data model.\n     * @param event\n     * @param scheme\n     */\n    private copySchemeToModel(event: SecuritySchemeAai20Data, scheme: Aai20SecurityScheme) {\n        scheme.description = event.description;\n        scheme.type = event.type;\n        if (scheme.type === \"http\") {\n            scheme.scheme = event.scheme;\n            if (scheme.scheme === \"Bearer\") {\n                scheme.bearerFormat = event.bearerFormat;\n            }\n        }\n        if (scheme.type === \"httpApiKey\") {\n            scheme.in = event.in;\n            scheme.name = event.name;\n        }\n        if (scheme.type === \"apiKey\") {\n            scheme.in = event.in;\n        }\n        if (scheme.type === \"oauth2\") {\n            scheme.flows = new Aai20NodeFactory().createOAuthFlows(scheme);\n            if (event.flows.implicit.enabled) {\n                scheme.flows.implicit = scheme.flows.createImplicitOAuthFlow();\n                scheme.flows.implicit.authorizationUrl = event.flows.implicit.authorizationUrl;\n                scheme.flows.implicit.tokenUrl = event.flows.implicit.tokenUrl;\n                scheme.flows.implicit.refreshUrl = event.flows.implicit.refreshUrl;\n                scheme.flows.implicit.scopes = this.toScopes(event.flows.implicit.scopes);\n            }\n            if (event.flows.password.enabled) {\n                scheme.flows.password = scheme.flows.createPasswordOAuthFlow();\n                scheme.flows.password.authorizationUrl = event.flows.password.authorizationUrl;\n                scheme.flows.password.tokenUrl = event.flows.password.tokenUrl;\n                scheme.flows.password.refreshUrl = event.flows.password.refreshUrl;\n                scheme.flows.password.scopes = this.toScopes(event.flows.password.scopes);\n            }\n            if (event.flows.clientCredentials.enabled) {\n                scheme.flows.clientCredentials = scheme.flows.createClientCredentialsOAuthFlow();\n                scheme.flows.clientCredentials.authorizationUrl = event.flows.clientCredentials.authorizationUrl;\n                scheme.flows.clientCredentials.tokenUrl = event.flows.clientCredentials.tokenUrl;\n                scheme.flows.clientCredentials.refreshUrl = event.flows.clientCredentials.refreshUrl;\n                scheme.flows.clientCredentials.scopes = this.toScopes(event.flows.clientCredentials.scopes);\n            }\n            if (event.flows.authorizationCode.enabled) {\n                scheme.flows.authorizationCode = scheme.flows.createAuthorizationCodeOAuthFlow();\n                scheme.flows.authorizationCode.authorizationUrl = event.flows.authorizationCode.authorizationUrl;\n                scheme.flows.authorizationCode.tokenUrl = event.flows.authorizationCode.tokenUrl;\n                scheme.flows.authorizationCode.refreshUrl = event.flows.authorizationCode.refreshUrl;\n                scheme.flows.authorizationCode.scopes = this.toScopes(event.flows.authorizationCode.scopes);\n            }\n        }\n        if (scheme.type === \"openIdConnect\") {\n            scheme.openIdConnectUrl = event.openIdConnectUrl;\n        }\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the servers.\n     */\n    public deleteAllSecuritySchemes(): void {\n        let command: ICommand = CommandFactory.createDeleteAllSecuritySchemesCommand();\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the rename security scheme dialog.\n     * @param scheme\n     */\n    public openRenameDialog(scheme: SecurityScheme): void {\n        let schemeNames: string[] = [];\n        VisitorUtil.visitTree(scheme.ownerDocument(), new class extends CombinedVisitorAdapter {\n            public visitSecurityScheme(node: SecurityScheme): void {\n                schemeNames.push(node.getSchemeName());\n            }\n        }, TraverserDirection.down);\n        this.renameDialog.open(scheme, scheme.getSchemeName(), newName => {\n            return schemeNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the security scheme.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        let scheme: SecurityScheme = <any>event.entity;\n        let command: ICommand = CommandFactory.createRenameSecuritySchemeCommand(scheme.getSchemeName(), event.newName);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"security\" label=\"SECURITY SCHEMES\" [counterItems]=\"securitySchemes()\"\n         contextHelp=\"Use this section to configure your API's security options.  There are several schemes you can choose from, for example OAuth2.\"\n         [collaborationNodePath]=\"securitySchemesPath()\"\n         [validationModels]=\"securitySchemes()\">\n    <span actions>\n        <icon-button (onClick)=\"openSecuritySchemeModal()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a security scheme to the API.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllSecuritySchemes()\" [disabled]=\"!hasSecuritySchemes()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     title=\"Delete all security schemes.\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasSecuritySchemes()\">\n            <span>No security options have been configured.</span>\n            <a (click)=\"openSecuritySchemeModal()\">Add a security scheme</a>\n        </signpost>\n\n        <!-- The list of schemes -->\n        <div class=\"schemes\" *ngIf=\"hasSecuritySchemes()\">\n            <security-scheme-row *ngFor=\"let scheme of securitySchemes()\" [scheme]=\"scheme\"\n                                 (onEdit)=\"openSecuritySchemeModal(scheme)\"\n                                 (onDelete)=\"deleteSecurityScheme(scheme)\"\n                                 (onRename)=\"openRenameDialog(scheme)\"\n                                 [document]=\"document\"></security-scheme-row>\n        </div>\n    </div>\n</section>\n<rename-entity-dialog #renameDialog\n                      type=\"Security Scheme\"\n                      title=\"Rename Security Scheme\"\n                      warning=\"Renaming a Security Scheme will also update any references to that scheme elsewhere in the API (e.g. security requirements in operations).\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ElementRef, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {OasDocument, OasPathItem} from \"@apicurio/data-models\";\n\n\n@Component({\n    selector: \"clone-path-dialog\",\n    templateUrl: \"clone-path.component.html\"\n})\nexport class ClonePathDialogComponent {\n\n    @Output() onClone: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"clonePathModal\") clonePathModal: QueryList<ModalDirective>;\n    @ViewChildren(\"clonePathInput\") clonePathInput: QueryList<ElementRef>;\n\n    private _isOpen: boolean = false;\n\n    path: string = \"\";\n    object: OasPathItem;\n\n    paths: string[] = [];\n    pathExists: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     * @param document\n     * @param path\n     */\n    public open(document: OasDocument, path: OasPathItem): void {\n        this.object = path;\n        this.path = path.getPath();\n        if (!this.path.endsWith(\"/\")) {\n            this.path = this.path + \"/\";\n        }\n        this._isOpen = true;\n        this.clonePathModal.changes.subscribe( () => {\n            if (this.clonePathModal.first) {\n                this.clonePathModal.first.show();\n            }\n        });\n\n        this.paths = [];\n        this.pathExists = false;\n        if (document.paths) {\n            document.paths.getPathItems().forEach( pathItem => {\n                this.paths.push(pathItem.getPath());\n            });\n        }\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.path = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"clone\".\n     */\n    clone(): void {\n        let modalData: any = {\n            path: this.path,\n            object: this.object\n        };\n        this.onClone.emit(modalData);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.clonePathModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Called to initialize the selection/focus to the clonePathInput field.\n     */\n    doSelect(): void {\n        this.clonePathInput.first.nativeElement.focus();\n        this.clonePathInput.first.nativeElement.selectionStart = this.clonePathInput.first.nativeElement.selectionEnd = this.path.length\n    }\n\n    /**\n     * Called whenever the user types anything in the path field - this validates that the path entered\n     * is OK.\n     * @param newPath\n     */\n    validatePath(newPath: string) {\n        this.pathExists = this.paths.indexOf(newPath) != -1;\n    }\n}\n","<!-- Clone Path Dialog -->\n<div bsModal #clonePathModal=\"bs-modal\" class=\"modal fade\" id=\"clonePathModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"clonePathModalLabel\"\n     role=\"dialog\" aria-hidden=\"true\" (onShown)=\"doSelect()\" [config]=\"{ backdrop: true }\"\n     (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"clonePathModalLabel\">Clone Path</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter a new resource path below and then click Clone.</p>\n                <form id=\"clonepath-form\" class=\"form-horizontal\" (submit)=\"clone()\" #clonePathForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label required\" for=\"path\">Path</label>\n                        <div class=\"col-sm-10\">\n                            <input #pname=\"ngModel\" name=\"path\" type=\"text\" id=\"path\" class=\"form-control\" placeholder=\"Enter a Path\"\n                                   pattern=\"(\\/[^{}\\/]*(\\{[a-zA-Z_][0-9a-zA-Z_]*\\})?)+\" required [(ngModel)]=\"path\"\n                                   (ngModelChange)=\"validatePath($event)\">\n                            <div class=\"form-error-message error\" *ngIf=\"pathExists\">Path already exists.</div>\n                            <form-error-message [inputModel]=\"pname\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid path.</form-error-message>\n                            <form-error-message [inputModel]=\"pname\" [type]=\"'required'\">Path is required.</form-error-message>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clone()\" [disabled]=\"!clonePathForm.form.valid || pathExists\">Clone</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {\n    Aai20AuthorizationCodeOAuthFlow,\n    Aai20ClientCredentialsOAuthFlow,\n    Aai20ImplicitOAuthFlow,\n    Aai20PasswordOAuthFlow,\n    AaiServer,\n    CombinedVisitorAdapter,\n    Document,\n    Oas20Scopes,\n    Oas30AuthorizationCodeOAuthFlow,\n    Oas30ClientCredentialsOAuthFlow,\n    Oas30ImplicitOAuthFlow,\n    Oas30PasswordOAuthFlow,\n    OasDocument,\n    OasOperation,\n    OAuthFlow,\n    SecurityRequirement,\n    SecurityScheme,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\nexport interface SecurityRequirementData {\n    [key: string]: string[];\n}\n\nexport interface SecurityRequirementEditorEvent extends EntityEditorEvent<SecurityRequirement> {\n    data: SecurityRequirementData;\n}\n\nexport interface ScopeInfo {\n    name: string;\n    description: string;\n}\n\nexport interface ISecurityRequirementEditorHandler extends IEntityEditorHandler<SecurityRequirement, SecurityRequirementEditorEvent> {\n    onSave(event: SecurityRequirementEditorEvent): void;\n    onCancel(event: SecurityRequirementEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"security-requirement-editor\",\n    templateUrl: \"security-requirement-editor.component.html\",\n    styleUrls: [\"security-requirement-editor.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SecurityRequirementEditorComponent extends EntityEditor<SecurityRequirement, SecurityRequirementEditorEvent> {\n\n    public _expanded: any;\n\n    protected model: SecurityRequirementData;\n    anonEnabled: boolean = false;\n    schemes: SecurityScheme[];\n    protected scopeCache: any;\n\n    /**\n     * C'tor.\n     * @param selectionService\n     */\n    constructor(protected selectionService: SelectionService) {\n        super();\n    }\n\n    /**\n     * Called to open the editor.\n     * @param handler\n     * @param context\n     * @param server\n     */\n    public open(handler: ISecurityRequirementEditorHandler, context: OasDocument | OasOperation | AaiServer, requirement?: SecurityRequirement): void {\n        this._expanded = {};\n        this.model = {};\n        this.anonEnabled = false;\n        this.scopeCache = {};\n        this.schemes = this.findSchemes(context.ownerDocument());\n        super.open(handler, context, requirement);\n\n        if (requirement) {\n            this.selectionService.simpleSelect(ModelUtils.nodeToPath(requirement));\n        } else {\n            this.selectionService.simpleSelect(ModelUtils.nodeToPath(context) + \"/security\");\n        }\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity.\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: SecurityRequirement): void {\n        let names: string[] = entity.getSecurityRequirementNames();\n        if (names.length === 0) {\n            this.anonEnabled = true;\n        } else {\n            names.forEach( name => {\n                this.model[name] = entity.getScopes(name);\n            });\n        }\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.anonEnabled = false;\n        this.model = {};\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): SecurityRequirementEditorEvent {\n        let event: SecurityRequirementEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    /**\n     * Enables/disable anonymous access.\n     * @param isAnon\n     */\n    public setAnon(isAnon: boolean): void {\n        this.anonEnabled = isAnon;\n        if (isAnon) {\n            // anonymous access is mutually exclusive with all other security types\n            this.model = {};\n        }\n    }\n\n    /**\n     * Returns true if the editor is currently valid.\n     */\n    public isValid(): boolean {\n        for (let n in this.model) {\n            return true;\n        }\n        return this.anonEnabled;\n    }\n\n    /**\n     * Returns true if the given scheme is enabled.\n     * @param scheme\n     * @return\n     */\n    public isChecked(scheme: SecurityScheme): boolean {\n        for (let n in this.model) {\n            if (n === scheme.getSchemeName()) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns true only if the scheme is one that can be expanded.\n     * @param scheme\n     * @return\n     */\n    public canExpand(scheme: SecurityScheme): boolean {\n        return scheme.type === \"oauth2\" || scheme.type === \"openIdConnect\";\n    }\n\n    /**\n     * Returns true if the given scheme is expanded.\n     * @param scheme\n     * @return\n     */\n    public isExpanded(scheme: SecurityScheme): boolean {\n        return this._expanded[scheme.getSchemeName()] ? true : false;\n    }\n\n    /**\n     * Called to toggle the expansion of a scheme.\n     * @param scheme\n     */\n    public toggleExpansion(scheme: SecurityScheme): void {\n        let pval: boolean = this._expanded[scheme.getSchemeName()];\n        if (pval) {\n            this._expanded[scheme.getSchemeName()] = false;\n        } else {\n            this._expanded[scheme.getSchemeName()] = true;\n        }\n    }\n\n    /**\n     * Called to expand a scheme.\n     * @param scheme\n     */\n    public expand(scheme: SecurityScheme): void {\n        this._expanded[scheme.getSchemeName()] = true;\n    }\n\n    /**\n     * Called to collapse a scheme.\n     * @param scheme\n     */\n    public collapse(scheme: SecurityScheme): void {\n        this._expanded[scheme.getSchemeName()] = false;\n    }\n\n    /**\n     * Adds/removes the security scheme from the model.\n     * @param scheme\n     */\n    public toggleSecurityScheme(scheme: SecurityScheme, enable?: boolean): void {\n        if (enable === undefined) {\n            enable = !this.isChecked(scheme);\n        }\n        if (enable) {\n            // any other security scheme is mutually exclusive with anonymous access\n            this.anonEnabled = false;\n            this.model[scheme.getSchemeName()] = [];\n            if (this.canExpand(scheme)) {\n                this.expand(scheme);\n            }\n        } else {\n            delete this.model[scheme.getSchemeName()];\n            if (this.canExpand(scheme)) {\n                this.collapse(scheme);\n            }\n        }\n    }\n\n    /**\n     * Returns the possible scopes for the given scheme.\n     * @param scheme\n     * @return\n     */\n    public scopes(scheme: SecurityScheme): ScopeInfo[] {\n        if (this.canExpand(scheme)) {\n            if (this.scopeCache[scheme.getSchemeName()]) {\n                return this.scopeCache[scheme.getSchemeName()];\n            }\n            let visitor: ScopeFinder = new ScopeFinder();\n            VisitorUtil.visitTree(scheme, visitor, TraverserDirection.down);\n            let rval: ScopeInfo[] = visitor.scopes();\n            this.scopeCache[scheme.getSchemeName()] = rval;\n            return rval;\n        }\n        return [];\n    }\n\n    /**\n     * Returns true if the given scope is enabled/checked in the model.\n     * @param scheme\n     * @param scope\n     * @return\n     */\n    public isScopeChecked(scheme: SecurityScheme, scope: string): boolean {\n        let modelScopes: string[] = this.model[scheme.getSchemeName()];\n        if (modelScopes !== undefined) {\n            return modelScopes.indexOf(scope) != -1;\n        }\n        return false;\n    }\n\n    /**\n     * Toggles the enabled/checked status of a single scope for a given scheme.\n     * @param scheme\n     * @param scope\n     * @param enable\n     */\n    public toggleScope(scheme: SecurityScheme, scope: string, enable?: boolean): void {\n        let checked: boolean = enable;\n        if (enable === undefined) {\n            checked = !this.isScopeChecked(scheme, scope);\n        }\n\n        let modelScopes: string[] = this.model[scheme.getSchemeName()];\n        if (modelScopes === undefined) {\n            return;\n        }\n        let idx: number = modelScopes.indexOf(scope);\n        if (idx !== -1 && !checked) {\n            modelScopes.splice(idx, 1);\n        }\n        if (idx === -1 && checked) {\n            modelScopes.push(scope);\n        }\n    }\n\n    /**\n     * Finds all security schemes defined in the document.\n     * @param document\n     * @return\n     */\n    public findSchemes(document: Document): SecurityScheme[] {\n        let visitor: SecuritySchemeFinder = new SecuritySchemeFinder();\n        VisitorUtil.visitTree(document, visitor, TraverserDirection.down);\n        return visitor.schemes();\n    }\n\n}\n\n/**\n * Visitor used to find security schemes in a document.\n */\nclass SecuritySchemeFinder extends CombinedVisitorAdapter {\n\n    private _schemes: SecurityScheme[] = [];\n\n    public schemes(): SecurityScheme[] {\n        return this._schemes;\n    }\n\n    public visitSecurityScheme(node: SecurityScheme): void {\n        this._schemes.push(node);\n    }\n\n}\n\n\n/**\n * Used to get an array of available scopes so that the user can choose which\n * of them are required.\n */\nclass ScopeFinder extends CombinedVisitorAdapter {\n\n    private _scopes: ScopeInfo[] = [];\n    private _scopeNames: string[] = [];\n\n    public scopes(): ScopeInfo[] {\n        return this._scopes;\n    }\n\n    protected visitOAuthFlow(node: OAuthFlow): void {\n        for (let scope of node.getScopes()) {\n            if (this._scopeNames.indexOf(scope) === -1) {\n                this._scopes.push({\n                    name: scope,\n                    description: node.scopes[scope]\n                });\n                this._scopeNames.push(scope);\n            }\n        }\n    }\n\n    public visitScopes(node: Oas20Scopes): void {\n        for (let scope of node.getScopeNames()) {\n            if (this._scopeNames.indexOf(scope) === -1) {\n                this._scopes.push({\n                    name: scope,\n                    description: node.getScopeDescription(scope)\n                });\n                this._scopeNames.push(scope);\n            }\n        }\n    }\n\n    public visitImplicitOAuthFlow(node: Oas30ImplicitOAuthFlow | Aai20ImplicitOAuthFlow): void { this.visitOAuthFlow(node); }\n    public visitPasswordOAuthFlow(node: Oas30PasswordOAuthFlow | Aai20PasswordOAuthFlow): void { this.visitOAuthFlow(node); }\n    public visitClientCredentialsOAuthFlow(node: Oas30ClientCredentialsOAuthFlow | Aai20ClientCredentialsOAuthFlow): void { this.visitOAuthFlow(node); }\n    public visitAuthorizationCodeOAuthFlow(node: Oas30AuthorizationCodeOAuthFlow | Aai20AuthorizationCodeOAuthFlow): void { this.visitOAuthFlow(node); }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"security-requirement\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"false\" heading=\"Define the Security Requirement\" [valid]=\"isValid()\">\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>Configure a Security Requirement</h3>\n            <p class=\"explanation\">\n                <span>\n                    Choose which combination of security schemes are required by clients accessing\n                    <span class=\"strong\" *ngIf=\"!isGlobalContext()\">this operation.</span>\n                    <span class=\"strong\" *ngIf=\"isGlobalContext()\">any operation in this API.</span>\n                    When necessary (depending on the type of scheme) also configure required scopes for each enabled scheme.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"list-group list-view-pf list-view-pf-view security-scheme-list\">\n\n                <!-- No Schemes Found -->\n                <div class=\"blank-slate-pf \" *ngIf=\"schemes.length === 0\">\n                    <div class=\"blank-slate-pf-icon\">\n                        <span class=\"pficon pficon pficon-warning-triangle-o\"></span>\n                    </div>\n                    <h1>No Security Schemes Found</h1>\n                    <p>\n                        There are currently no <strong>Security Schemes</strong> defined for this API.  Before you can\n                        configure the <strong>security requirements</strong>, you must first configure the possible schemes.\n                        Security schemes are configured at the root/global of the API.\n                    </p>\n                </div>\n\n                <!-- Select from list of Schemes -->\n                <div class=\"list-group-item anonymous\" [class.active]=\"anonEnabled\" *ngIf=\"schemes.length > 0\">\n                    <div class=\"list-group-item-header\">\n                        <div class=\"list-view-pf-expand\" [style.visibility]=\"'hidden'\">\n                            <span class=\"fa fa-angle-right\"></span>\n                        </div>\n                        <div class=\"list-view-pf-checkbox\">\n                            <input type=\"checkbox\" [checked]=\"anonEnabled\" (change)=\"setAnon($event.target['checked'])\">\n                        </div>\n                        <div class=\"list-view-pf-main-info\" (click)=\"setAnon(!anonEnabled)\">\n                            <div class=\"list-view-pf-body\">\n                                <div class=\"list-view-pf-description\">\n                                    <div class=\"list-group-item-heading\">\n                                        <span class=\"name\">No Security</span>\n                                        <span class=\"type\">anonymous</span>\n                                    </div>\n                                </div>\n                                <div class=\"list-view-pf-additional-info\">\n                                    <div class=\"list-group-item-text\">Allow access to the API without authentication (cannot be <strong>combined</strong> with other security).</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"list-group-item\" *ngFor=\"let scheme of schemes\" [class.active]=\"isChecked(scheme)\"\n                     [class.list-view-pf-expand-active]=\"isExpanded(scheme)\">\n                    <div class=\"list-group-item-header\">\n                        <div class=\"list-view-pf-expand\" [style.visibility]=\"canExpand(scheme) ? 'visible' : 'hidden'\">\n                            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isExpanded(scheme)\"\n                                  (click)=\"toggleExpansion(scheme)\"></span>\n                        </div>\n                        <div class=\"list-view-pf-checkbox\">\n                            <input type=\"checkbox\" [checked]=\"isChecked(scheme)\" (change)=\"toggleSecurityScheme(scheme, $event.target['checked'])\">\n                        </div>\n                        <div class=\"list-view-pf-main-info\" (click)=\"toggleSecurityScheme(scheme)\">\n                            <div class=\"list-view-pf-body\">\n                                <div class=\"list-view-pf-description\">\n                                    <div class=\"list-group-item-heading\">\n                                        <span class=\"name\">{{ scheme.getSchemeName() }}</span>\n                                        <span class=\"type\">{{ scheme.type }}</span>\n                                    </div>\n                                </div>\n                                <div class=\"list-view-pf-additional-info\">\n                                    <div class=\"list-group-item-text\">{{ scheme.description }}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"canExpand(scheme)\" class=\"list-group-item-container container-fluid\" [class.hidden]=\"!isExpanded(scheme)\">\n                        <div class=\"close\">\n                            <span class=\"pficon pficon-close\" (click)=\"collapse(scheme)\"></span>\n                        </div>\n                        <div class=\"row scopes-row\">\n                            <td class=\"col-md-12 scopes-section\">\n                                <div class=\"instructions\" *ngIf=\"scopes(scheme).length > 0 && isGlobalContext()\">Specify scopes to define the permissions necessary for users to access operations in this API.</div>\n                                <div class=\"instructions\" *ngIf=\"scopes(scheme).length > 0 && !isGlobalContext()\">Specify scopes to define the permissions necessary for a user to access the operation.</div>\n                                <div class=\"no-scopes\" *ngIf=\"scopes(scheme).length === 0\">\n                                    <div class=\"alert alert-warning\">\n                                        <span class=\"pficon pficon-warning-triangle-o\"></span>\n                                        <strong>No Available Scopes</strong> No scopes have been configured for this Security Scheme.\n                                    </div>\n                                </div>\n                                <div class=\"scopes\" *ngIf=\"scopes(scheme).length > 0\">\n                                    <div class=\"scope\" *ngFor=\"let scope of scopes(scheme)\">\n                                        <div class=\"scope-check\">\n                                            <input type=\"checkbox\" [checked]=\"isScopeChecked(scheme, scope.name)\" [disabled]=\"!isChecked(scheme)\"\n                                                   (change)=\"toggleScope(scheme, scope.name, $event.target['checked'])\">\n                                        </div>\n                                        <div class=\"scope-name\">\n                                            <a [class.disabled]=\"!isChecked(scheme)\" title=\"{{ scope.description }}\"\n                                               (click)=\"toggleScope(scheme, scope.name)\">{{ scope.name }}</a>\n                                        </div>\n                                    </div>\n                                </div>\n\n                            </td>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    Output,\n    QueryList, SimpleChanges,\n    ViewChildren,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {AbstractInlineEditor} from \"./inline-editor.base\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {Node} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {KeypressUtils} from \"../../_util/keypress.util\";\n\n@Component({\n    selector: \"inline-array-editor\",\n    templateUrl: \"inline-array-editor.component.html\",\n    styleUrls: [\"inline-array-editor.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InlineArrayEditorComponent extends AbstractBaseComponent implements AfterViewInit {\n\n    @Input() value: string[];\n    @Input() noValueMessage: string;\n    @Input() items: string[] | (()=>string[]);\n    @Input() baseNode: Node;\n    @Input() nodePath: string;\n\n    @Output() onChange: EventEmitter<string[]> = new EventEmitter<string[]>();\n    @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n\n    @ViewChildren(\"newvalue\") input: QueryList<ElementRef>;\n\n    public editing: boolean = false;\n    public evalue: string;\n    public evalues: {};\n\n    public firstEnter: boolean;\n    public firstInputValue: boolean = true;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        if (changes[\"value\"]) {\n            if (!this.firstInputValue) {\n                this.onCancel();\n            }\n            this.firstInputValue = false;\n        }\n    }\n\n    ngAfterViewInit(): void {\n        this.input.changes.subscribe(changes => {\n            if (changes.last && this.firstEnter) {\n                changes.last.nativeElement.focus();\n                changes.last.nativeElement.select();\n                this.firstEnter = false;\n            }\n        });\n    }\n\n    public placeholderText(): string {\n        if (this.hasItems()) {\n            return \"Enter a comma-separated list of values and/or select from known options below.\";\n        }\n        return \"Enter a comma-separated list of values.\";\n    }\n\n    public onInputKeypress(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.onCancel();\n        }\n        if (KeypressUtils.isEnterKey(event)) {\n            this.onSave();\n        }\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value.length === 0;\n    }\n\n    public onStartEditing(): void {\n        this.firstEnter = true;\n        if (AbstractInlineEditor.s_activeEditor !== null && AbstractInlineEditor.s_activeEditor !== this) {\n            AbstractInlineEditor.s_activeEditor.onCancel();\n        }\n        AbstractInlineEditor.s_activeEditor = this;\n\n        this.editing = true;\n        if (this.isEmpty()) {\n            this.evalue = \"\";\n            this.evalues = [];\n        } else {\n            this.evalue = this.adHocValues().join(\", \");\n            this.evalues = this.aprioriValues();\n        }\n\n        // If the baseNode and/or nodePath are set, then we want to fire a selection event\n        // whenever the user starts editing.\n        if (this.nodePath || this.baseNode) {\n            let path: string = \"\";\n            if (this.baseNode) {\n                path = ModelUtils.nodeToPath(this.baseNode);\n            }\n            if (this.nodePath) {\n                if (!this.nodePath.startsWith(\"/\")) {\n                    path += \"/\";\n                }\n                path += this.nodePath;\n            }\n            this.__selectionService.simpleSelect(path);\n        }\n        this.__changeDetectorRef.markForCheck();\n    }\n\n    private adHocValues(): string[] {\n        if (this.value && this.value.length > 0) {\n            let rval: string[] = [];\n            this.value.forEach( value => {\n                if ( (this.items === null || this.items === undefined) ||\n                     (this.items && this.getItems().indexOf(value) === -1)) {\n                    rval.push(value);\n                }\n            });\n            return rval;\n        } else {\n            return [];\n        }\n    }\n\n    private aprioriValues(): any {\n        if (this.value && this.value.length > 0) {\n            let rval: any = {};\n            this.value.forEach( value => {\n                if (this.items && this.getItems().indexOf(value) !== -1) {\n                    rval[value] = true;\n                }\n            });\n            return rval;\n        } else {\n            return {};\n        }\n    }\n\n    public onSave(): void {\n        let result: any = {};\n        if (this.evalue && this.evalue.length > 0) {\n            this.evalue.split(/[ ,]+/).forEach( val => result[val] = true);\n        }\n        if (this.evalues) {\n            Object.keys(this.evalues).forEach( key => {\n                if (this.evalues[key]) {\n                    result[key] = true;\n                }\n            });\n        }\n\n        let newValue: string[] = Object.keys(result);\n        this.editing = false;\n        AbstractInlineEditor.s_activeEditor = null;\n        this.onChange.emit(newValue);\n    }\n\n    public removeItem(item: string): void {\n        let newValue: string[] = this.value.slice();\n        let idx: number = newValue.indexOf(item);\n        newValue.splice(idx, 1);\n        this.onChange.emit(newValue);\n    }\n\n    public onCancel(): void {\n        this.editing = false;\n        AbstractInlineEditor.s_activeEditor = null;\n        this.onClose.emit();\n    }\n\n    public clearValue(): void {\n        this.evalue = \"\";\n        this.evalues = {};\n        this.input.last.nativeElement.focus();\n        this.input.last.nativeElement.select();\n    }\n\n    public hasItems(): boolean {\n        return this.items && this.getItems().length > 0;\n    }\n\n    public hasItem(item: string): boolean {\n        return this.evalues && this.evalues[item];\n    }\n\n    public toggleItem(item: string): void {\n        if (this.hasItem(item)) {\n            this.evalues[item] = false;\n        } else {\n            this.evalues[item] = true;\n        }\n    }\n\n    public getItems(): string[] {\n        let t: string = typeof this.items;\n        if (t === \"function\") {\n            return (this.items as (()=>string[]))();\n        } else {\n            return this.items as string[];\n        }\n    }\n\n}\n","<span *ngIf=\"!editing\" class=\"inline-array-editor-label\" [class.novalue]=\"isEmpty()\">\n    <span *ngIf=\"isEmpty()\" class=\"inline-editor-label\" [class.empty]=\"isEmpty()\"\n          (click)=\"onStartEditing()\">{{ noValueMessage }}</span>\n    <span class=\"label label-default\" *ngFor=\"let item of value\">\n        <span>{{ item }}</span>\n        <i class=\"pficon pficon-close\" (click)=\"removeItem(item)\"></i>\n    </span>\n    <i class=\"glyphicon glyphicon-pencil\" (click)=\"onStartEditing()\" title=\"Click to edit.\"></i>\n</span>\n<span *ngIf=\"editing\" class=\"inline-editor inline-array-editor\">\n    <div class=\"form-control-pf-editable form-control-pf-edit\">\n        <div class=\"form-control-pf-textbox\">\n            <input #newvalue type=\"text\" [(ngModel)]=\"evalue\" class=\"form-control form-control-pf-editor\" placeholder=\"{{ placeholderText() }}\"\n                   autocomplete=\"off\" (keypress)=\"onInputKeypress($event)\" (keydown)=\"onInputKeypress($event)\">\n            <button type=\"button\" class=\"form-control-pf-empty\" aria-label=\"Clear Value\" (click)=\"clearValue()\">\n              <span class=\"fa fa-times-circle fa-lg\"></span>\n            </button>\n        </div>\n        <button title=\"Save changes.\" type=\"button\" class=\"btn btn-primary form-control-pf-save\"\n                aria-label=\"Save\" (click)=\"onSave()\"><i class=\"glyphicon glyphicon-ok\"></i></button>\n        <button title=\"Cancel changes.\" type=\"button\" class=\"btn btn-default form-control-pf-cancel\"\n                aria-label=\"Cancel\" (click)=\"onCancel()\"><i class=\"glyphicon glyphicon-remove\"></i></button>\n    </div>\n    <div class=\"apriori-items\" *ngIf=\"hasItems()\">\n        <span class=\"apriori-item\" *ngFor=\"let item of getItems()\" (click)=\"toggleItem(item)\" [class.selected]=\"hasItem(item)\">\n            <span class=\"fa fa-square-o\" *ngIf=\"!hasItem(item)\"></span>\n            <span class=\"fa fa-check-square-o\" *ngIf=\"hasItem(item)\"></span>\n            <span>{{ item }}</span>\n        </span>\n    </div>\n</span>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {Library, Oas20Operation, Oas30Operation, OasDocument, TraverserDirection} from \"@apicurio/data-models\";\nimport {HttpCodeService} from \"../../_services/httpcode.service\";\nimport {FindResponseDefinitionsVisitor} from \"../../_visitors/response-definitions.visitor\";\nimport {DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\nexport class AddResponseDialogData {\n    public code: string;\n    public ref: string;\n}\n\n\n@Component({\n    selector: \"add-response-dialog\",\n    templateUrl: \"add-response.component.html\"\n})\nexport class AddResponseDialogComponent {\n\n    @Output() onAdd: EventEmitter<AddResponseDialogData> = new EventEmitter<AddResponseDialogData>();\n\n    @ViewChildren(\"addResponseModal\") addResponseModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    private _statusCode: string = \"\";\n    get statusCode() {\n        return this._statusCode;\n    }\n    set statusCode(code: string) {\n        this._statusCode = code;\n        if (this.codes.indexOf(code) !== -1) {\n            this.codeExists = true;\n        } else {\n            this.codeExists = false;\n        }\n    }\n\n    doc: OasDocument;\n    codes: string[] = [];\n    codeExists: boolean = false;\n    refName: string;\n    references: string[] = [];\n\n    /**\n     * Called to open the dialog.\n     * @param parent\n     * @param statusCode\n     */\n    public open(parent: Oas20Operation | Oas30Operation, statusCode?: string): void {\n        this.doc = <OasDocument>parent.ownerDocument();\n        this.statusCode = statusCode;\n        if (!statusCode) {\n            this.statusCode = \"\";\n        }\n        this._isOpen = true;\n        this.addResponseModal.changes.subscribe( thing => {\n            if (this.addResponseModal.first) {\n                this.addResponseModal.first.show();\n            }\n        });\n\n        this.codes = [];\n        this.codeExists = false;\n        if (parent.responses) {\n            this.codes = parent.responses.getResponseStatusCodes();\n        }\n\n        this.references = this.getResponseDefinitionNames();\n        this.refName = null;\n    }\n\n    /**\n     * Gets a list of all the response definition names in the document.\n     */\n    private getResponseDefinitionNames(): string[] {\n        let viz: FindResponseDefinitionsVisitor = new FindResponseDefinitionsVisitor(null);\n        Library.visitTree(this.doc, viz, TraverserDirection.down);\n        return viz.getSortedResponseDefinitions().map( response => {\n            return response.getName();\n        });\n    }\n\n    hasReferences(): boolean {\n        return this.references && this.references.length > 0;\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.statusCode = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        if (this.isValid()) {\n            let refPrefix: string = \"#/components/responses/\";\n            if (this.doc.is2xDocument()) {\n                refPrefix = \"#/responses/\";\n            }\n\n            let data: AddResponseDialogData = {\n                code : this.statusCode,\n                ref : refPrefix + this.refName\n            };\n            if (!this.refName) {\n                data.ref = null;\n            }\n            this.onAdd.emit(data);\n            this.cancel();\n        }\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addResponseModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Returns true if today is the first of April.  (teapot related)\n     */\n    isAprilFirst(): boolean {\n        let d: Date = new Date();\n        return d.getMonth() === 3 && d.getDate() === 1;\n    }\n\n    /**\n     * Check to see if the form is valid.\n     */\n    isValid(): boolean {\n        return this.statusCode && !this.codeExists;\n    }\n\n    public getStatusCodeDropDownOptions(): DropDownOption[] {\n        return HttpCodeService.generateDropDownOptions();\n    }\n\n    public getReferenceDropDownOptions(): DropDownOption[] {\n        return this.references.map(name => {\n            return new DropDownOptionValue(name, name);\n        });\n    }\n\n    public getStatusCode(): string {\n        return this.statusCode;\n    }\n\n    public setStatusCode(statusCode: string) {\n        this.statusCode = statusCode;\n    }\n\n    getReference(): string {\n        return this.refName;\n    }\n\n    setReference(newRefName: string): void {\n        this.refName = newRefName;\n    }\n}\n","<!-- Add Response Dialog -->\n<div bsModal #addResponseModal=\"bs-modal\" class=\"modal fade\" id=\"addResponseModal\" tabindex=\"-1\" role=\"dialog\" [config]=\"{ backdrop: true }\"\n     aria-labelledby=\"addResponseModalLabel\" role=\"dialog\" aria-hidden=\"true\" (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addResponseModalLabel\">Add Response</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter information about the new response below and then click Add.</p>\n                <form id=\"addResponse-form\" class=\"form-horizontal\" (submit)=\"add()\" #addResponseForm=\"ngForm\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-5 control-label required\" for=\"statusCodeDropDown\">Response Status Code</label>\n                        <div class=\"col-sm-7\">\n                            <drop-down id=\"statusCodeDropDown\" [id]=\"'statusCodeDropDown'\"\n                                [options]=\"getStatusCodeDropDownOptions()\"\n                                [value]=\"getStatusCode()\"\n                                (onValueChange)=\"setStatusCode($event)\"\n                                [noSelectionLabel]=\"'Choose HTTP Status Code'\"></drop-down>\n                            <div class=\"form-error-message error\" *ngIf=\"codeExists\">Response with this code already exists.</div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group\" *ngIf=\"hasReferences()\">\n                        <label class=\"col-sm-5 control-label\" for=\"refDropDown\">Response Definition <i>(optional)</i></label>\n                        <div class=\"col-sm-7\">\n                            <drop-down id=\"refDropDown\" [id]=\"'refDropDown'\"\n                                       [options]=\"getReferenceDropDownOptions()\"\n                                       [value]=\"getReference()\"\n                                       (onValueChange)=\"setReference($event)\"\n                                       [noSelectionLabel]=\"'Response Reference.'\"></drop-down>\n                            <a *ngIf=\"refName\" (click)=\"setReference(null)\">(reset)</a>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!isValid()\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AaiMessageTraitDefinition} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\n@Component({\n    selector: \"[messagetrait-item]\",\n    templateUrl: \"messagetrait-item.component.html\",\n    styleUrls: [ \"messagetrait-item.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MessageTraitItemComponent extends AbstractBaseComponent {\n\n    @Input() messageTrait: AaiMessageTraitDefinition;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns the name of the message trait.\n     */\n    public messageTraitName(): string {\n        return this.messageTrait.getName();\n    }\n\n    /**\n     * Gets the node path for the message trait.\n     */\n    public asNodePath(): string {\n        return ModelUtils.nodeToPath(this.messageTrait);\n    }\n\n    /**\n     * Returns true iff the message trait definition is \"imported\".  A definition is imported if it has a $ref\n     * that refers to an external source (anything other than #/ references).\n     */\n    isImported(): boolean {\n        let $ref: string = this.messageTrait.$ref;\n        return ($ref && $ref.indexOf(\"#\") != 0);\n    }\n\n}\n","<span class=\"icon fa fa-fw fa-envelope-square\"></span>\n<span class=\"name\">{{ messageTraitName() }}</span>\n<span class=\"imported label label-info\" *ngIf=\"isImported()\">Imported</span>\n<collaborator-aggregate [nodePath]=\"asNodePath()\"></collaborator-aggregate>\n<validation-aggregate [models]=\"[messageTrait]\"></validation-aggregate>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    Library,\n    AaiDocument,\n    AaiMessageTraitDefinition,\n    ReferenceUtil,\n    SimplifiedType,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\n\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {EditorsService} from \"../../_services/editors.service\";\nimport {ApiCatalogService} from \"../../_services/api-catalog.service\";\n\n@Component({\n    selector: \"messagetrait-form\",\n    templateUrl: \"messagetrait-form.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MessageTraitFormComponent extends SourceFormComponent<AaiMessageTraitDefinition> {\n\n    protected _messageTrait: AaiMessageTraitDefinition;\n\n    @Input()\n    set messageTrait(messageTrait: AaiMessageTraitDefinition) {\n        this._messageTrait = messageTrait;\n        this.sourceNode = messageTrait;\n        this.revertSource();\n    }\n    get messageTrait(): AaiMessageTraitDefinition {\n        return this._messageTrait;\n    }\n\n     /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param selectionService\n     * @param commandService\n     * @param documentService\n     * @param editors\n     * @param catalog\n     */\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n            protected selectionService: SelectionService,\n            protected commandService: CommandService,\n            protected documentService: DocumentService,\n            private editors: EditorsService,\n            private catalog: ApiCatalogService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    protected createEmptyNodeForSource(): AaiMessageTraitDefinition {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected createReplaceNodeCommand(node: AaiMessageTraitDefinition): ICommand {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public enableSourceMode(): void {\n        this.sourceNode = this.messageTrait;\n        super.enableSourceMode();\n    }\n\n    public changeTitle(newTitle: string): void {\n        console.info(\"[MessageTraitFormComponent] Changing message title to: \", newTitle);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageTrait,\n                \"title\", newTitle);\n        this.commandService.emit(command);\n    }\n\n    public changeSummary(newSummary: string): void {\n        console.info(\"[MessageTraitFormComponent] Changing message summary to: \", newSummary);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageTrait,\n                \"summary\", newSummary);\n        this.commandService.emit(command);\n    }\n\n    public changeDescription(newDescription: string): void {\n        console.info(\"[MessageTraitFormComponent] Changing message description to: \", newDescription);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.messageTrait,\n                \"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n    public changeTags(newTags: string[]): void {\n        console.info(\"[MessageTraitFormComponent] User changed the tags.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.messageTrait, \"tags\", newTags);\n        this.commandService.emit(command);\n    }\n\n    public tagDefs(): ()=>string[] {\n        return ()=> {\n            if (this.messageTrait.ownerDocument().tags && this.messageTrait.ownerDocument().tags.length > 0) {\n                let tagDefs: string[] = this.messageTrait.ownerDocument().tags.map(tagDef => tagDef.name);\n                tagDefs.sort();\n                return tagDefs;\n            } else {\n                return [];\n            }\n        }\n    }\n}\n","<div class=\"detail-title\">\n    <div messagetrait-item class=\"detail-label\" [messageTrait]=\"messageTrait\"></div>\n    <div class=\"detail-actions\">\n\n    </div>\n</div>\n<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n\n    <div class=\"api-path-detail\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"apipath-2-get\">\n                <!-- Title -->\n                <div class=\"section-field-label\">\n                    <validation-problem [model]=\"messageTrait\" [shallow]=\"true\" [property]=\"'title'\"></validation-problem>\n                    <span>Title</span>\n                </div>\n                <div class=\"section-field title\">\n                    <pf-inline-text-editor [value]=\"messageTrait.title\" [noValueMessage]=\"'No title.'\"\n                                            [labelClass]=\"'api-version'\"\n                                            [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                            [baseNode]=\"messageTrait\" nodePath=\"title\"\n                                            (onChange)=\"changeTitle($event)\"></pf-inline-text-editor>\n                </div>\n\n                <!-- Summary -->\n                <div class=\"section-field-label\">\n                    <validation-problem [model]=\"messageTrait\" [shallow]=\"true\" [property]=\"'summary'\"></validation-problem>\n                    <span>Summary</span>\n                </div>\n                <div class=\"section-field summary\">\n                    <pf-inline-text-editor [value]=\"messageTrait.summary\" [noValueMessage]=\"'No summary.'\"\n                                            [labelClass]=\"'api-version'\"\n                                            [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                            [baseNode]=\"messageTrait\" nodePath=\"summary\"\n                                            (onChange)=\"changeSummary($event)\"></pf-inline-text-editor>\n                </div>\n\n                <!-- Description -->\n                <div class=\"section-field-label\">\n                    <validation-problem [model]=\"messageTrait\" [shallow]=\"true\" [property]=\"'description'\"></validation-problem>\n                    <span>Description</span>\n                </div>\n                <div class=\"section-field description\">\n                    <inline-markdown-editor [value]=\"messageTrait.description\" [noValueMessage]=\"'No description.'\"\n                                            [labelClass]=\"'api-item-editor api-description-editor operation-description api-item-description'\"\n                                            [inputClass]=\"'api-item-description'\"\n                                            [formClass]=\"'api-description-editor-form'\"\n                                            [baseNode]=\"messageTrait\" nodePath=\"description\"\n                                            (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n                </div>\n\n                <!-- Tags -->\n                <div class=\"section-field-label\">\n                    <validation-problem [model]=\"messageTrait\" [shallow]=\"true\" [property]=\"'tags'\"></validation-problem>\n                    <span>Tags</span>\n                </div>\n                <div class=\"section-field tags\">\n                    <inline-array-editor noValueMessage=\"No tags configured.\" [value]=\"messageTrait.tags\" [items]=\"tagDefs()\"\n                                        [baseNode]=\"messageTrait\" nodepath=\"tags\"\n                                        (onChange)=\"changeTags($event)\"></inline-array-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input, SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandFactory, ExtensibleNode, Extension, ICommand, Library} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {AddExtensionDialogComponent} from \"../../dialogs/add-extension.component\";\n\n\n@Component({\n    selector: \"extensions-section\",\n    templateUrl: \"extensions-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExtensionsSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: ExtensibleNode;\n\n    @ViewChild(\"addExtensionDialog\", { static: true }) addExtensionDialog: AddExtensionDialogComponent;\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    public showSectionBody: boolean;\n\n    private _extensions: Extension[];\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        this._extensions = null;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showSectionBody = this.hasExtensions();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this._extensions = null;\n    }\n\n    /**\n     * Returns the list of extensions\n     */\n    public extensions(): Extension[] {\n        if (this._extensions !== null) {\n            return this._extensions;\n        }\n\n        let extensions: Extension[] = this.parent.getExtensions();\n        if (ObjectUtils.isNullOrUndefined(extensions)) {\n            extensions = [];\n        }\n        // Clone the array\n        extensions = extensions.slice(0);\n        // Sort it\n        extensions.sort( (obj1, obj2) => {\n            return obj1.name.toLowerCase().localeCompare(obj2.name.toLowerCase());\n        });\n        this._extensions = extensions;\n        return extensions;\n    }\n\n    public extensionsNodePath(): string {\n        return ModelUtils.nodeToPath(this.parent);\n    }\n\n    /**\n     * Returns true if the node has at least one extension defined.\n     */\n    public hasExtensions(): boolean {\n        let extensions: Extension[] = this.extensions();\n        return extensions && extensions.length > 0;\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the vendor extensions.\n     */\n    public deleteAllExtensions(): void {\n        let command: ICommand = CommandFactory.createDeleteAllExtensionsCommand(this.parent);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called to open the Add Extension dialog.\n     */\n    public openAddExtensionDialog(): void {\n        this.addExtensionDialog.open(this.parent);\n    }\n\n    /**\n     * Called when the user clicks 'Add' on the Add Extension modal dialog.\n     * @param extension\n     */\n    public addExtension(extension: any): void {\n        let command: ICommand = CommandFactory.createNewExtensionCommand(this.parent, extension.name, extension.value);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(this.parent);\n        path.appendSegment(extension.name, false);\n        this.selectionService.select(path.toString());\n    }\n\n    /**\n     * Called to open the Rename Extension dialog.\n     */\n    public openRenameExtensionDialog(extension: Extension): void {\n        this.renameDialog.open(extension, extension.name, (name) => {\n            return false;\n        });\n    }\n\n    /**\n     * Renames the extension.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        window.alert(\"Not yet implemented!\");\n        // let extension: Extension = <any>event.entity;\n        // let command: ICommand = CommandFactory.createRenameExtensionCommand(extension, event.newName);\n        // this.commandService.emit(command);\n    }\n\n    /**\n     * Deletes a single extension.\n     * @param extension\n     */\n    public deleteExtension(extension: Extension): void {\n        let command: ICommand = CommandFactory.createDeleteExtensionCommand(extension);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"extensions\" label=\"VENDOR EXTENSIONS\" [counterItems]=\"extensions()\"\n         contextHelp=\"Configure vendor extensions for the selected component in this section.\"\n         collaborationNodePath=\"extensionsNodePath()\" [expanded]=\"showSectionBody\"\n         [validationModels]=\"extensions()\">\n    <span actions>\n        <icon-button (onClick)=\"openAddExtensionDialog()\" [pullRight]=\"true\" type=\"add\"\n                     title=\"Add a new vendor extension.\"></icon-button>\n        <icon-button (onClick)=\"deleteAllExtensions()\" [disabled]=\"!hasExtensions()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     title=\"Delete all vendor extensions.\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"extensions().length === 0\">\n            <span>No vendor extensions have been configured.</span>\n            <a (click)=\"openAddExtensionDialog()\">Add a vendor extension</a>\n        </signpost>\n\n        <!-- The list of extensions -->\n        <div class=\"extensions\" *ngIf=\"extensions().length > 0\">\n            <extension-row *ngFor=\"let extension of extensions()\"\n                           [parent]=\"parent\"\n                           [item]=\"extension\"\n                           (onDelete)=\"deleteExtension(extension)\"\n                           (onRename)=\"openRenameExtensionDialog(extension)\"></extension-row>\n        </div>\n    </div>\n</section>\n<add-extension-dialog #addExtensionDialog (onAdd)=\"addExtension($event)\"></add-extension-dialog>\n<rename-entity-dialog #renameDialog\n                      type=\"Extension\"\n                      title=\"Rename Vendor Extension\"\n                      warning=\"Renaming a vendor extension may have unknown consequences.\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport {\n    AaiDocument,\n    AaiMessage,\n    CommandFactory,\n    ICommand,\n    ReferenceUtil,\n    SimplifiedPropertyType,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {DropDownOption, DropDownOptionValue} from \"../../common/drop-down.component\";\n\n/**\n * @author vvilerio\n */\n@Component({\n    selector: \"oneof-row\",\n    templateUrl: \"oneof-row.component.html\",\n    styleUrls: [\"oneof-row.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OneOfRowComponent extends AbstractRowComponent<AaiMessage, SimplifiedPropertyType> {\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Input() oneOfName: string;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public isEditingOneOf(): boolean {\n        return this.isEditingTab(\"oneOf\");\n    }\n\n    public isOneOf(): boolean {\n        return this.item._isOneOfMessage\n    }\n\n    public oneOf(item): string {\n        return item.$ref;\n    }\n\n    public oneOfOptions(item): DropDownOption[] {\n        var vals: Array<DropDownOptionValue> = [];\n        var doc: AaiDocument = (<AaiDocument>this.item.ownerDocument());\n        doc.components.getMessagesList().filter(f => f.getName() !== this.deref(item).getName()).forEach(mess => {\n            vals.push(new DropDownOptionValue(mess.getName(), \"#/components/messages/\".concat(mess.getName())));\n        })\n        return vals;\n    }\n\n    public toggleDropDown(): void {\n        if (this.isEditing()) {\n            this._editing = false;\n        } else {\n            this._editing = true;\n        }\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public deref(message: AaiMessage){\n        return ReferenceUtil.resolveFragmentFromJS(this.item.parent().ownerDocument(), message.$ref);\n    }\n\n    public displayType(): SimplifiedType {\n        let type: SimplifiedType = new SimplifiedType();\n        if (this.item && this.item.$ref) {\n            type.type = this.item.$ref;\n        }\n        return type;\n    }\n\n    public displayOneOf(): string {\n        return  \"[\".concat(this.item.$ref).concat(\"]\");\n    }\n\n    public setNumValue(val: string, name: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<number>(this.item, name, Number(val));\n        this.commandService.emit(command);\n    }\n\n    public changeRef(ref: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.item, \"$ref\", ref);\n        this.commandService.emit(command);\n    }\n\n    protected updateModel(): void {\n        // Nothing to do for this row impl\n    }\n\n}\n","<div class=\"oneof\" [class.expanded]=\"isEditing()\" >\n    <div class=\"header\">\n        <div class=\"reference\">\n            <span>Reference</span>\n        </div>\n        <div class=\"name\">\n            <span>{{displayOneOf()}}</span>\n        </div>\n        <div class=\"oneof-value\" (click)=\"toggleDropDown()\" [class.selected]=\"isEditing()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditing()\"></span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"oneof-content\" *ngIf=\"isEditing()\">\n                        <div class=\"oneof-sel\">\n                            <span class=\"dropdown-label\">Message (OneOf type) is</span>\n                            <drop-down id=\"api-oneof-sel\"\n                                       [value]=\"oneOf(item)\"\n                                       [options]=\"oneOfOptions(item)\"\n                                       (onValueChange)=\"changeRef($event)\"\n                                       [noSelectionLabel]=\"oneOfName\"></drop-down>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    Oas20Operation,\n    Oas20Parameter,\n    Oas20PathItem,\n    Oas30Operation,\n    Oas30Parameter,\n    Oas30PathItem,\n    CombinedVisitorAdapter,\n    Library,\n    OasOperation,\n    OasPathItem,\n    ICommand, OasParameter, CommandFactory\n} from \"@apicurio/data-models\";\nimport {ModelUtils as OaiModelUtils} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\n\n\n@Component({\n    selector: \"path-params-section\",\n    templateUrl: \"path-params-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PathParamsSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: Oas20Operation | Oas30Operation | Oas20PathItem | Oas30PathItem;\n    @Input() path: OasPathItem;\n\n    private _pathParameters: (Oas30Parameter | Oas20Parameter)[] = null;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        this._pathParameters = null;\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this._pathParameters = null;\n    }\n\n    public canHavePathParams(): boolean {\n        return this.path.getPath().indexOf(\"{\") !== -1;\n    }\n\n    public isPathItem(): boolean {\n        return this.parent === this.path;\n    }\n\n    public contextHelp(): string {\n        if (this.isPathItem()) {\n            return `\n                This section is visible because this path has at least one dynamic path parameter.\n                Here you can configure information about the path parameter, such as its description\n                and type.  This information will be inherited by all operations in the path (but can\n                optionally be overridden by each respective operation).`;\n        } else {\n            return `\n                This section is visible because the path/endpoint this operation belongs to has dynamic\n                parameters. Configure the parameters' descriptions and types below.`\n\n        }\n    }\n\n    public pathParameters(): (Oas30Parameter | Oas20Parameter)[] {\n        if (this._pathParameters === null) {\n            let names: any = {};\n            OaiModelUtils.detectPathParamNames(this.path.getPath()).forEach( paramName => {\n                names[paramName] = \"detected\";\n            });\n            this.parent.getParametersIn(\"path\").forEach( param => {\n                names[param.name] = \"present\";\n            });\n\n            this._pathParameters = [];\n            for (let pname in names) {\n                this._pathParameters.push(this.pathParam(pname));\n            }\n        }\n        return this._pathParameters;\n    }\n\n    public pathParameterPaths(): string[] {\n        return this.parent.getParametersIn(\"path\").map( param => {\n            return ModelUtils.nodeToPath(param);\n        });\n    }\n\n    public pathParam(paramName: string): Oas30Parameter | Oas20Parameter {\n        let param: Oas20Parameter | Oas30Parameter = this.parent.getParameter(\"path\", paramName) as Oas30Parameter | Oas20Parameter;\n\n        if (param === null) {\n            let missingParam: Oas30Parameter | Oas20Parameter = this.parent.createParameter() as Oas30Parameter | Oas20Parameter;\n            missingParam.in = \"path\";\n            missingParam.name = paramName;\n            missingParam.required = true;\n            let overriddenParam: OasParameter = this.getOverriddenParam(missingParam);\n            if (overriddenParam) {\n                Library.readNode(Library.writeNode(overriddenParam), missingParam);\n            }\n            missingParam.setAttribute(\"missing\", true);\n            param = missingParam;\n        }\n\n        return param;\n    }\n\n    public deleteParam(parameter: Oas30Parameter): void {\n        let command: ICommand = CommandFactory.createDeleteParameterCommand(parameter);\n        this.commandService.emit(command);\n    }\n\n    public createPathParam(paramName: string): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.parent, paramName, \"path\",\n            null, null, false);\n        this.commandService.emit(command);\n\n        let nodePath = Library.createNodePath(this.parent);\n        let index: number = (this.parent as any).parameters.findIndex(p => p.name === paramName);\n        nodePath.appendSegment(\"parameters\", false);\n        nodePath.appendSegment(String(index), true);\n    }\n\n    public getOverriddenParam(param: OasParameter): OasParameter {\n        let viz: DetectOverrideVisitor = new DetectOverrideVisitor(param);\n        param.parent().accept(viz);\n        return viz.overriddenParam;\n    }\n\n}\n\nclass DetectOverrideVisitor extends CombinedVisitorAdapter {\n\n    public overriddenParam: OasParameter = null;\n\n    constructor(private param: OasParameter) {\n        super();\n    }\n\n    public visitOperation(node: OasOperation): void {\n        this.overriddenParam = (<OasPathItem>node.parent()).getParameter(this.param.in, this.param.name) as OasParameter;\n    }\n\n}\n","<!-- Path Parameters Section -->\n<section type=\"path-parameters\" label=\"PATH PARAMETERS\"\n         [counterItems]=\"pathParameters()\" *ngIf=\"canHavePathParams()\"\n         [collaborationNodePath]=\"pathParameterPaths()\"\n         [contextHelp]=\"contextHelp()\" [validationModels]=\"pathParameters()\">\n    <span actions></span>\n    <div body>\n        <!-- The list of path parameters -->\n        <div class=\"container-fluid path-parameters typed-item-list\">\n            <path-param-row *ngFor=\"let param of pathParameters()\" [item]=\"param\"\n                            (onDelete)=\"deleteParam(param)\"></path-param-row>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {TextInputEditorComponent} from \"./inline-editor.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {KeypressUtils} from \"../../_util/keypress.util\";\n\n@Component({\n    selector: \"pf-inline-text-editor\",\n    templateUrl: \"pf-inline-text-editor.component.html\",\n    styleUrls: [ \"pf-inline-text-editor.component.css\" ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PfInlineTextEditorComponent extends TextInputEditorComponent {\n\n    constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    public onInputKeypress(event: KeyboardEvent): void {\n        super.onInputKeypress(event);\n\n        if (KeypressUtils.isEnterKey(event)) {\n            this.onSave();\n        }\n    }\n\n    public clearValue(): void {\n        this.evalue = '';\n        this.input.first.nativeElement.focus();\n    }\n\n}\n","<span *ngIf=\"!editing\" class=\"inline-editor-label inline-text-editor-label {{ labelClass }} pf-inline-text-editor-label\"\n      title=\"Click to edit.\" (click)=\"onStartEditing()\" [class.disabled]=\"!enabled\">\n    <span [class.empty]=\"isEmpty()\" >{{ displayValue() }}</span>\n    <i class=\"glyphicon glyphicon-pencil\" *ngIf=\"enabled\"></i>\n</span>\n<div *ngIf=\"editing\" class=\"inline-editor inline-text-editor pf-inline-text-editor\">\n    <div class=\"form-control-pf-editable form-control-pf-edit\">\n        <div class=\"form-control-pf-textbox\">\n            <input #newvalue type=\"text\" [(ngModel)]=\"evalue\" class=\"form-control form-control-pf-editor\"\n                   autocomplete=\"off\" (keyup)=\"onInputKeypress($event)\">\n            <button *ngIf=\"!isEditedValueEmpty()\" type=\"button\" class=\"form-control-pf-empty\" aria-label=\"Clear Value\" (click)=\"clearValue()\">\n              <span class=\"fa fa-times-circle fa-lg\"></span>\n            </button>\n        </div>\n        <button title=\"Save changes.\" type=\"button\" class=\"btn btn-primary form-control-pf-save\"\n                aria-label=\"Save\" (click)=\"onSave()\"><i class=\"glyphicon glyphicon-ok\"></i></button>\n        <button title=\"Cancel changes.\" type=\"button\" class=\"btn btn-default form-control-pf-cancel\"\n                aria-label=\"Cancel\" (click)=\"onCancel()\"><i class=\"glyphicon glyphicon-remove\"></i></button>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter, CommandFactory,\n    ICommand,\n    OasOperation,\n    OasParameter,\n    OasPathItem,\n    SimplifiedParameterType,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport {DropDownOption, DropDownOptionValue} from \"../../common/drop-down.component\";\n\n\n// TODO combine with Query Param Row (and Header Param Row) to share code/logic\n@Component({\n    selector: \"cookie-param-row\",\n    templateUrl: \"cookie-param-row.component.html\",\n    styleUrls: [ \"cookie-param-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CookieParamRowComponent extends AbstractRowComponent<OasParameter, SimplifiedParameterType> {\n\n    private _overriddenParam: OasParameter;\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onRename: EventEmitter<void> = new EventEmitter<void>();\n\n    private _parentType: string;\n\n    private overrideFlag: boolean;\n    private missingFlag: boolean;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        this._model = SimplifiedParameterType.fromParameter(this.item as any);\n        this.missingFlag = this.item.getAttribute(\"missing\") === true;\n        this._overriddenParam = this.getOverriddenParam(this.item);\n        this.overrideFlag = this._overriddenParam !== null;\n        this._parentType = this.detectParentType();\n    }\n\n    public isParentOperation(): boolean {\n        return this._parentType === \"operation\";\n    }\n\n    public isParentPath(): boolean {\n        return this._parentType === \"pathItem\";\n    }\n\n    public isParameter(): boolean {\n        return true;\n    }\n\n    public hasDescription(): boolean {\n        if (this.item.description) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public isRequired(): boolean {\n        return this.item.required;\n    }\n\n    public required(): string {\n        return this.isRequired() ? \"required\" : \"not-required\";\n    }\n\n    public requiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public isEditingDescription(): boolean {\n        return this.isEditingTab(\"description\");\n    }\n\n    public isEditingSummary(): boolean {\n        return this.isEditingTab(\"summary\");\n    }\n\n    public toggleDescription(): void {\n        if (this.isOverridable()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"description\");\n    }\n\n    public toggleSummary(): void {\n        if (this.isOverridable()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"summary\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public displayType(): SimplifiedParameterType {\n        return SimplifiedParameterType.fromParameter(this.item as any);\n    }\n\n    public rename(): void {\n        this.onRename.emit();\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model().required = newValue === \"required\";\n        let command: ICommand = CommandFactory.createChangePropertyCommand<boolean>(this.item, \"required\", this.model().required);\n        this.commandService.emit(command);\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedParameterType = new SimplifiedParameterType();\n        nt.required = this.model().required;\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeParameterTypeCommand(this.item.ownerDocument().getDocumentType(),\n            this.item as any, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n    public override(): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.item.parent() as any,\n            this.item.name, \"cookie\", null, null, true);\n        this.commandService.emit(command);\n    }\n\n    public isMissing(): boolean {\n        return this.missingFlag && !this.overrideFlag;\n    }\n\n    public isExists(): boolean {\n        return !this.missingFlag;\n    }\n\n    public isOverride(): boolean {\n        return !this.missingFlag && this.overrideFlag;\n    }\n\n    public isOverridable(): boolean {\n        return this.missingFlag && this.overrideFlag;\n    }\n\n    public isLocalOnly(): boolean {\n        return !this.overrideFlag && !this.missingFlag;\n    }\n\n    public getOverriddenParam(param: OasParameter): OasParameter {\n        let viz: DetectOverrideVisitor = new DetectOverrideVisitor(param);\n        param.parent().accept(viz);\n        return viz.overriddenParam;\n    }\n\n    private detectParentType(): string {\n        let viz: DetectParentTypeVisitor = new DetectParentTypeVisitor();\n        this.item.parent().accept(viz);\n        return viz.parentType;\n    }\n\n}\n\n\nclass DetectOverrideVisitor extends CombinedVisitorAdapter {\n\n    public overriddenParam: OasParameter = null;\n\n    constructor(private param: OasParameter) {\n        super();\n    }\n\n    public visitOperation(node: OasOperation): void {\n        this.overriddenParam = (<OasPathItem>node.parent()).getParameter(this.param.in, this.param.name) as OasParameter;\n    }\n\n}\n\n\nclass DetectParentTypeVisitor extends CombinedVisitorAdapter {\n\n    public parentType: string = null;\n\n    public visitOperation(node: OasOperation): void {\n        this.parentType = \"operation\";\n    }\n\n    public visitPathItem(node: OasPathItem): void {\n        this.parentType = \"pathItem\";\n    }\n\n}\n","<div class=\"cookie-param\" [class.expanded]=\"isEditing()\" [class.required]=\"isRequired()\" [class.overridable]=\"isOverridable()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"apicurio-icon-override icon-override\" *ngIf=\"isParentOperation() && isOverride()\"\n                  title=\"Overrides a parameter defined at the Path level.\"></span>\n            <span class=\"apicurio-icon-inherit-d icon-override\" *ngIf=\"isParentOperation() && isOverridable()\"\n                  title=\"Cookie parameter inherited from the Path level.\"></span>\n            <span class=\"apicurio-icon-local-d icon-override\" *ngIf=\"isParentOperation() && isLocalOnly()\"\n                  title=\"Cookie parameter defined for this operation only.\"></span>\n            <span title=\"{{ item.name }}\">{{ item.name }}</span>\n        </div>\n        <div class=\"description\" (click)=\"toggleDescription()\" [class.selected]=\"isEditingDescription()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingDescription()\"></span>\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"summary\" (click)=\"toggleSummary()\" [class.selected]=\"isEditingSummary()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingSummary()\"></span>\n            <span class=\"parameter-required\" *ngIf=\"isRequired()\" title=\"This cookie parameter is required.\">[required]</span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\" *ngIf=\"!isOverridable()\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"rename()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n            <button *ngIf=\"isOverridable()\" (click)=\"override()\" title=\"Override the cookie parameter.\"\n                    class=\"btn btn-default btn-xs btn-override\">Override</button>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"param-description\" *ngIf=\"isEditingDescription()\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'No description.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                    <div class=\"param-content\" *ngIf=\"isEditingSummary()\">\n                        <div class=\"param-required\">\n                            <span class=\"dropdown-label\">Parameter is</span>\n                            <drop-down [id]=\"'api-param-required'\"\n                                       [value]=\"required()\"\n                                       [options]=\"requiredOptions()\"\n                                       (onValueChange)=\"changeRequired($event)\"\n                                       [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                        </div>\n                        <div class=\"param-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"isParameter()\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    Oas30Example,\n    Oas30MediaType,\n    Oas30Schema,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {EditExampleEvent} from \"../../dialogs/edit-example.component\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\n\n\n@Component({\n    selector: \"media-type-row\",\n    templateUrl: \"media-type-row.component.html\",\n    styleUrls: [ \"media-type-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MediaTypeRowComponent extends AbstractRowComponent<Oas30MediaType, SimplifiedType> {\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        this._model = SimplifiedType.fromSchema(this.item.schema);\n    }\n\n    public isEditingExamples(): boolean {\n        return this.isEditingTab(\"examples\");\n    }\n\n    public isEditingType(): boolean {\n        return this.isEditingTab(\"type\");\n    }\n\n    public toggleExamples(): void {\n        this.toggleTab(\"examples\");\n    }\n\n    public toggleType(): void {\n        this.toggleTab(\"type\");\n    }\n\n    public delete(): void {\n        console.info(\"[MediaTypeRowComponent] Deleting request body media type: \" + this.item.getName());\n        let command: ICommand = CommandFactory.createDeleteMediaTypeCommand(this.item);\n        this.commandService.emit(command);\n    }\n\n    public displayExamples(): string {\n        if (this.mediaTypeHasExamples()) {\n            return `${this.mediaTypeExamples().length} example(s) defined.`;\n        } else {\n            return \"No examples defined.\"\n        }\n    }\n\n    public displayType(): SimplifiedType {\n        return SimplifiedType.fromSchema(this.item.schema);\n    }\n\n    public exampleValue(example: Oas30Example): string {\n        let evalue: any = example.value;\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeMediaTypeTypeCommand(this.item, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n    public mediaTypeExamples(): Oas30Example[] {\n        return <any>this.item.getExamples();\n    }\n\n    public mediaTypeHasExamples(): boolean {\n        return this.mediaTypeExamples().length > 0;\n    }\n\n    public addExample(exampleData: any): void {\n        let command: ICommand = CommandFactory.createAddExampleCommand(this.item,\n            exampleData.value, exampleData.name, null, null);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.item);\n        nodePath.appendSegment(\"examples\", false);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public changeExampleSummary(example: Oas30Example, summary: string): void {\n    }\n\n    public changeExampleDescription(example: Oas30Example, description: string): void {\n    }\n\n    public deleteExample(example: Oas30Example): void {\n        console.info(\"[MediaTypeRowComponent] Deleting an example of a media type.\");\n        let command: ICommand = CommandFactory.createDeleteExampleCommand(example);\n        this.commandService.emit(command);\n    }\n\n    public deleteAllExamples(): void {\n        let command: ICommand = CommandFactory.createDeleteAllExamplesCommand(this.item);\n        this.commandService.emit(command);\n    }\n\n    public editExample(event: EditExampleEvent): void {\n        console.info(\"[MediaTypeRowComponent] Changing the value of a Media Type example.\");\n        let command: ICommand = CommandFactory.createSetExampleCommand(this.item.ownerDocument().getDocumentType(), this.item,\n            event.value, event.example.getName());\n        this.commandService.emit(command);\n    }\n\n    public schemaForExample(): Oas30Schema {\n        return this.item.schema;\n    }\n}\n","<div class=\"media-type\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"fa fa-fw fa-file-o\"></span>\n            <span title=\"{{ item.getName() }}\">{{ item.getName() }}</span>\n        </div>\n        <div class=\"type\" (click)=\"toggleType()\" [class.selected]=\"isEditingType()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingType()\"></span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"examples\" (click)=\"toggleExamples()\" [class.selected]=\"isEditingExamples()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingExamples()\"></span>\n            <span [class.empty]=\"!mediaTypeHasExamples()\">{{ displayExamples() }}</span>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"mt-content\" *ngIf=\"isEditingType()\">\n                        <div class=\"mt-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"false\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                    <div class=\"mt-examples\" *ngIf=\"isEditingExamples()\">\n                        <div class=\"form-label\">Examples</div>\n                        <signpost *ngIf=\"!mediaTypeHasExamples()\">\n                            <span>No examples have been defined.</span>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </signpost>\n                        <div *ngIf=\"mediaTypeHasExamples()\">\n                            <table class=\"table table-striped table-bordered table-examples\">\n                                <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th class=\"pre-actions\">Example</th>\n                                    <th class=\"actions\"></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let example of mediaTypeExamples()\">\n                                    <td class=\"name\">\n                                        <validation-problem [model]=\"example\"></validation-problem>\n                                        <span>{{ example.getName() }}</span>\n                                    </td>\n                                    <td class=\"value pre-actions\">\n                                        <span>{{ exampleValue(example) }}</span>\n                                    </td>\n                                    <td class=\"actions\">\n                                        <div>\n                                            <icon-button (onClick)=\"deleteExample(example)\" [pullRight]=\"true\" type=\"delete\"\n                                                         [title]=\"'Delete example.'\"></icon-button>\n                                            <icon-button (onClick)=\"editExampleDialog.open(example)\" [pullRight]=\"true\" type=\"edit\"\n                                                         [title]=\"'Edit example.'\"></icon-button>\n                                        </div>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                            <a (click)=\"deleteAllExamples()\" class=\"pull-right\">Delete all examples</a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<add-example-dialog #addExampleDialog (onAdd)=\"addExample($event)\" [schema]=\"schemaForExample()\"></add-example-dialog>\n<edit-example-dialog #editExampleDialog (onEdit)=\"editExample($event)\" [schema]=\"schemaForExample()\"></edit-example-dialog>\n","import {DropDownOptionValue} from \"../_components/common/drop-down.component\";\n\nexport class SchemaUtil {\n\n\n    public static readonly schemaFormatOptions = [\n            new DropDownOptionValue(\"application/vnd.aai.asyncapi;version=2.0.0\", \"application/vnd.aai.asyncapi;version=2.0.0\"),\n            new DropDownOptionValue(\"application/vnd.oai.openapi;version=3.0.0\", \"application/vnd.oai.openapi;version=3.0.0\"),\n            new DropDownOptionValue(\"application/application/schema+json;version=draft-07\", \"application/application/schema+json;version=draft-07\"),\n            new DropDownOptionValue(\"application/application/schema+yaml;version=draft-07\", \"application/application/schema+yaml;version=draft-07\"),\n            new DropDownOptionValue(\"application/vnd.apache.avro;version=1.9.0\", \"application/vnd.apache.avro;version=1.9.0\")\n        ];\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","/**\n * @license\n * Copyright 2020 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function componentTypeToString(type: ComponentType): string {\n    switch (type) {\n        case ComponentType.schema:\n            return \"schema\";\n        case ComponentType.response:\n            return \"response\";\n        case ComponentType.parameter:\n            return \"parameter\";\n        case ComponentType.header:\n            return \"header\";\n        case ComponentType.requestBody:\n            return \"requestBody\";\n        case ComponentType.callback:\n            return \"callback\";\n        case ComponentType.example:\n            return \"example\";\n        case ComponentType.securityScheme:\n            return \"securityScheme\";\n        case ComponentType.link:\n            return \"link\";\n        case ComponentType.messageTrait:\n            return \"messageTrait\";\n        case ComponentType.message:\n            return \"message\";\n    }\n    return \"n/a\";\n}\n\nexport enum ComponentType {\n    schema, response, parameter, header, requestBody, callback, example, securityScheme, link, messageTrait,\n    message,\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    IDefinition,\n    IDocumentValidatorExtension,\n    IReferenceResolver,\n    IValidationSeverityRegistry,\n    Library,\n    ModelCloner,\n    Node,\n    NodePath,\n    Oas20ResponseDefinition,\n    Oas20SchemaDefinition,\n    Oas30ResponseDefinition,\n    Oas30SchemaDefinition,\n    OasDocument,\n    OasPathItem,\n    OtCommand,\n    OtEngine,\n    ReferenceUtil,\n    ValidationProblem\n} from \"@apicurio/data-models\";\nimport {EditorMasterComponent} from \"./_components/master.component\";\nimport {SelectionService} from \"./_services/selection.service\";\nimport {CommandService} from \"./_services/command.service\";\nimport {DocumentService} from \"./_services/document.service\";\nimport {ServerEditorComponent} from \"./_components/editors/server-editor.component\";\nimport {EditorsService, IEditorsProvider} from \"./_services/editors.service\";\nimport {SecuritySchemeEditorComponent} from \"./_components/editors/security-scheme-editor.component\";\nimport {SecurityRequirementEditorComponent} from \"./_components/editors/security-requirement-editor.component\";\nimport {DataTypeEditorComponent} from \"./_components/editors/data-type-editor.component\";\nimport {ParameterEditorComponent} from \"./_components/editors/parameter-editor.component\";\nimport {PropertyEditorComponent} from \"./_components/editors/property-editor.component\";\nimport {ApiEditorComponentFeatures} from \"./_models/features.model\";\nimport {FeaturesService} from \"./_services/features.service\";\nimport {CollaboratorService} from \"./_services/collaborator.service\";\nimport {ArrayUtils, TopicSubscription} from \"apicurio-ts-core\";\nimport {ResponseEditorComponent} from \"./_components/editors/response-editor.component\";\nimport {AbstractApiEditorComponent} from \"./editor.base\";\nimport {ApiCatalogService} from \"./_services/api-catalog.service\";\nimport {ComponentType} from \"./_models/component-type.model\";\nimport {ImportedComponent} from \"./_models/imported-component.model\";\nimport {OperationTraitEditorComponent} from \"./_components/editors/operationtrait-editor.component\";\nimport {MessageTraitEditorComponent} from \"./_components/editors/messagetrait-editor.component\";\nimport {MessageEditorComponent} from \"./_components/editors/message-editor.component\";\nimport {AaiServerEditorComponent} from \"./_components/editors/aaiserver-editor.component\";\nimport { OneOfInMessageEditorComponent } from \"./_components/editors/oneof-in-message-editor.component\";\nimport {ApiDefinition} from \"./_models/api.model\";\nimport {VersionedAck} from \"./_models/ack.model\";\nimport {ApiEditorUser} from \"./_models/editor-user.model\";\n\n\n@Component({\n    selector: \"oai-editor\",\n    templateUrl: \"oaieditor.component.html\",\n    styleUrls: [\"oaieditor.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class OaiEditorComponent extends AbstractApiEditorComponent implements OnChanges, OnInit, OnDestroy,\n    IEditorsProvider, IReferenceResolver {\n\n    @Input() api: ApiDefinition;\n    @Input() embedded: boolean;\n    @Input() features: ApiEditorComponentFeatures;\n    @Input() validationRegistry: IValidationSeverityRegistry;\n    @Input() contentFetcher: (externalReference: string) => Promise<any>;\n    @Input() componentImporter: (componentType: ComponentType) => Promise<ImportedComponent[]>;\n    @Input() validationExtensions: IDocumentValidatorExtension[] = [];\n\n    @Output() onCommandExecuted: EventEmitter<OtCommand> = new EventEmitter<OtCommand>();\n    @Output() onSelectionChanged: EventEmitter<string> = new EventEmitter<string>();\n    @Output() onValidationChanged: EventEmitter<ValidationProblem[]> = new EventEmitter<ValidationProblem[]>();\n    @Output() onUndo: EventEmitter<OtCommand> = new EventEmitter<OtCommand>();\n    @Output() onRedo: EventEmitter<OtCommand> = new EventEmitter<OtCommand>();\n    @Output() onConfigureValidation: EventEmitter<void> = new EventEmitter<void>();\n\n    private _document: OasDocument = null;\n    private _otEngine: OtEngine = null;\n    _undoableCommandCount: number = 0;\n    _redoableCommandCount: number = 0;\n\n    theme: string = \"light\";\n\n    private currentSelection: NodePath;\n    private currentSelectionType: string;\n    private currentSelectionNode: Node;\n    public validationErrors: ValidationProblem[] = [];\n\n    private _selectionSubscription: TopicSubscription<string>;\n    private _commandSubscription: TopicSubscription<ICommand>;\n    private _catalogSubscription: TopicSubscription<any>;\n\n    @ViewChild(\"master\", { static: true }) master: EditorMasterComponent;\n    @ViewChild(\"serverEditor\", { static: true }) serverEditor: ServerEditorComponent;\n    @ViewChild(\"securitySchemeEditor\", { static: true }) securitySchemeEditor: SecuritySchemeEditorComponent;\n    @ViewChild(\"securityRequirementEditor\", { static: true }) securityRequirementEditor: SecurityRequirementEditorComponent;\n    @ViewChild(\"dataTypeEditor\", { static: true }) dataTypeEditor: DataTypeEditorComponent;\n    @ViewChild(\"responseEditor\", { static: true }) responseEditor: ResponseEditorComponent;\n    @ViewChild(\"parameterEditor\", { static: true }) parameterEditor: ParameterEditorComponent;\n    @ViewChild(\"propertyEditor\", { static: true }) propertyEditor: PropertyEditorComponent;\n\n    formType: string;\n\n    /**\n     * Constructor.\n     * @param selectionService\n     * @param commandService\n     * @param documentService\n     * @param editorsService\n     * @param featuresService\n     * @param collaboratorService\n     * @param catalog\n     */\n    constructor(private selectionService: SelectionService, private commandService: CommandService,\n                private documentService: DocumentService, private editorsService: EditorsService,\n                private featuresService: FeaturesService, private collaboratorService: CollaboratorService,\n                private catalog: ApiCatalogService) {\n        super();\n\n        Library.addReferenceResolver(this);\n        console.debug(\"[ApiEditorComponent] Subscribing to API Catalog changes.\");\n        this._catalogSubscription = this.catalog.changes().subscribe(() => {\n            console.debug(\"[ApiEditorComponent] Re-validating model due to API Catalog change.\");\n            // Re-validate whenever the contents of the API catalog change\n            this.validateModel().then(() => {\n                // Make sure any validation widgets refresh themselves\n                this.documentService.emitChange();\n            });\n        });\n    }\n\n    /**\n     * Called when the editor is initialized by angular.\n     */\n    public ngOnInit(): void {\n        let me: OaiEditorComponent = this;\n        this._selectionSubscription = this.selectionService.selection().subscribe( selectedPath => {\n            if (selectedPath) {\n                console.info(\"[ApiEditorComponent] Node selection detected (from the selection service)\")\n                me.onNodeSelected(selectedPath);\n            }\n        });\n        this._commandSubscription = this.commandService.commands().subscribe( command => {\n            if (command) {\n                console.info(\"[ApiEditorComponent] Command execution detected (from the command service)\")\n                me.onCommand(command);\n            }\n        });\n    }\n\n    /**\n     * Called when angular destroys the editor component.\n     */\n    public ngOnDestroy(): void {\n        this._selectionSubscription.unsubscribe();\n        this._commandSubscription.unsubscribe();\n        this._catalogSubscription.unsubscribe();\n        Library.removeReferenceResolver(this);\n    }\n\n    /**\n     * Called when the @Input changes.\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes[\"contentFetcher\"]) {\n            this.catalog.setFetcher(this.contentFetcher);\n        }\n\n        if (changes[\"api\"]) {\n            this.selectionService.reset();\n            this.collaboratorService.reset();\n            this.commandService.reset();\n            this.documentService.reset();\n            this.editorsService.setProvider(this);\n\n            this._document = null;\n            this._otEngine = null;\n            this._undoableCommandCount = 0;\n            this._redoableCommandCount = 0;\n            if (this.document().getDocumentType() == DocumentType.openapi2) {\n                this.formType = \"main_20\";\n            } else {\n                this.formType = \"main_30\";\n            }\n\n            // Fire an event in the doc service indicating that there is a new document.\n            this.documentService.setDocument(this.document());\n            this.selectionService.selectRoot();\n\n            this.catalog.reset(this.document());\n        }\n\n        if (changes[\"features\"]) {\n            if (this.features) {\n                this.featuresService.setFeatures(this.features);\n            } else {\n                this.featuresService.setFeatures(new ApiEditorComponentFeatures());\n            }\n        }\n\n        if (changes[\"validationRegistry\"]) {\n            this.validateModel().then(() => this.documentService.emitChange());\n        }\n    }\n\n    /**\n     * Gets the OpenAPI spec as a document.\n     */\n    public document(): OasDocument {\n        if (this._document === null && this.api) {\n            try {\n                if (typeof this.api.spec == \"object\") {\n                    this._document = <OasDocument> Library.readDocument(this.api.spec);\n                } else {\n                    this._document = <OasDocument> Library.readDocumentFromJSONString(<string>this.api.spec);\n                }\n                console.info(\"[ApiEditorComponent] Loaded OAI content: \", this._document);\n            } catch (e) {\n                console.error(e);\n                // If we can't process the document, then just create a new one\n                this._document = <OasDocument> Library.createDocument(DocumentType.openapi3);\n            }\n            this.validateModel();\n        }\n        return this._document;\n    }\n\n    /**\n     * Lazy getter for the OtEngine.\n     */\n    public otEngine(): OtEngine {\n        if (this._otEngine === null) {\n            this._otEngine = new OtEngine(this.document());\n            this._undoableCommandCount = 0;\n            this._redoableCommandCount = 0;\n        }\n        return this._otEngine;\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        // TODO skip any event that was sent to an input field (e.g. input, textarea, etc)\n        if (OaiEditorComponent.isUndo(event)) {\n            this.undoLastCommand();\n        }\n        if (OaiEditorComponent.isRedo(event)) {\n            this.redoLastCommand();\n        }\n    }\n\n    private static isUndo(event: KeyboardEvent): boolean {\n        return (event.ctrlKey && event.key === 'z' && !event.metaKey && !event.altKey) ||\n            (event.metaKey && event.key === 'z' && !event.ctrlKey && !event.altKey);  // macOS: cmd + z\n    }\n\n    private static isRedo(event: KeyboardEvent): boolean {\n        return (event.ctrlKey && event.key === 'y' && !event.metaKey && !event.altKey) ||\n            (event.metaKey && event.shiftKey && event.key === 'z' && !event.ctrlKey && !event.altKey); // macOS: cmd + shift + z\n    }\n\n    /**\n     * Called when the user clicks the Undo button or uses the Ctrl-z hotkey.\n     */\n    public undoLastCommand(): void {\n        if (this._undoableCommandCount === 0) {\n            return;\n        }\n        console.info(\"[ApiEditorComponent] User wants to 'undo' the last command.\");\n        this.preDocumentChange();\n        let cmd: OtCommand = this.otEngine().undoLastLocalCommand();\n        // TODO if the command is \"pending\" we need to hold on to the \"undo\" event until we get the ACK for the command - then we can send the \"undo\" with the updated contentVersion\n        if (cmd !== null) {\n            this.postDocumentChange();\n\n            this.onUndo.emit(cmd);\n            this._undoableCommandCount--;\n            this._redoableCommandCount++;\n        }\n    }\n\n    /**\n     * Called when the user clicks the Redo button or uses the Ctrl-y hotkey.\n     */\n    public redoLastCommand(): void {\n        if (this._redoableCommandCount === 0) {\n            return;\n        }\n        console.info(\"[ApiEditorComponent] User wants to 'redo' the last command.\");\n        this.preDocumentChange();\n        let cmd: OtCommand = this.otEngine().redoLastLocalCommand();\n        // TODO if the command is \"pending\" we need to hold on to the \"undo\" event until we get the ACK for the command - then we can send the \"undo\" with the updated contentVersion\n        if (cmd !== null) {\n            this.postDocumentChange();\n\n            this.onRedo.emit(cmd);\n            this._undoableCommandCount++;\n            this._redoableCommandCount--;\n        }\n    }\n\n    /**\n     * Called when an editor component creates a command that should be executed.\n     * @param command\n     */\n    protected onCommand(command: ICommand): void {\n        let otCmd: OtCommand = new OtCommand();\n        otCmd.command = command;\n        otCmd.contentVersion = Date.now();\n\n        this.preDocumentChange();\n        this.otEngine().executeCommand(otCmd, true);\n\n        this.onCommandExecuted.emit(otCmd);\n        this.postDocumentChange();\n\n        // If we're in embedded mode, immediately finalize the command (no collaboration server is present)\n        if (this.embedded) {\n            this.finalizeCommand({\n                commandId: otCmd.contentVersion,\n                contentVersion: otCmd.contentVersion,\n                ackType: \"command\"\n            });\n        }\n\n        this._undoableCommandCount++;\n        this._redoableCommandCount = 0;\n    }\n\n    /**\n     * Executes a command.  Called by the parent of this component when detecting that\n     * another user has executed a command.  In other words, this command is *not*\n     * performed by the local user.\n     * @param command\n     */\n    public executeCommand(command: OtCommand): void {\n        this.preDocumentChange();\n        this.otEngine().executeCommand(command, false);\n        this.postDocumentChange();\n    }\n\n    /**\n     * Call this to undo a command.  Typically this is used to undo commands from\n     * remote collaborators after receiving an async message from the server.\n     * @param command\n     */\n    public undoCommand(command: OtCommand | number | string): void {\n        if (command) {\n            this.preDocumentChange();\n            if (typeof command === \"number\") {\n                this.otEngine().undo(command as number);\n            } else if (typeof command === \"string\") {\n                this.otEngine().undo(Number(command as string));\n            } else {\n                this.otEngine().undo(command.contentVersion);\n            }\n            this.postDocumentChange();\n        }\n    }\n\n    /**\n     * Call this to redo a command.  Typically this is used to undo commands from\n     * remote collaborators after receiving an async message from the server.\n     * @param command\n     */\n    public redoCommand(command: OtCommand | number): void {\n        if (command) {\n            this.preDocumentChange();\n            if (typeof command === \"number\") {\n                this.otEngine().redo(command as number);\n            } else if (typeof command === \"string\") {\n                this.otEngine().redo(Number(command as string));\n            } else {\n                this.otEngine().redo(command.contentVersion);\n            }\n            this.postDocumentChange();\n        }\n    }\n\n    /**\n     * Finalizes a command.\n     * @param ack\n     */\n    public finalizeCommand(ack: VersionedAck): void {\n        this.otEngine().finalizeCommand(ack.commandId, ack.contentVersion);\n    }\n\n    /**\n     * Called to update the selection state of the given remote API editor (i.e. an active collaborator).\n     * @param user\n     * @param selection\n     */\n    public updateCollaboratorSelection(user: ApiEditorUser, selection: string): void {\n        this.collaboratorService.setCollaboratorSelection(user, selection);\n    }\n\n    /**\n     * Called when the user selects a node in some way.\n     * @param path\n     */\n    public onNodeSelected(path: string): void {\n        console.info(\"[ApiEditorComponent] Selection changed to path: %s\", path);\n\n        this.updateFormDisplay(path);\n\n        this.onSelectionChanged.emit(path);\n    }\n\n    /**\n     * Called to update which form is displayed (the details view).\n     * @param path\n     */\n    private updateFormDisplay(path: string): void {\n        let npath: NodePath = new NodePath(path);\n        let visitor: FormSelectionVisitor = new FormSelectionVisitor(this.document().is2xDocument() ? \"20\" : \"30\");\n        npath.resolveWithVisitor(this.document(), visitor);\n\n        this.currentSelection = npath;\n        this.formType = visitor.formType();\n        this.currentSelectionNode = visitor.selection();\n        this.currentSelectionType = visitor.selectionType();\n    }\n\n    /**\n     * Called to validate the model.\n     */\n    public async validateModel(): Promise<void> {\n        try {\n            let doc: OasDocument = this.document();\n            let oldValidationErrors: ValidationProblem[] = this.validationErrors;\n            this.validationErrors = await Library.validateDocument(doc, this.validationRegistry, this.validationExtensions);\n            if (!ArrayUtils.equals(oldValidationErrors, this.validationErrors)) {\n                this.onValidationChanged.emit(this.validationErrors);\n            }\n        } catch (e) {\n            console.info(\"[ApiEditorComponent] Error validating model: \", e);\n        }\n    }\n\n    /**\n     * Returns the currently selected path item.\n     * @return\n     */\n    public selectedPath(): OasPathItem {\n        if (this.currentSelectionType === \"path\") {\n            return this.currentSelectionNode as OasPathItem;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the currently selected definition.\n     * @return\n     */\n    public selectedDefinition(): Oas20SchemaDefinition | Oas30SchemaDefinition {\n        if (this.currentSelectionType === \"definition\") {\n            return this.currentSelectionNode as Oas20SchemaDefinition;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the currently selected response.\n     */\n    public selectedResponse(): Oas20ResponseDefinition | Oas30ResponseDefinition {\n        if (this.currentSelectionType === \"response\") {\n            return this.currentSelectionNode as Oas20ResponseDefinition | Oas30ResponseDefinition;\n        } else {\n            return null;\n        }\n    }\n\n    public deselectPath(): void {\n        this.master.deselectPath();\n    }\n\n    public deselectDefinition(): void {\n        this.master.deselectDefinition();\n    }\n\n    public deselectResponse(): void {\n        this.master.deselectResponse();\n    }\n\n    public preDocumentChange(): void {\n        // Before changing the document, let's clear/reset the current selection\n        this.selectionService.clearAllSelections();\n    }\n\n    public postDocumentChange(): void {\n        // After changing the model, we need to ensure all selections are still valid\n        this.selectionService.reselectAll();\n\n        // After changing the model, we should re-validate it\n        this.validateModel().then(() => {\n            // Update the form being displayed (this might change if the thing currently selected was deleted)\n            this.updateFormDisplay(this.selectionService.currentSelection());\n\n            // Potentially update the API catalog\n            this.catalog.update(this.documentService.currentDocument());\n\n            // Fire a change event in the document service\n            this.documentService.emitChange();\n        });\n    }\n\n    /**\n     * Called to get the current value in the editor.\n     * @return\n     */\n    public getValue(): ApiDefinition {\n        let apiDef: ApiDefinition = new ApiDefinition();\n        apiDef.id = this.api.id;\n        apiDef.createdBy = this.api.createdBy;\n        apiDef.createdOn = this.api.createdOn;\n        apiDef.description = this.api.description;\n        apiDef.name = this.api.name;\n        apiDef.tags = this.api.tags;\n        let doc: OasDocument = this.document();\n        apiDef.spec = Library.writeNode(doc);\n        return apiDef;\n    }\n\n    /**\n     * Call this to select some content in the open document by the content's node path.  If highlight\n     * is true then the appropriate content section is also highlighted and scrolled into view.\n     * @param path\n     * @param highlight\n     */\n    public select(path: string, highlight: boolean = false): void {\n        this.selectionService.select(path);\n        if (highlight) {\n            this.selectionService.highlightPath(path);\n        }\n    }\n\n    /**\n     * Resolves a $ref reference from a Document.  Uses the API catalog to resolve the external\n     * content and, if found, selects the appropriate\n     * @param reference\n     * @param from\n     */\n    public resolveRef(reference: string, from: Node): Node {\n        // Don't try to resolve internal refs, only external ones.\n        if (reference && !reference.startsWith(\"#\")) {\n            console.info(\"[ApiEditorComponent] Resolving a reference: \", reference);\n            let hashIdx: number = reference.indexOf(\"#\");\n            if (hashIdx == -1) {\n                return null;\n            }\n            let resourceUrl: string = reference.substring(0, hashIdx);\n            console.debug(\"[ApiEditorComponent] Resource URL: \", resourceUrl);\n            let resourceContent: any = this.catalog.lookup(resourceUrl);\n            if (!resourceContent) {\n                // Content not available in API catalog.  Return null.\n                return null;\n            }\n            console.debug(\"[ApiEditorComponent] FOUND some content for URL: \", resourceUrl);\n            let fragment: string = reference.substr(hashIdx + 1);\n            console.debug(\"[ApiEditorComponent] Fragment: \", fragment);\n            let cnode: any = ReferenceUtil.resolveFragmentFromJS(resourceContent, fragment);\n\n            // If we resolved a js object (not null) then convert it to a data model (Node)\n            if (cnode) {\n                console.debug(\"[ApiEditorComponent] Found a cnode (cloning): \", cnode);\n                let emptyClone: any = ModelCloner.createEmptyClone(from);\n                return Library.readNode(cnode, emptyClone);\n            } else {\n                console.warn(\"[ApiEditorComponent] No node found at fragment.\");\n                return null;\n            }\n        }\n        return null;\n    }\n\n    public getServerEditor(): ServerEditorComponent {\n        return this.serverEditor;\n    }\n\n    public getAaiServerEditor(): AaiServerEditorComponent {\n        return null;\n    }\n\n    public getSecuritySchemeEditor(): SecuritySchemeEditorComponent {\n        return this.securitySchemeEditor;\n    }\n\n    public getSecurityRequirementEditor(): SecurityRequirementEditorComponent {\n        return this.securityRequirementEditor;\n    }\n\n    public getDataTypeEditor(): DataTypeEditorComponent {\n        return this.dataTypeEditor;\n    }\n\n    public getResponseEditor(): ResponseEditorComponent {\n        return this.responseEditor;\n    }\n\n    public getParameterEditor(): ParameterEditorComponent {\n        return this.parameterEditor;\n    }\n\n    public getPropertyEditor(): PropertyEditorComponent {\n        return this.propertyEditor;\n    }\n\n    public getOperationTraitEditor(): OperationTraitEditorComponent {\n        return null;\n    }\n\n    public getMessageTraitEditor(): MessageTraitEditorComponent {\n        return null;\n    }\n\n    public getMessageEditor(): MessageEditorComponent {\n        return null;\n    }\n\n\n    getOneOfInMessageEditor(): OneOfInMessageEditorComponent {\n        return null;\n    }\n\n    importComponent(type: ComponentType) {\n        if (this.componentImporter) {\n            this.componentImporter(type).then(imports => {\n                let commands: ICommand[] = [];\n\n                imports.forEach(imp => {\n                    console.info(\"[ApiEditorComponent] Importing component: \", imp.name);\n                    // TODO check for name collisions\n                    let name: string = imp.name;\n                    let fromRef: any = {$ref: imp.$ref};\n                    if (imp.type === ComponentType.schema) {\n                        commands.push(CommandFactory.createAddSchemaDefinitionCommand(this.document().getDocumentType(), name, fromRef));\n                    } else if (type === ComponentType.response) {\n                        commands.push(CommandFactory.createAddResponseDefinitionCommand(this.document().getDocumentType(), name, fromRef));\n                    }\n                });\n\n                if (commands != null && commands.length == 1) {\n                    console.info(\"[ApiEditorComponent] Importing a single component.\");\n                    this.commandService.emit(commands[0]);\n                } else if (commands != null && commands.length > 1) {\n                    console.info(\"[ApiEditorComponent] Importing multiple components. :: \", commands.length);\n                    let aggregateInfo: any = {\n                        type: type,\n                        numComponents: commands.length\n                    };\n                    this.commandService.emit(CommandFactory.createAggregateCommand(\"ImportedComponents\", aggregateInfo, commands));\n                }\n            }).catch(error => {\n                // FIXME what to do if we get an error???\n            });\n        }\n    }\n}\n\n\n/**\n * Visitor used to determine what form should be displayed based on the selected node.\n */\nexport class FormSelectionVisitor extends CombinedVisitorAdapter {\n\n    public _selectionType: string = \"main\";\n    public _selectedNode: Node = null;\n\n    constructor(private version: string) {\n        super();\n    }\n\n    public selectionType(): string {\n        return this._selectionType;\n    }\n\n    public formType(): string {\n        return this._selectionType + \"_\" + this.version;\n    }\n\n    public selection(): Node {\n        return this._selectedNode;\n    }\n\n    public visitPathItem(node: OasPathItem): void {\n        this._selectedNode = node;\n        this._selectionType = \"path\";\n    }\n\n    public visitSchemaDefinition(node: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n        this._selectedNode = node;\n        this._selectionType = \"definition\";\n    }\n\n    public visitResponseDefinition(node: IDefinition): void {\n        this._selectedNode = node as any;\n        this._selectionType = \"response\";\n    }\n}\n","<div (window:keydown)=\"onGlobalKeyDown($event)\" class=\"api-editor\" [class.light]=\"theme === 'light'\" [class.dark]=\"theme === 'dark'\">\n\n    <title-bar [document]=\"document()\"\n               [validationErrors]=\"validationErrors\"\n               [undoableCommandCount]=\"_undoableCommandCount\"\n               [redoableCommandCount]=\"_redoableCommandCount\"\n               (onUndoClick)=\"undoLastCommand()\"\n               (onRedoClick)=\"redoLastCommand()\"\n               (onConfigureValidation)=\"onConfigureValidation.emit()\"></title-bar>\n    <master [document]=\"document()\" (onImportComponent)=\"importComponent($event)\" #master></master>\n    <div class=\"editor-detail\" [ngSwitch]=\"formType\">\n        <main-form [document]=\"document()\" class=\"editor-detail-form\"\n                      *ngSwitchCase=\"'main_20'\"></main-form>\n        <main-form [document]=\"document()\" class=\"editor-detail-form\"\n                      *ngSwitchCase=\"'main_30'\"></main-form>\n\n        <path-form [path]=\"selectedPath()\" class=\"editor-detail-form\"\n                   *ngSwitchCase=\"'path_20'\"></path-form>\n        <path-form [path]=\"selectedPath()\" class=\"editor-detail-form\"\n                   *ngSwitchCase=\"'path_30'\"></path-form>\n\n        <definition-form [definition]=\"selectedDefinition()\" class=\"editor-detail-form\"\n                         *ngSwitchCase=\"'definition_20'\"></definition-form>\n        <definition-form [definition]=\"selectedDefinition()\" class=\"editor-detail-form\"\n                         *ngSwitchCase=\"'definition_30'\"></definition-form>\n\n        <response-form [response]=\"selectedResponse()\" class=\"editor-detail-form\"\n                         *ngSwitchCase=\"'response_20'\"></response-form>\n        <response-form [response]=\"selectedResponse()\" class=\"editor-detail-form\"\n                         *ngSwitchCase=\"'response_30'\"></response-form>\n    </div>\n\n    <server-editor #serverEditor></server-editor>\n    <security-scheme-editor #securitySchemeEditor></security-scheme-editor>\n    <security-requirement-editor #securityRequirementEditor></security-requirement-editor>\n    <data-type-editor #dataTypeEditor></data-type-editor>\n    <response-editor #responseEditor></response-editor>\n    <parameter-editor #parameterEditor></parameter-editor>\n    <property-editor #propertyEditor></property-editor>\n\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {CombinedVisitorAdapter, AaiMessage} from \"@apicurio/data-models\";\n\n/**\n * Visitor used to find message definitionstions.\n */\nexport class FindMessageDefinitionsVisitor extends CombinedVisitorAdapter {\n\n    public messageDefinitions: AaiMessage[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria\n     */\n    constructor(private filterCriteria: string) {\n        super();\n    }\n\n    /**\n     * Called when a message def is visited.\n     * @param node\n     */\n    visitMessage(node: AaiMessage): void {\n        if (this.acceptThroughFilter(node.getName())) {\n            this.messageDefinitions.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the message defs.\n     */\n    public getSortedMessageDefinitions(): AaiMessage[] {\n        return this.messageDefinitions.sort( (messageDefinition1, messageDefinition2) => {\n            return messageDefinition1.getName().localeCompare(messageDefinition2.getName());\n        });\n    }\n\n    /**\n     * Figures out the definition name regardless of the version of the model.\n     * @param definition\n     */\n    public static definitionName(definition: AaiMessage): string {\n        return definition.getName();\n    }\n\n    /**\n     * Returns true if the given name is accepted by the current filter criteria.\n     * @param name\n     * @return\n     */\n    private acceptThroughFilter(name: string): boolean {\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n    }\n}\n","/**\n * @license\n * Copyright 2018 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Input, OnChanges, SimpleChanges, ViewEncapsulation} from \"@angular/core\";\nimport * as marked from \"marked\";\n\n@Component({\n    selector: \"markdown-summary\",\n    template: `<span class=\"md-summary\" [innerHTML]=\"convertedData\" [class.empty]=\"isEmpty()\"></span>`,\n    encapsulation: ViewEncapsulation.None\n})\nexport class MarkdownSummaryComponent implements OnChanges {\n    @Input(\"data\")\n    data: string;\n    @Input(\"delimiter\")\n    delimiter: string = \" \";\n    @Input(\"showImageText\")\n    showImageText: boolean = false;\n    @Input(\"emptyText\")\n    emptyText: string = \"No value.\";\n\n    convertedData: string;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.isEmpty()) {\n            this.convertedData = this.emptyText;\n        } else {\n            let ptRenderer: marked.Renderer = new PlainTextRenderer();\n            this.convertedData = marked.parse(this.data, {\n                renderer: ptRenderer\n            }).trim();\n        }\n    }\n\n    public isEmpty(): boolean {\n        return this.data === null || this.data === undefined || this.data.trim().length === 0;\n    }\n\n}\n\n\nclass PlainTextRenderer extends marked.Renderer {\n\n    delimiter: string = \" \";\n    showImageText: boolean = false;\n\n    public code(code, lang, escaped): string {\n        return this.delimiter + \"<code>...</code>\" + this.delimiter;\n    }\n    public blockquote(quote): string {\n        return '\\t' + quote + this.delimiter;\n    }\n    public html(html): string {\n        return escape(html);\n    }\n    public heading(text, level, raw): string {\n        return text;\n    }\n    public hr(): string {\n        return this.delimiter + this.delimiter;\n    }\n    public list(body, ordered): string {\n        return body;\n    }\n    public listitem(text): string {\n        return '\\t' + text + this.delimiter;\n    }\n    public paragraph(text): string {\n        return this.delimiter + text + this.delimiter;\n    }\n    public table(header, body): string {\n        return  this.delimiter + header + this.delimiter + body + this.delimiter;\n    }\n    public tablerow(content): string {\n        return content + this.delimiter;\n    }\n    public tablecell(content, flags): string {\n        return content + '\\t';\n    }\n    public strong(text): string {\n        return text;\n    }\n    public em(text): string {\n        return text;\n    }\n    public codespan(text): string {\n        return text;\n    }\n    public br(): string {\n        return this.delimiter + this.delimiter;\n    }\n    public del(text): string {\n        return text;\n    }\n    public link(href, title, text): string {\n        return text;\n    }\n    public image(href, title, text): string {\n        return this.showImageText ? text : '';\n    }\n    public text(text): string {\n        return text;\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n\n@Component({\n    selector: \"icon-button\",\n    templateUrl: \"icon-button.component.html\",\n    styleUrls: [\"icon-button.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class IconButtonComponent extends AbstractBaseComponent {\n\n    @Input() type: string;\n    @Input() disabled: boolean = false;\n    @Input() title: string;\n    @Input() invisible: boolean = false;\n    @Input() pullRight: boolean = false;\n    @Output() onClick: EventEmitter<void> = new EventEmitter<void>();\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public pfIconType(): string {\n        if (this.type === 'add') {\n            return \"pficon pficon-add-circle-o\";\n        }\n        if (this.type === 'edit') {\n            return \"pficon pficon-edit\";\n        }\n        if (this.type === 'delete' || this.type === 'remove') {\n            return \"fa fa-trash\";\n        }\n        if (this.type === 'config') {\n            return \"pficon pficon-settings\";\n        }\n        if (this.type === 'import') {\n            return \"pficon pficon-import\";\n        }\n        return \"fa fa-info\";\n    }\n\n    public doClick(): void {\n        this.onClick.emit();\n    }\n\n}\n","<button class=\"icon-button\" [disabled]=\"disabled\" title=\"{{ title }}\"\n        [style.visibility]=\"invisible ? 'hidden' : 'inherit'\"\n        [class.pull-right]=\"pullRight\" (click)=\"doClick()\"><span class=\"{{ pfIconType() }}\"></span></button>","/**\n * @license\n * Copyright 2018 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ChangeDetectorRef, OnChanges, OnDestroy, OnInit, SimpleChanges, Directive } from \"@angular/core\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {TopicSubscription} from \"apicurio-ts-core\";\n\n@Directive()\nexport abstract class AbstractBaseComponent implements OnInit, OnChanges, OnDestroy {\n\n    private _docSub: TopicSubscription<void>;\n\n    protected constructor(protected __changeDetectorRef: ChangeDetectorRef, protected __documentService: DocumentService,\n                          protected __selectionService: SelectionService, protected __skipDocumentChanges: boolean = false) {}\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // Nothing to do at the base component level (yet?)\n    }\n\n    ngOnInit(): void {\n        if (this.__skipDocumentChanges) {\n            this._docSub = null;\n        } else {\n            this._docSub = this.__documentService.change().subscribe(() => {\n                this.__changeDetectorRef.markForCheck();\n                this.onDocumentChange();\n            });\n        }\n    }\n\n    ngOnDestroy(): void {\n        if (this._docSub) {\n            this._docSub.unsubscribe();\n        }\n    }\n\n    protected onDocumentChange(): void {\n        // Children should override this when necessary.\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    IOasParameterParent,\n    Library,\n    Node,\n    Oas20Operation,\n    Oas20Parameter,\n    Oas30Operation,\n    Oas30RequestBody,\n    OasOperation,\n    OasPathItem,\n    OasSchema,\n    SimplifiedParameterType,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {\n    IParameterEditorHandler,\n    ParameterData,\n    ParameterEditorComponent\n} from \"../../../editors/parameter-editor.component\";\nimport {EditorsService} from \"../../../../_services/editors.service\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../../_util/model.util\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../../dialogs/rename-entity.component\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {DropDownOption, DropDownOptionValue} from \"../../../common/drop-down.component\";\n\n\n@Component({\n    selector: \"requestBody-section\",\n    templateUrl: \"requestBody-section.component.html\",\n    styleUrls: [ \"requestBody-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RequestBodySectionComponent  extends AbstractBaseComponent {\n\n    @Input() operation: Oas20Operation | Oas30Operation;\n\n    @ViewChild(\"renameFormDataDialog\", { static: true }) renameFormDataDialog: RenameEntityDialogComponent;\n\n    public showRequestBody: boolean;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editors: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showRequestBody = this.operation.getMethod() === 'put' || this.operation.getMethod() === 'post';\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        if (changes[\"operation\"]) {\n            this.showRequestBody = this.operation.getMethod() === 'put' || this.operation.getMethod() === 'post';\n        }\n    }\n\n    public is20Document(): boolean {\n        return this.operation.ownerDocument().getDocumentType() == DocumentType.openapi2;\n    }\n\n    public is30Document(): boolean {\n        return this.operation.ownerDocument().getDocumentType() == DocumentType.openapi3;\n    }\n\n    public requestBodyPaths(): string | string[] {\n        if (this.is30Document()) {\n            return ModelUtils.nodeToPath(this.operation) + \"/requestBody\";\n        } else {\n            if (this.hasBodyParam()) {\n                return ModelUtils.nodeToPath(this.bodyParam());\n            }\n            if (this.hasFormDataParams()) {\n                return this.formDataParameters().map( param => {\n                    return ModelUtils.nodeToPath(param);\n                });\n            }\n        }\n        return null;\n    }\n\n    public openAddFormDataParamEditor(): void {\n        let editor: ParameterEditorComponent = this.editors.getParameterEditor();\n        editor.setParamType(\"formData\");\n        let handler: IParameterEditorHandler = {\n            onSave: (event) => {\n                this.addFormDataParam(event.data);\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.operation);\n    }\n\n    public addFormDataParam(data: ParameterData): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.operation, data.name, \"formData\",\n            data.description, data.type, false);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.operation);\n        nodePath.appendSegment(\"requestBody\", false);\n        nodePath.appendSegment(data.name, true);\n        this.selectionService.select(nodePath.toString());\n    }\n\n    public parameters(paramType: string): Oas20Parameter[] {\n        let params: Oas20Parameter[] = this.operation.getParametersIn(paramType) as Oas20Parameter[];\n        return params.sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n    }\n\n    public bodyParam(): Oas20Parameter {\n        let params: Oas20Parameter[] = this.operation.parameters as Oas20Parameter[];\n        if (params) {\n            for (let param of params) {\n                if (param.in === \"body\") {\n                    return param;\n                }\n            }\n        }\n        return null;\n    }\n\n    public hasBodyParam(): boolean {\n        if (this.bodyParam() !== null) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public hasRequestBody(): boolean {\n        return !ObjectUtils.isNullOrUndefined((this.operation as Oas30Operation).requestBody);\n    }\n\n    public hasAnything(): boolean {\n        return this.hasRequestBody() || this.hasBodyParam() || this.hasFormDataParams();\n    }\n\n    public formDataParameters(): Oas20Parameter[] {\n        return this.parameters(\"formData\");\n    }\n\n    public hasFormDataParams(): boolean {\n        return this.hasParameters(\"formData\");\n    }\n\n    public hasParameters(type: string): boolean {\n        if (!this.operation.parameters) {\n            return false;\n        }\n        return this.operation.parameters.filter((value) => {\n            return value.in === type;\n        }).length > 0;\n    }\n\n    public deleteRequestBody(): void {\n        if (this.is30Document()) {\n            let command: ICommand = CommandFactory.createDeleteRequestBodyCommand(this.operation as Oas30Operation);\n            this.commandService.emit(command);\n        } else {\n            if (this.hasBodyParam()) {\n                let command: ICommand = CommandFactory.createDeleteAllParametersCommand(this.operation, \"body\");\n                this.commandService.emit(command);\n            } else {\n                let command: ICommand = CommandFactory.createDeleteAllParametersCommand(this.operation, \"formData\");\n                this.commandService.emit(command);\n            }\n        }\n    }\n\n    public requestBodyParams(): Oas20Parameter[] {\n        let params: Oas20Parameter[] = this.operation.getParametersIn(\"body\") as Oas20Parameter[];\n        this.operation.getParametersIn(\"formData\").forEach( param => {\n            params.push(param as Oas20Parameter);\n        });\n        return params;\n    }\n\n    public validationModels(): Node[] {\n        if (this.is20Document()) {\n            return this.requestBodyParams();\n        } else {\n            return [(this.operation as Oas30Operation).requestBody];\n        }\n    }\n\n    public addRequestBody(): void {\n        let command: ICommand = CommandFactory.createNewRequestBodyCommand(this.operation.ownerDocument().getDocumentType(), this.operation);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.operation);\n        nodePath.appendSegment(\"requestBody\", false);\n        this.selectionService.select(nodePath.toString());\n    }\n\n    public bodyDescription(): string {\n        if (this.is20Document()) {\n            let bodyParam: Oas20Parameter = this.bodyParam();\n            if (bodyParam === null) {\n                return null;\n            }\n            if (!bodyParam.description) {\n                return null;\n            }\n            return bodyParam.description;\n        } else {\n            if (!this.requestBody()) {\n                return null;\n            }\n            return this.requestBody().description;\n        }\n    }\n\n    public changeBodyDescription(newBodyDescription: string): void {\n        console.info(\"[RequestBodySectionComponent] Changing request body to: \", newBodyDescription);\n        if (this.is20Document()) {\n            let bodyParam: Oas20Parameter = this.bodyParam();\n            let command: ICommand = CommandFactory.createChangePropertyCommand<string>(bodyParam,\n                \"description\", newBodyDescription);\n            this.commandService.emit(command);\n        } else {\n            let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.requestBody(),\n                \"description\", newBodyDescription);\n            this.commandService.emit(command);\n        }\n    }\n\n    public requestBodyType(): SimplifiedType {\n        let bodyParam: Oas20Parameter = this.bodyParam();\n        if (bodyParam && bodyParam.schema) {\n            return SimplifiedType.fromSchema(<OasSchema> bodyParam.schema);\n        }\n        return null;\n    }\n\n    public changeRequestBodyType(newType: SimplifiedType): void {\n        let bodyParam: Oas20Parameter = this.bodyParam();\n        let nt: SimplifiedParameterType = new SimplifiedParameterType();\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        nt.required = true; // Body params are always required\n\n        let command: ICommand = CommandFactory.createChangeParameterTypeCommand(this.operation.ownerDocument().getDocumentType(), bodyParam, nt);\n        this.commandService.emit(command);\n    }\n\n    public deleteParam(parameter: Oas20Parameter): void {\n        let command: ICommand = CommandFactory.createDeleteParameterCommand(parameter);\n        this.commandService.emit(command);\n    }\n\n    public requestBodyRequiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public requestBody(): Oas30RequestBody {\n        return (this.operation as Oas30Operation).requestBody;\n    }\n\n    public changeRequestBodyRequired(value: string): void {\n        let isRequired: boolean = value === \"required\";\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.requestBody(), \"required\", isRequired);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the rename parameter dialog.\n     * @param parameter\n     */\n    public openRenameFormDataParameterDialog(parameter: Oas20Parameter): void {\n        let parent: IOasParameterParent = <any>parameter.parent();\n        let paramNames: string[] = parent.getParametersIn(\"formData\").map( param => { return param.name; });\n        this.renameFormDataDialog.open(parameter, parameter.name, newName => {\n            return paramNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the parameter.\n     * @param event\n     */\n    public renameFormDataParameter(event: RenameEntityEvent): void {\n        let parameter: Oas20Parameter = <any>event.entity;\n        let parent: OasPathItem | OasOperation = <any>parameter.parent();\n        let command: ICommand = CommandFactory.createRenameParameterCommand(parent, parameter.name, event.newName, \"formData\");\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"requestBody\" label=\"REQUEST BODY\" [expanded]=\"showRequestBody\"\n         contextHelp=\"Use this section to configure the operation's Request Body.  Typically a request body is used for PUT and POST only.\"\n         [collaborationNodePath]=\"requestBodyPaths()\"\n         [validationModels]=\"validationModels()\">\n    <span actions>\n        <icon-button *ngIf=\"is20Document()\"\n                     (onClick)=\"openAddFormDataParamEditor()\" [pullRight]=\"true\" type=\"add\"\n                     [invisible]=\"!hasFormDataParams()\"\n                     [title]=\"'Add a response to the operation.'\"></icon-button>\n        <icon-button *ngIf=\"is20Document()\"\n                     (onClick)=\"deleteRequestBody()\" [disabled]=\"!hasBodyParam() && !hasFormDataParams()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete the request body.'\"></icon-button>\n\n        <icon-button *ngIf=\"is30Document()\"\n                     (onClick)=\"deleteRequestBody()\" [pullRight]=\"true\" type=\"delete\" [disabled]=\"!hasRequestBody()\"\n                     [title]=\"'Delete the request body.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasAnything()\">\n            <span>No request body has been defined.</span>\n            <a (click)=\"addRequestBody()\">Add a request body</a>\n            <span *ngIf=\"is20Document()\">, or</span>\n            <a *ngIf=\"is20Document()\" (click)=\"openAddFormDataParamEditor()\">add request form data</a>\n        </signpost>\n\n        <!-- If we're using a 'body' param -->\n        <div *ngIf=\"hasBodyParam()\">\n            <div class=\"alert alert-warning\" *ngIf=\"operation.getMethod() === 'get'\">\n                <span class=\"pficon pficon-warning-triangle-o\"></span>\n                <strong>Not Recommended</strong>\n                <span>It is unusual and not recommended to define a request body for a <strong>GET</strong> operation.</span>\n            </div>\n            <inline-markdown-editor [value]=\"bodyDescription()\" noValueMessage=\"No request body description.\"\n                                    labelClass=\"request-body-description api-item-description description\"\n                                    inputClass=\"api-description-editor api-item-description request-body-description api-item-description description\"\n                                    formClass=\"api-description-editor-form\"\n                                    [baseNode]=\"bodyParam()\" nodePath=\"description\"\n                                    (onChange)=\"changeBodyDescription($event)\"></inline-markdown-editor>\n            <div class=\"request-body-type\">\n                <schema-type-editor [document]=\"operation.ownerDocument()\" [isParameter]=\"false\" [value]=\"requestBodyType()\"\n                                    typeLabel=\"Request Body Type\" [validationModel]=\"bodyParam()\"\n                                    (onChange)=\"changeRequestBodyType($event)\"></schema-type-editor>\n            </div>\n        </div>\n\n        <!-- If we're using 'formData' params -->\n        <div *ngIf=\"hasFormDataParams()\">\n            <div class=\"container-fluid formData-parameters typed-item-list\">\n                <formData-param-row *ngFor=\"let param of formDataParameters()\" [item]=\"param\"\n                                    (onRename)=\"openRenameFormDataParameterDialog(param)\"\n                                    (onDelete)=\"deleteParam(param)\"></formData-param-row>\n            </div>\n        </div>\n\n        <!-- If it's a 3.0 document -->\n        <div *ngIf=\"hasRequestBody()\">\n            <div class=\"alert alert-warning\" *ngIf=\"operation.getMethod() === 'get'\">\n                <span class=\"pficon pficon-warning-triangle-o\"></span>\n                <strong>Not Recommended</strong>\n                <span>It is unusual and not recommended to define a request body for a <strong>GET</strong> operation.</span>\n            </div>\n            <inline-markdown-editor [value]=\"bodyDescription()\" noValueMessage=\"No request body description.\"\n                                    labelClass=\"request-body-description api-item-description description\"\n                                    inputClass=\"api-description-editor api-item-description request-body-description api-item-description description\"\n                                    formClass=\"api-description-editor-form\"\n                                    [baseNode]=\"requestBody()\" nodePath=\"description\"\n                                    (onChange)=\"changeBodyDescription($event)\"></inline-markdown-editor>\n            <div class=\"request-body-required\">\n                <span class=\"dropdown-label\">It is</span>\n                <drop-down [id]=\"'api-request-body-required'\"\n                           [value]=\"requestBody().required ? 'required' : 'not-required'\"\n                           [options]=\"requestBodyRequiredOptions()\"\n                           (onValueChange)=\"changeRequestBodyRequired($event)\"\n                           [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                <span class=\"dropdowns-label\">that clients include the request body.</span>\n            </div>\n            <div class=\"request-body-content\">\n                <div class=\"form-label\">Media Types</div>\n                <content [parent]=\"requestBody()\"></content>\n            </div>\n        </div>\n\n    </div>\n</section>\n<rename-entity-dialog #renameFormDataDialog\n                      type=\"Form Data Parameter\"\n                      title=\"Rename Form Data Parameter\"\n                      warning=\"Renaming a Form Data Parameter may also update any form data parameters with the same name depending on path and operation hierarchies.\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_\\$]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters, ., -, _ and $ are allowed - no whitespace).\"\n                      (onRename)=\"renameFormDataParameter($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport * as YAML from 'js-yaml';\nimport {Oas30Schema} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {ObjectUtils, StringUtils} from \"apicurio-ts-core\";\nimport {CodeEditorComponent, CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\n\n\n@Component({\n    selector: \"add-example-dialog\",\n    templateUrl: \"add-example.component.html\",\n    styleUrls: [ \"add-example.component.css\" ]\n})\nexport class AddExampleDialogComponent {\n\n    @Input() schema: Oas30Schema;\n    @Output() onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"addExampleModal\") addExampleModal: QueryList<ModalDirective>;\n    @ViewChildren(\"codeEditor\") codeEditor: QueryList<CodeEditorComponent>;\n\n    private _isOpen: boolean = false;\n\n    model: any = {\n        name: null,\n        value: null,\n        format: CodeEditorMode.JSON,\n        valid: true\n    };\n\n    get value() {\n        return this.model.value;\n    }\n\n    set value(value: string) {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        }\n        this.model.value = value;\n    }\n\n    /**\n     * Called to open the dialog.\n     */\n    public open(): void {\n        this._isOpen = true;\n        this.model = {\n            name: null,\n            value: null,\n            format: CodeEditorMode.JSON,\n            valid: true\n        };\n\n        this.addExampleModal.changes.subscribe(() => {\n            if (this.addExampleModal.first) {\n                this.addExampleModal.first.show();\n            }\n        });\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        let event: any = {\n            name: this.model.name,\n            value: this.model.value\n        };\n\n        // Convert to jsobject if the data is JSON and is valid\n        if (this.model.valid && this.model.format === CodeEditorMode.JSON) {\n            try {\n                event.value = JSON.parse(this.model.value)\n            } catch (e) { // should never happen!\n                console.error(\"[AddExampleDialogComponent] Failed to parse example.\");\n            }\n        }\n\n        this.onAdd.emit(event);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addExampleModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    valueEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    valueEditorMode(): CodeEditorMode {\n        return this.model.format;\n    }\n\n    hasValue(): boolean {\n        return !ObjectUtils.isNullOrUndefined(this.model.value);\n    }\n\n    canGenerateExample(): boolean {\n        return this.schema !== null && this.schema !== undefined;\n    }\n\n    generate(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.schema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.codeEditor.first.setText(exampleStr);\n    }\n\n}\n","<!-- Add Example Dialog -->\n<div>\n    <div bsModal #addExampleModal=\"bs-modal\" class=\"modal fade\" id=\"addExampleModal\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"addExampleModalLabel\" aria-hidden=\"true\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\"\n         (onShown)=\"addExampleInput.focus()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"addExampleModalLabel\">Add Example</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter the new example name and value below and then click Add.</p>\n                    <form id=\"addexample-form\" class=\"form-horizontal\" #addExampleForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label required\" for=\"exampleName\">Name</label>\n                            <div class=\"col-sm-10\">\n                                <input #addExampleInput name=\"exampleName\" type=\"text\" id=\"exampleName\" class=\"form-control\"\n                                       placeholder=\"Enter an Example Name\" #name=\"ngModel\"\n                                       required [(ngModel)]=\"model.name\">\n                                <form-error-message [inputModel]=\"name\" [type]=\"'required'\">Name is required.</form-error-message>\n                            </div>\n                        </div>\n\n                        <div class=\"example\">\n                            <code-editor [theme]=\"valueEditorTheme()\" #codeEditor\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"150\"\n                                         [(text)]=\"value\"\n                                         [editorStyle]=\"{ position: 'relative', height: '300px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generate()\"\n                                    *ngIf=\"canGenerateExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\"\n                            [disabled]=\"!addExampleForm.form.valid || !hasValue()\">Add</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {ChangeLicenseCommand, CommandFactory, ICommand, Library, OasDocument, OasLicense} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {ILicense, LicenseService} from \"../../../_services/license.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\n\n\n@Component({\n    selector: \"license-section\",\n    templateUrl: \"license-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LicenseSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, public licenseService: LicenseService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns true if a license has been configured for this API.\n     */\n    public hasLicense(): boolean {\n        if (this.document.info && this.document.info.license) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns the resolved license or null if not found.\n     */\n    public license(): ILicense {\n        return this.licenseService.findLicense(this.licenseUrl());\n    }\n\n    /**\n     * Returns the license model.\n     */\n    public licenseModel(): OasLicense {\n        if (this.document.info && this.document.info.license) {\n            return this.document.info.license;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * returns the license name.\n     */\n    public licenseName(): string {\n        if (this.document.info && this.document.info.license) {\n            return this.document.info.license.name;\n        } else {\n            return \"\";\n        }\n    }\n\n    /**\n     * returns the license url.\n     */\n    public licenseUrl(): string {\n        if (this.document.info && this.document.info.license) {\n            return this.document.info.license.url;\n        } else {\n            return \"\";\n        }\n    }\n\n    /**\n     * Called when the user chooses a new license in the Choose License dialog.\n     * @param licenseInfo\n     */\n    public setLicense(licenseInfo: any): void {\n        let command: ICommand = CommandFactory.createChangeLicenseCommand(licenseInfo.name, licenseInfo.url);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(this.document);\n        path.appendSegment(\"info\", false);\n        path.appendSegment(\"license\", false);\n        this.selectionService.select(path.toString());\n    }\n\n    /**\n     * Called when the user chooses to remove the license.\n     */\n    public deleteLicense(): void {\n        let command: ICommand = CommandFactory.createDeleteLicenseCommand(this.document.info);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"license\" label=\"LICENSE\"\n         contextHelp=\"Does your API have a license?  If it does, you can configure it here.\"\n         collaborationNodePath=\"/info/license\"\n         [validationModels]=\"[licenseModel()]\">\n    <span actions>\n        <icon-button (onClick)=\"deleteLicense()\" [disabled]=\"!hasLicense()\" [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete the license information.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasLicense()\">\n            <span>No license has been set.</span>\n            <a (click)=\"setLicenseDialog.open()\">Set license</a>\n        </signpost>\n\n        <div *ngIf=\"hasLicense() && license() === null\" class=\"container-fluid license\">\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <h2><a href=\"{{ licenseUrl() }}\" target=\"_blank\">{{ licenseName() }}</a><span class=\"fa fa-fw fa-external-link\"></span></h2>\n                    <p>You have configured a license that we are not familiar with.  For information about the license, click the link above!  Or else click the button below to choose a different license...</p>\n                    <button class=\"btn btn-sm btn-default\" (click)=\"setLicenseDialog.open()\">Change License</button>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"license() !== null\" class=\"container-fluid license\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h2><a href=\"{{ license().url }}\" target=\"_blank\">{{ license().name }}</a><span class=\"fa fa-fw fa-external-link\"></span></h2>\n                    <p>{{ license().description }}</p>\n                    <button class=\"btn btn-sm btn-default\" (click)=\"setLicenseDialog.open()\">Change License</button>\n                    <a class=\"pull-right\" href=\"{{ license().moreInfoUrl }}\" target=\"_blank\">View full {{ license().fullName }} »</a>\n                </div>\n                <div class=\"col-md-2\">\n                    <h3>Permissions</h3>\n                    <ul class=\"permissions\">\n                        <li *ngFor=\"let permission of license().permissions\"><span title=\"{{ licenseService.permissionDescription(permission) }}\">{{ licenseService.permissionName(permission) }}</span></li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <h3>Conditions</h3>\n                    <ul class=\"conditions\">\n                        <li *ngFor=\"let condition of license().conditions\"><span title=\"{{ licenseService.conditionDescription(condition) }}\">{{ licenseService.conditionName(condition) }}</span></li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <h3>Limitations</h3>\n                    <ul class=\"limitations\">\n                        <li *ngFor=\"let limitation of license().limitations\"><span title=\"{{ licenseService.limitationDescription(limitation) }}\">{{ licenseService.limitationName(limitation) }}</span></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<set-license-dialog #setLicenseDialog (onLicenseChosen)=\"setLicense($event)\"></set-license-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\n\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    AaiChannelItem,\n    AaiDocument\n} from \"@apicurio/data-models\";\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {EditorsService} from \"../../_services/editors.service\";\n\n@Component({\n    selector: \"channel-form\",\n    templateUrl: \"channel-form.component.html\",\n    styleUrls: [ \"channel-form.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChannelFormComponent extends SourceFormComponent<AaiChannelItem> {\n\n    protected _channel: AaiChannelItem;\n\n    @Input()\n    set channel(channel: AaiChannelItem) {\n        this._channel = channel;\n        this.sourceNode = channel;\n        this.revertSource();\n    }\n    get channel(): AaiChannelItem {\n        return this._channel;\n    }\n\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n            protected selectionService: SelectionService,\n            protected commandService: CommandService,\n            protected documentService: DocumentService,\n            private editors: EditorsService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    protected createEmptyNodeForSource(): AaiChannelItem {\n        return (<AaiDocument>this.channel.parent()).createChannelItem(this.channel.getName());\n    }\n\n    protected createReplaceNodeCommand(node: AaiChannelItem): ICommand {\n        return CommandFactory.createReplaceChannelItemCommand(this.channel, node);\n    }\n\n    public enableSourceMode(): void {\n        this.sourceNode = this.channel;\n        super.enableSourceMode();\n    }\n}\n","<div class=\"detail-title\">\n    <div path-item class=\"detail-label\" [path]=\"channel.getName()\"></div>\n    <div class=\"detail-actions\">\n\n    </div>\n</div>\n<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n\n    <div class=\"api-path-detail\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"apipath-2-get\">\n                <!-- Info Section -->\n                <channel-info-section [channel]=\"channel\"></channel-info-section>\n\n                <!-- Operations Section -->\n                <channel-operations-section [channel]=\"channel\"></channel-operations-section>\n            </div>\n        </div>\n    </div>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {Topic} from \"apicurio-ts-core\";\nimport {ApiEditorUser} from \"../_models/editor-user.model\";\n\n\nclass CollaboratorSelections {\n\n    // Map of userId->string\n    private selections: any = {};\n    // Map of userId->ApiEditorUser\n    private users: any = {};\n\n    /**\n     * Gets a user by ID.\n     * @param userId\n     */\n    public getUser(userId: string): ApiEditorUser {\n        return this.users[userId];\n    }\n\n    /**\n     * Gets the current selection for the given collaborator.\n     * @param user\n     */\n    public getSelection(user: ApiEditorUser): string {\n        return this.selections[user.userId];\n    }\n\n    /**\n     * Sets the selection for a given active collaborator.  Returns the user's previous selection.\n     * @param user\n     * @param selection\n     */\n    public setSelection(user: ApiEditorUser, selection: string): void {\n        this.users[user.userId] = user;\n\n        // Next, process the new selection\n        if (selection) {\n            this.selections[user.userId] = selection;\n        } else {\n            // If the selection is null, remove it (user has left the editing session)\n            console.info(`[CollaboratorSelections] Selection for ${user.userId} is null, removing.`);\n            delete this.selections[user.userId];\n            delete this.users[user.userId];\n        }\n    }\n\n    /**\n     * Invokes the given function for every userId/selection pair.\n     * @param func\n     */\n    public forEachSelection(func: (userId: string, path: string) => void): void {\n        for (let key in this.selections) {\n            let path: string = this.selections[key];\n            func(key, path);\n        }\n    }\n\n}\n\n\n/**\n * A service that tracks (active) collaborators and collaborator selections.\n */\n@Injectable()\nexport class CollaboratorService {\n\n    private _collaboratorSelections: CollaboratorSelections = new CollaboratorSelections();\n\n    private _collaboratorSelectionTopic: Topic<ApiEditorUser> = new Topic<ApiEditorUser>();\n\n    constructor() {\n        this.reset();\n    }\n\n    public collaboratorSelection(): Topic<ApiEditorUser> {\n        return this._collaboratorSelectionTopic;\n    }\n\n    public currentCollaboratorSelection(user: ApiEditorUser): string {\n        return this._collaboratorSelections.getSelection(user);\n    }\n\n    public setCollaboratorSelection(user: ApiEditorUser, selection: string): void {\n        this._collaboratorSelections.setSelection(user, selection);\n        this._collaboratorSelectionTopic.send(user);\n    }\n\n    public reset(): void {\n        this._collaboratorSelections = new CollaboratorSelections();\n    }\n\n    public getCollaboratorsForPath(nodePath: string): ApiEditorUser[] {\n        let collaborators: ApiEditorUser[] = [];\n        this._collaboratorSelections.forEachSelection( (userId, path) => {\n            if (path && path.indexOf(nodePath) === 0) {\n                collaborators.push(this._collaboratorSelections.getUser(userId));\n            }\n        });\n        return collaborators;\n    }\n}\n","/**\n * @license\n * Copyright 2017 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation} from \"@angular/core\";\n\nexport abstract class DropDownOption {\n\n    public abstract isDivider(): boolean;\n    public abstract getName(): any;\n    public abstract getValue(): any;\n    public abstract isDisabled(): boolean;\n\n}\n\nexport class DropDownOptionValue extends DropDownOption {\n\n    public name: string;\n    public value: any;\n    public disabled: boolean = false;\n\n    public constructor(name: string, value: any, disabled: boolean = false) {\n        super();\n        this.name = name;\n        this.value = value;\n        this.disabled = disabled;\n    }\n\n    public isDivider(): boolean {\n        return false;\n    }\n    public getName() {\n        return this.name;\n    }\n    public getValue() {\n        return this.value;\n    }\n    public isDisabled(): boolean {\n        throw this.disabled;\n    }\n}\n\nexport class DropDownOptionDivider extends DropDownOption {\n\n    public divider: true; // For backwards-compatible instantiation via the object literal\n\n    public isDivider(): boolean {\n        return true;\n    }\n\n    public getName() {\n        throw new Error(\"DropDownOptionDivider does not contain a name. \"\n            + \"Use DropDownOption#isDivider() to prevent this error.\");\n    }\n\n    public getValue() {\n        throw new Error(\"DropDownOptionDivider does not contain a value. \"\n            + \"Use DropDownOption#isDivider() to prevent this error.\");\n    }\n\n    public isDisabled(): boolean {\n        throw new Error(\"DropDownOptionDivider cannot be disabled. \"\n            + \"Use DropDownOption#isDivider() to prevent this error.\");\n    }\n}\n\n/**\n  * Static instance for reusability\n  */\nexport let DIVIDER: DropDownOption = new DropDownOptionDivider();\n\n@Component({\n    selector: \"drop-down\",\n    templateUrl: \"drop-down.component.html\",\n    styleUrls: [ \"drop-down.component.css\" ]\n})\nexport class DropDownComponent {\n\n    public _open: boolean = false;\n\n    @Input() id: string;\n    @Input() classes: string;\n    @Input() value: any;\n    _options: DropDownOption[];\n    @Input() noSelectionLabel: string = \"No Selection\";\n    @Input() noOptionsLabel: string = \"No matching options\";\n    @Input() filterItemCountThreshold: number = 20;\n    @Input() loading: boolean = false;\n    @Input() loadingLabel: string = \"Loading...\";\n\n    @Output() onValueChange: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input()\n    get options(): DropDownOption[] {\n        return this._options;\n    }\n    set options(value: DropDownOption[]) {\n        if (this._options === null || JSON.stringify(value) !== JSON.stringify(this._options)) {\n            this._options = value;\n            this.filteredOptions = value;\n        }\n    }\n\n    @ViewChild(\"filter\") filter: ElementRef;\n    criteria: string;\n    filteredOptions: DropDownOption[];\n\n    public toggle(): void {\n        this.setOpen(!this._open);\n    }\n\n    public open(): void {\n        this.setOpen(true);\n    }\n\n    public setOpen(state: boolean): void {\n        this._open = state;\n        if (this._open) {\n            this.criteria = null;\n            this.filterOptions();\n            // This is annoying, but the options panel (the \"ul\" element) is only added to\n            // the DOM the first time the user clicks the dropdown button.  After that, the \"ul\"\n            // sticks around.\n            setTimeout(() => {\n                if (this.filter) {\n                    setTimeout(() => {\n                        this.filter.nativeElement.focus();\n                    }, 10);\n                }\n            }, 10);\n        }\n    }\n\n    public close(): void {\n        this.setOpen(false);\n    }\n\n    public isOpen(): boolean {\n        return this._open;\n    }\n\n    public hasValue(): boolean {\n        for (let option of this.options) {\n            if (!option.isDivider() && option.getValue() === this.value) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public displayValue(): string {\n        for (let option of this.options) {\n            if (!option.isDivider() && option.getValue() === this.value) {\n                return option.getName();\n            }\n        }\n        return null;\n    }\n\n    public setValue(value: any): void {\n        this.value = value;\n        this.onValueChange.emit(this.value);\n    }\n\n    public filterOptions(): void {\n        if (this.criteria === null || this.criteria === undefined || this.criteria.trim().length === 0) {\n            this.filteredOptions = this._options;\n        } else {\n            this.filteredOptions = [];\n            this._options.forEach(option => {\n                if (!option.isDivider() && option.getName().toLocaleLowerCase().includes(this.criteria.toLocaleLowerCase())) {\n                    this.filteredOptions.push(option);\n                }\n            });\n        }\n    }\n\n    public hasOptions(): boolean {\n        return this.filteredOptions && this.filteredOptions.length > 0;\n    }\n\n    public inputKeypress(event: KeyboardEvent): void {\n        if (event.key === \"Escape\"  && !event.metaKey && !event.altKey && !event.ctrlKey) {\n            this.criteria = null;\n            this.filterOptions();\n        }\n    }\n\n    public shouldShowFilter(): boolean {\n        return this._options && this._options.length > this.filterItemCountThreshold;\n    }\n\n}\n","<div class=\"dropdown {{ classes }}\" dropdown [class.empty]=\"!hasValue()\" [isOpen]=\"_open\" (isOpenChange)=\"setOpen($event)\">\n    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"{{ id }}\" dropdownToggle>\n        <span *ngIf=\"hasValue() && !loading\">{{ displayValue() }}</span>\n        <span *ngIf=\"!hasValue() && !loading\">{{ noSelectionLabel }}</span>\n        <span *ngIf=\"loading\"><span class=\"spinner spinner-xs spinner-inline\"></span> {{ loadingLabel }}</span>\n        <span class=\"caret\"></span>\n    </button>\n    <ul class=\"dropdown-menu\" [style.max-height]=\"'400px'\" [style.overflow-y]=\"'auto'\" role=\"menu\" [attr.aria-labelledby]=\"id\" *dropdownMenu>\n        <li role=\"filter\" class=\"filter\" *ngIf=\"shouldShowFilter()\">\n            <input type=\"text\" class=\"form-control\" id=\"dd-filter\" placeholder=\"Filter...\" #filter autocomplete=\"off\"\n                   [(ngModel)]=\"criteria\" (ngModelChange)=\"filterOptions()\" (keypress)=\"inputKeypress($event)\">\n        </li>\n        <li class=\"divider\" *ngIf=\"shouldShowFilter()\"></li>\n        <li role=\"presentation\" *ngFor=\"let option of filteredOptions\" [class.divider]=\"option.divider\" [class.disabled]=\"option.disabled\">\n            <a *ngIf=\"!option.divider\" role=\"menuitem\" tabindex=\"-1\" (click)=\"option.disabled ? false : setValue(option.value)\">{{ option.name }}</a>\n        </li>\n        <li role=\"presentation\" *ngIf=\"!hasOptions()\">\n            <span>{{ noOptionsLabel }}</span>\n        </li>\n    </ul>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AaiMessage, CommandFactory, ICommand} from \"@apicurio/data-models\";\n\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {EditorsService} from \"../../_services/editors.service\";\nimport {ApiCatalogService} from \"../../_services/api-catalog.service\";\nimport {SchemaUtil} from \"../../_util/schema.util\";\n\n@Component({\n    selector: \"message-form\",\n    templateUrl: \"message-form.component.html\",\n    styleUrls: [\"message-form.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MessageFormComponent extends SourceFormComponent<AaiMessage> {\n\n    protected _message: AaiMessage;\n\n    currentPart: string = 'payload';\n\n\n    @Input()\n    set message(message: AaiMessage) {\n        this._message = message;\n        this.sourceNode = message;\n        this.revertSource();\n    }\n    get message(): AaiMessage {\n        return this._message;\n    }\n\n     /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param selectionService\n     * @param commandService\n     * @param documentService\n     * @param editors\n     * @param catalog\n     */\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n            protected selectionService: SelectionService,\n            protected commandService: CommandService,\n            protected documentService: DocumentService,\n            private editors: EditorsService,\n            private catalog: ApiCatalogService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    protected createEmptyNodeForSource(): AaiMessage {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    protected createReplaceNodeCommand(node: AaiMessage): ICommand {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public schemaFormatOptions() {\n        return SchemaUtil.schemaFormatOptions;\n    }\n\n    public isPartActive(part: string): boolean {\n        return this.currentPart === part;\n    }\n\n    public setActivePart(part: string): void {\n        this.currentPart = part;\n    }\n\n\n    public changeName(newName: string): void {\n        console.info(\"[MessageSectionComponent] Changing message name to: \", newName);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.message,\n            \"name\", newName);\n        this.commandService.emit(command);\n    }\n\n    public changeTitle(newTitle: string): void {\n        console.info(\"[MessageSectionComponent] Changing message title to: \", newTitle);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.message,\n            \"title\", newTitle);\n        this.commandService.emit(command);\n    }\n\n    public changeSummary(newSummary: string): void {\n        console.info(\"[MessageSectionComponent] Changing message summary to: \", newSummary);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.message,\n            \"summary\", newSummary);\n        this.commandService.emit(command);\n    }\n\n    public changeDescription(newDescription: string): void {\n        console.info(\"[MessageSectionComponent] Changing message description to: \", newDescription);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.message,\n            \"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n    public changeContentType(newContentType: string): void {\n        console.info(\"[MessageSectionComponent] Changing message contentType to: \", newContentType);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.message,\n            \"contentType\", newContentType);\n        this.commandService.emit(command);\n    }\n\n    public changeSchemaFormat(newSchemaFormat: boolean): void {\n        console.info(\"[MessageSectionComponent] Changing message schemaFormat to: \", newSchemaFormat);\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.message,\n            \"schemaFormat\", newSchemaFormat);\n        this.commandService.emit(command);\n    }\n\n\n    public enableSourceMode(): void {\n        this.sourceNode = this.message;\n        super.enableSourceMode();\n    }\n\n\n    public tagDefs(): ()=>string[] {\n        return ()=> {\n            if (this.message.ownerDocument().tags && this.message.ownerDocument().tags.length > 0) {\n                let tagDefs: string[] = this.message.ownerDocument().tags.map(tagDef => tagDef.name);\n                tagDefs.sort();\n                return tagDefs;\n            } else {\n                return [];\n            }\n        }\n    }\n}\n","<div class=\"detail-title\">\n    <div message-item class=\"detail-label\" [message]=\"message\"></div>\n    <div class=\"detail-actions\">\n\n    </div>\n</div>\n<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n\n    <div class=\"api-path-detail\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"apipath-2-get\">\n\n                <div class=\"half-section\" >\n\n                    <!-- Name -->\n                    <div class=\"section-field-label\">\n                        <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'name'\"></validation-problem>\n                        <span>Name</span>\n                    </div>\n                    <div class=\"section-field name\">\n                        <pf-inline-text-editor [value]=\"message.name\" [noValueMessage]=\"'No name.'\"\n                                               [labelClass]=\"'api-version'\"\n                                               [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                               [baseNode]=\"message\" nodePath=\"name\"\n                                               (onChange)=\"changeName($event)\"></pf-inline-text-editor>\n                    </div>\n\n                    <!-- Title -->\n                    <div class=\"section-field-label\">\n                        <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'title'\"></validation-problem>\n                        <span>Title</span>\n                    </div>\n                    <div class=\"section-field title\">\n                        <pf-inline-text-editor [value]=\"message.title\" [noValueMessage]=\"'No title.'\"\n                                               [labelClass]=\"'api-version'\"\n                                               [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                               [baseNode]=\"message\" nodePath=\"title\"\n                                               (onChange)=\"changeTitle($event)\"></pf-inline-text-editor>\n                    </div>\n\n                    <!-- Summary -->\n                    <div class=\"section-field-label\">\n                        <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'summary'\"></validation-problem>\n                        <span>Summary</span>\n                    </div>\n                    <div class=\"section-field summary\">\n                        <pf-inline-text-editor [value]=\"message.summary\" [noValueMessage]=\"'No summary.'\"\n                                               [labelClass]=\"'api-version'\"\n                                               [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                               [baseNode]=\"message\" nodePath=\"summary\"\n                                               (onChange)=\"changeSummary($event)\"></pf-inline-text-editor>\n                    </div>\n\n                    <!-- Description -->\n                    <div class=\"section-field-label\">\n                        <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'description'\"></validation-problem>\n                        <span>Description</span>\n                    </div>\n                    <div class=\"section-field description\">\n                        <inline-markdown-editor [value]=\"message.description\" [noValueMessage]=\"'No description.'\"\n                                                [labelClass]=\"'api-item-editor api-description-editor operation-description api-item-description'\"\n                                                [inputClass]=\"'api-item-description'\"\n                                                [formClass]=\"'api-description-editor-form'\"\n                                                [baseNode]=\"message\" nodePath=\"description\"\n                                                (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n                    </div>\n\n                </div>\n\n                <div class=\"half-section right\">\n                    <!-- Correlation ID -->\n                    <div class=\"section-field-label\">\n                        <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'name'\"></validation-problem>\n                        <span>Correlation ID</span>\n                    </div>\n                    <div class=\"section-field name\">\n                        <pf-inline-text-editor [value]=\"message.name\" [noValueMessage]=\"'No name.'\"\n                                               [labelClass]=\"'api-version'\"\n                                               [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                               [baseNode]=\"message\" nodePath=\"name\"\n                                               (onChange)=\"changeName($event)\"></pf-inline-text-editor>\n                    </div>\n\n                    <!-- Content Type -->\n                    <div class=\"section-field-label\">\n                        <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'contentType'\"></validation-problem>\n                        <span>Content Type</span>\n                    </div>\n                    <div class=\"section-field contentType\">\n                        <pf-inline-text-editor [value]=\"message.contentType\" [noValueMessage]=\"'No content type. Default will apply.'\"\n                                               [labelClass]=\"'api-version'\"\n                                               [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                               [baseNode]=\"message\" nodePath=\"contentType\"\n                                               (onChange)=\"changeContentType($event)\"></pf-inline-text-editor>\n                    </div>\n\n                    <!-- Schema Format -->\n                    <div class=\"section-field-label\">\n                        <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'schemaFormat'\"></validation-problem>\n                        <span>Schema Format</span>\n                    </div>\n                    <div class=\"section-field schemaFormat\">\n                        <drop-down [value]=\"message.schemaFormat\"\n                                   [options]=\"schemaFormatOptions()\"\n                                   (onValueChange)=\"changeSchemaFormat($event)\"\n                                   noSelectionLabel=\"No Schema Format\"></drop-down>\n                    </div>\n                </div>\n\n                <div class=\"section-field-label\" >\n                    <validation-problem [model]=\"message\" [shallow]=\"true\" [property]=\"'payload'\"></validation-problem>\n                    <span>Content</span>\n                </div>\n                <div class=\"parts-tabs\" >\n                    <div class=\"tab\" [class.active]=\"isPartActive('payload')\">\n                        <a (click)=\"setActivePart('payload')\">\n                            <span>Payload</span>\n                        </a>\n                    </div>\n                    <div class=\"tab\" [class.active]=\"isPartActive('headers')\">\n                        <a (click)=\"setActivePart('headers')\">\n                            <span>Headers</span>\n                        </a>\n                    </div>\n                </div>\n                <div class=\"parts-tab-content\" >\n                    <payload-tab [message]=\"message\" *ngIf=\"isPartActive('payload')\"></payload-tab>\n                    <headers-tab [message]=\"message\" *ngIf=\"isPartActive('headers')\"></headers-tab>\n                </div>\n\n\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {CombinedVisitorAdapter, OasPathItem} from \"@apicurio/data-models\";\n\n/**\n * Visitor used to find path items.\n */\nexport class FindPathItemsVisitor extends CombinedVisitorAdapter {\n\n    public pathItems: OasPathItem[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria\n     */\n    constructor(private filterCriteria: string) {\n        super();\n    }\n\n    /**\n     * Called when a path item is visited.\n     * @param node\n     */\n    visitPathItem(node: OasPathItem): void {\n        if (this.acceptThroughFilter(node.getPath())) {\n            this.pathItems.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the path items.\n     */\n    public getSortedPathItems(): OasPathItem[] {\n        return this.pathItems.sort( (pathItem1, pathItem2) => {\n            return pathItem1.getPath().localeCompare(pathItem2.getPath());\n        });\n    }\n\n    /**\n     * Returns true if the given name is accepted by the current filter criteria.\n     * @param name\n     * @return\n     */\n    private acceptThroughFilter(name: string): boolean {\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n    }\n\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    Input,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {AbstractInlineEditor} from \"./inline-editor.base\";\n\n@Component({\n    selector: \"checkbox-input\",\n    templateUrl: \"checkbox-input.component.html\",\n    styleUrls: [\"checkbox-input.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckBoxInputComponent extends AbstractInlineEditor<boolean> {\n\n    @Input() defaultValue: boolean;\n    @Input() id: string;\n    @Input() name: string;\n    @Input() label: string;\n\n    public state: boolean;\n\n    constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    public getState(): boolean {\n        this.state = this.defaultValue;\n        return this.state;\n    }\n\n    public onSaveState(state: boolean): void {\n        this.state = state;\n        this.onChange.emit(this.state);\n    }\n\n    protected initialValueForEditing(): boolean {\n        return this.defaultValue;\n    }\n}\n","<span class=\"checkbox-input\">\n      <label for=\"{{ id }}\">{{ label }}:</label>\n      <input type=\"checkbox\"  #excludeCheckBox [checked]=\"getState()\"  name=\"{{ name }}\" id=\"{{ id }}\" (click)=\"onSaveState(excludeCheckBox.checked)\"  >\n</span>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, HostListener, Input} from \"@angular/core\";\nimport {\n    Node,\n    TraverserDirection,\n    ValidationProblem,\n    ValidationProblemSeverity,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {ProblemFinder} from \"./validation-aggregate.component\";\nimport {ProblemsService} from \"../../_services/problems.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {KeypressUtils} from \"../../_util/keypress.util\";\n\n@Component({\n    selector: \"validation-problem\",\n    templateUrl: \"validation-problem.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidationProblemComponent extends AbstractBaseComponent {\n\n    protected _model: Node;\n    @Input()\n    set model(model: Node) {\n        if (model !== this._model) {\n            this._problems = undefined;\n        }\n        this._model = model;\n    }\n    get model(): Node {\n        return this._model;\n    }\n    @Input() property: string;\n    @Input() code: string;\n    @Input() shallow: boolean;\n    @Input() debug: boolean;\n\n    private _open: boolean = false;\n    public left: string;\n    public top: string;\n\n    private _problems: ValidationProblem[] = undefined;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private problemsService: ProblemsService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        console.info(\"[ValidationProblemComponent] Invalidating cache.\");\n        this._problems = undefined;\n    }\n\n    @HostListener(\"document:click\", [\"$event\"])\n    public onDocumentClick(event: MouseEvent): void {\n        if (this._open) {\n            this.close();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    @HostListener(\"window:resize\", [\"$event\"])\n    public onWindowResize(event: MouseEvent): void {\n        if (this._open) {\n            this.close();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    public hasProblems(): boolean {\n        if (!this.model) {\n            return false;\n        }\n        if (this.debug) {\n            console.info(\"PROBLEMS?  Model: \", this.model);\n            console.info(\"            Prop: \", this.property);\n            console.info(\"         Shallow: \", this.shallow);\n            console.info(\"                : \", this.validationProblems());\n        }\n        return this.validationProblems().length > 0;\n    }\n\n    public validationProblems(): ValidationProblem[] {\n        if (this._problems === undefined) {\n            if (this._model) {\n\n                if (this.debug) {\n                    console.info(\"Getting the list of problems!\");\n                }\n\n                let props: string[] = this.property ? [this.property] : null;\n                let codes: string[] = this.code ? [this.code] : null;\n                let finder: ProblemFinder = new ProblemFinder(props, codes);\n\n                if (this.shallow) {\n                    VisitorUtil.visitNode(this.model, finder);\n                } else {\n                    VisitorUtil.visitTree(this.model, finder, TraverserDirection.down);\n                }\n\n                this._problems = finder.getProblems();\n            } else {\n                this._problems = [];\n            }\n        }\n        return this._problems;\n    }\n\n    public icon(): string {\n        let problems: ValidationProblem[] = this.validationProblems();\n        let maxSeverity: ValidationProblemSeverity = null;\n        problems.forEach( problem => {\n            if (maxSeverity === null || problem.severity > maxSeverity) {\n                maxSeverity = problem.severity;\n            }\n        });\n        switch (maxSeverity) {\n            case ValidationProblemSeverity.low:\n                return \"pficon-info\";\n            case ValidationProblemSeverity.medium:\n                return \"pficon-warning-triangle-o\";\n            case ValidationProblemSeverity.high:\n                return \"pficon-error-circle-o\";\n            default:\n                return \"\";\n        }\n    }\n\n    public iconFor(problem: ValidationProblem): string {\n        switch (problem.severity) {\n            case ValidationProblemSeverity.low:\n                return \"pficon-info\";\n            case ValidationProblemSeverity.medium:\n                return \"pficon-warning-triangle-o\";\n            case ValidationProblemSeverity.high:\n                return \"pficon-error-circle-o\";\n            default:\n                return \"\";\n        }\n    }\n\n    public summaryFor(problem: ValidationProblem): string {\n        return this.problemsService.summary(problem);\n    }\n\n    public open(event: MouseEvent): void {\n        this.left = event.clientX + \"px\";\n        this.top = event.clientY + \"px\";\n        event.preventDefault();\n        event.stopPropagation();\n        this._open = true;\n    }\n\n    public close(): void {\n        this._open = false;\n    }\n\n    public isOpen(): boolean {\n        return this._open;\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.close();\n        }\n    }\n}\n","<span (window:keydown)=\"onGlobalKeyDown($event)\" *ngIf=\"hasProblems()\">\n    <a class=\"validation-problem-icon\" (click)=\"open($event)\"><span class=\"pficon {{ icon() }}\"></span></a>\n</span>\n<div *ngIf=\"isOpen()\" class=\"validation-problems-panel\" [style.left]=\"left\" [style.top]=\"top\">\n    <div class=\"problem\" *ngFor=\"let problem of validationProblems()\">\n        <span class=\"pficon {{ iconFor(problem) }}\" title=\"{{ problem.errorCode }}\"></span>\n        {{ summaryFor(problem) }}\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, Component, EventEmitter, Input, Output, ViewEncapsulation} from \"@angular/core\";\n\n\n@Component({\n    selector: \"no-operation\",\n    templateUrl: \"no-operation.component.html\",\n    styleUrls: [ \"no-operation.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NoOperationComponent {\n\n    @Input() method: string;\n    @Output() add: EventEmitter<void> = new EventEmitter<void>();\n\n}\n","<div class=\"blank-slate-pf\" id=\"no-operation\">\n    <div class=\"blank-slate-pf-icon\">\n        <span class=\"pficon pficon pficon-add-circle-o\"></span>\n    </div>\n    <h1>Operation Not Defined</h1>\n    <p>\n        This operation is not yet defined.  If you want this path/endpoint to support the operation, get\n        started by clicking the <strong>Add Operation</strong> button below.\n    </p>\n    <div class=\"blank-slate-pf-main-action\">\n        <button class=\"btn btn-primary btn-lg\" (click)=\"add.emit()\">Add Operation</button>\n    </div>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    AfterViewInit,\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    Output,\n    QueryList,\n    ViewChildren,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandFactory, Document, DocumentType, ICommand, ValidationProblem} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../_util/model.util\";\nimport {SelectionService} from \"../_services/selection.service\";\nimport {CommandService} from \"../_services/command.service\";\nimport {AbstractBaseComponent} from \"./common/base-component\";\nimport {DocumentService} from \"../_services/document.service\";\nimport {KeypressUtils} from \"../_util/keypress.util\";\n\n\n/**\n * The component that models the editor's Title Bar.  The title bar shows the title of the\n * API (and allows the title to be edited).  It also shows the notification icon (the Bell icon)\n * which activates when there are validation problems detected.\n */\n@Component({\n    selector: \"title-bar\",\n    templateUrl: \"title-bar.component.html\",\n    styleUrls: [ \"title-bar.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditorTitleBarComponent extends AbstractBaseComponent implements AfterViewInit {\n\n    @Input() document: Document;\n    @Input() validationErrors: ValidationProblem[];\n    @Input() undoableCommandCount: number;\n    @Input() redoableCommandCount: number;\n    @Output() onUndoClick: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() onRedoClick: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() onConfigureValidation: EventEmitter<void> = new EventEmitter<void>();\n\n    filterCriteria: string = null;\n\n    public showProblems: boolean = false;\n    public editMode: boolean = false;\n\n    public newTitle: string;\n\n    @ViewChildren(\"newtitle\") titleInput: QueryList<ElementRef>;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService, private commandService: CommandService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngAfterViewInit(): void {\n        this.titleInput.changes.subscribe(changes => {\n            if (changes.last) {\n                setTimeout(() => {\n                    changes.last.nativeElement.focus();\n                    changes.last.nativeElement.select();\n                }, 10);\n            }\n        });\n    }\n\n    public onInputKeypress(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.cancel();\n        }\n    }\n\n    public editTitle(): void {\n        this.showProblems = false;\n        if (this.document && this.document.info && this.document.info.title) {\n            this.newTitle = this.document.info.title;\n        } else {\n            this.newTitle = \"\";\n        }\n        this.editMode = true;\n    }\n\n    public cancel(): void {\n        this.editMode = false;\n    }\n\n    public save(): void {\n        this.editMode = false;\n        console.info(\"[EditorTitleBarComponent] User changed the title to: \" + this.newTitle);\n        let command: ICommand = CommandFactory.createChangeTitleCommand(this.newTitle);\n        this.commandService.emit(command);\n    }\n\n    public isOAI30(): boolean {\n        return this.document.getDocumentType() === DocumentType.openapi3;\n    }\n\n    public isAAI20(): boolean {\n        return this.document.getDocumentType() === DocumentType.asyncapi2;\n    }\n\n    public isSwagger2(): boolean {\n        return this.document.getDocumentType() === DocumentType.openapi2;\n    }\n\n    /**\n     * Called when the user selects the main/default element from the master area.\n     */\n    public selectMain(): void {\n        this.selectionService.selectRoot();\n    }\n\n    /**\n     * Returns the classes that should be applied to the \"main\" selection item.\n     */\n    public mainClasses(): string {\n        let classes: string[] = [];\n        if (this.isMainSelected()) {\n            classes.push(\"selected\");\n        }\n        if (this.isOAI30()) {\n            classes.push(\"oai30\");\n        }\n        if (this.isSwagger2()) {\n            classes.push(\"oai20\");\n        }\n        if (this.isAAI20()) {\n            classes.push(\"aai20\");\n        }\n        if (this.showProblems) {\n            classes.push(\"expanded\");\n        }\n        return classes.join(' ');\n    }\n\n    /**\n     * Returns true if the main node should be selected.\n     */\n    public isMainSelected(): boolean {\n        return ModelUtils.isSelected(this.document);\n    }\n\n    /**\n     * Called when the user clicks somewhere in the document.  Used to close the context\n     * menu if it is open.\n     */\n    @HostListener(\"document:click\", [])\n    public onDocumentClick(): void {\n    }\n\n    /**\n     * Returns the title of the API.\n     */\n    public title(): string {\n        if (this.hasTitle()) {\n            return this.document.info.title;\n        }\n        return \"No API Title\";\n    }\n\n    /**\n     * Returns true if the API has a title.\n     */\n    public hasTitle(): boolean {\n        if (this.document && this.document.info && this.document.info.title) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Called when the user clicks the Bell icon to show the list of problems.\n     */\n    public toggleProblemDrawer(): void {\n        this.showProblems = !this.showProblems;\n    }\n\n    /**\n     * Returns true if there are problems to report.\n     */\n    private hasProblems(): boolean {\n        return this.validationErrors && this.validationErrors.length > 0;\n    }\n\n    /**\n     * Called to close the problem drawer.\n     */\n    public closeProblemDrawer(): void {\n        this.showProblems = false;\n    }\n}\n","<!-- Visual Mode -->\n<div class=\"editor-title-bar {{ mainClasses() }}\" *ngIf=\"!editMode\">\n    <h1 [class.no-title]=\"!hasTitle()\" (click)=\"selectMain()\">\n        <span>{{ title() }}</span>\n        <a class=\"editor-title-bar-edit\" (click)=\"editTitle()\"><span class=\"fa fa-fw fa-pencil\"></span></a>\n    </h1>\n    <undo-icon (onClick)=\"onUndoClick.emit(true)\" [commandStackCount]=\"undoableCommandCount\"></undo-icon>\n    <redo-icon (onClick)=\"onRedoClick.emit(true)\" [commandStackCount]=\"redoableCommandCount\"></redo-icon>\n    <validation-icon [validationErrors]=\"validationErrors\" (onClick)=\"toggleProblemDrawer()\"></validation-icon>\n</div>\n<!-- Edit Mode -->\n<div class=\"editor-title-bar editing {{ mainClasses() }}\" *ngIf=\"editMode\" >\n    <form #editform=\"ngForm\" name=\"title-edit-form\" class=\"title-editor-form\" (submit)=\"save()\">\n        <input #newtitle required [(ngModel)]=\"newTitle\" type=\"text\" class=\"form-control title-editor-input\"\n               name=\"title-input\" autocomplete=\"off\" required (keypress)=\"onInputKeypress($event)\">\n        <div class=\"edit-buttons\">\n            <button title=\"Save changes.\" [disabled]=\"!editform.form.valid\" class=\"btn btn-primary btn-save\" type=\"submit\">\n                <i class=\"glyphicon glyphicon-ok\"></i>\n            </button>\n            <button title=\"Cancel changes.\" class=\"btn btn-default btn-cancel\" (click)=\"cancel()\">\n                <i class=\"glyphicon glyphicon-remove\"></i>\n            </button>\n        </div>\n    </form>\n</div>\n<problem-drawer *ngIf=\"showProblems\" [validationErrors]=\"validationErrors\"\n                (onConfigureValidation)=\"onConfigureValidation.emit()\"\n                (close)=\"closeProblemDrawer()\"></problem-drawer>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, ViewEncapsulation} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    Oas30Example, Oas30Header,\n    Oas30Schema,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {EditExampleEvent} from \"../../dialogs/edit-example.component\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\n\n\n@Component({\n    selector: \"header-row\",\n    templateUrl: \"header-row.component.html\",\n    styleUrls: [ \"header-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderRowComponent extends AbstractRowComponent<Oas30Header, SimplifiedType> {\n\n    /**\n     * Constructor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        this._model = SimplifiedType.fromSchema(this.item.schema);\n    }\n\n    public isEditingExamples(): boolean {\n        return this.isEditingTab(\"examples\");\n    }\n\n    public isEditingHeader(): boolean {\n        return this.isEditingTab(\"header\");\n    }\n\n    public toggleExamples(): void {\n        this.toggleTab(\"examples\");\n    }\n\n    public toggleHeader(): void {\n        this.toggleTab(\"header\");\n    }\n\n    public delete(): void {\n        console.info(\"[HeaderRowComponent] Deleting request body media type: \" + this.item.getName());\n        let command: ICommand = CommandFactory.createDeleteHeaderCommand(this.item);\n        this.commandService.emit(command);\n    }\n\n    public displayExamples(): string {\n        if (this.headerHasExamples()) {\n            return `${this.headerExamples().length} example(s) defined.`;\n        } else {\n            return \"No examples defined.\"\n        }\n    }\n\n    public displayType(): SimplifiedType {\n        return SimplifiedType.fromSchema(this.item.schema);\n    }\n\n    public exampleValue(example: Oas30Example): string {\n        let evalue: any = example.value;\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeHeaderTypeCommand(this.item, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n    public headerExamples(): Oas30Example[] {\n        return <any>this.item.getExamples();\n    }\n\n    public headerHasExamples(): boolean {\n        return this.headerExamples().length > 0;\n    }\n\n    public addExample(exampleData: any): void {\n        let command: ICommand = CommandFactory.createAddExampleCommand(this.item,\n            exampleData.value, exampleData.name, null, null);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.item);\n        nodePath.appendSegment(\"examples\", false);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public changeExampleSummary(example: Oas30Example, summary: string): void {\n    }\n\n    public changeExampleDescription(example: Oas30Example, description: string): void {\n    }\n\n    public deleteExample(example: Oas30Example): void {\n        console.info(\"[HeaderRowComponent] Deleting an example of a header.\");\n        let command: ICommand = CommandFactory.createDeleteExampleCommand(example);\n        this.commandService.emit(command);\n    }\n\n    public deleteAllExamples(): void {\n        let command: ICommand = CommandFactory.createDeleteAllExamplesCommand(this.item.getMediaType(this.item.getName()));\n        this.commandService.emit(command);\n    }\n\n    public editExample(event: EditExampleEvent): void {\n        console.info(\"[HeaderRowComponent] Changing the value of a Header example.\");\n        let command: ICommand = CommandFactory.createSetExampleCommand(this.item.ownerDocument().getDocumentType(), this.item,\n            event.value, event.example.getName());\n        this.commandService.emit(command);\n    }\n\n    public schemaForExample(): Oas30Schema {\n        return this.item.schema;\n    }\n}\n","<div class=\"http-header\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"fa fa-fw fa-file-o\"></span>\n            <span title=\"{{ item.getName() }}\">{{ item.getName() }}</span>\n        </div>\n        <div class=\"aa-header\" (click)=\"toggleHeader()\" [class.selected]=\"isEditingHeader()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingHeader()\"></span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"examples\" (click)=\"toggleExamples()\" [class.selected]=\"isEditingExamples()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingExamples()\"></span>\n            <span [class.empty]=\"!headerHasExamples()\">{{ displayExamples() }}</span>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"mt-content\" *ngIf=\"isEditingHeader()\">\n                        <div class=\"hr-header\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"false\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                    <div class=\"hr-examples\" *ngIf=\"isEditingExamples()\">\n                        <div class=\"form-label\">Examples</div>\n                        <signpost *ngIf=\"!headerHasExamples()\">\n                            <span>No examples have been defined.</span>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </signpost>\n                        <div *ngIf=\"headerHasExamples()\">\n                            <table class=\"table table-striped table-bordered table-examples\">\n                                <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th class=\"pre-actions\">Example</th>\n                                    <th class=\"actions\"></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let example of headerExamples()\">\n                                    <td class=\"name\">\n                                        <validation-problem [model]=\"example\"></validation-problem>\n                                        <span>{{ example.getName() }}</span>\n                                    </td>\n                                    <td class=\"value pre-actions\">\n                                        <span>{{ exampleValue(example) }}</span>\n                                    </td>\n                                    <td class=\"actions\">\n                                        <div>\n                                            <icon-button (onClick)=\"deleteExample(example)\" [pullRight]=\"true\" type=\"delete\"\n                                                         [title]=\"'Delete example.'\"></icon-button>\n                                            <icon-button (onClick)=\"editExampleDialog.open(example)\" [pullRight]=\"true\" type=\"edit\"\n                                                         [title]=\"'Edit example.'\"></icon-button>\n                                        </div>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                            <a (click)=\"deleteAllExamples()\" class=\"pull-right\">Delete all examples</a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<add-example-dialog #addExampleDialog (onAdd)=\"addExample($event)\" [schema]=\"schemaForExample()\"></add-example-dialog>\n<edit-example-dialog #editExampleDialog (onEdit)=\"editExample($event)\" [schema]=\"schemaForExample()\"></edit-example-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Oas20SchemaDefinition, Oas30SchemaDefinition, Aai20SchemaDefinition, CombinedVisitorAdapter} from \"@apicurio/data-models\";\n\n/**\n * Visitor used to find schema definitions.\n */\nexport class FindSchemaDefinitionsVisitor extends CombinedVisitorAdapter {\n\n    schemaDefinitions: (Oas20SchemaDefinition|Oas30SchemaDefinition)[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria\n     */\n    constructor(private filterCriteria: string|((node:Oas20SchemaDefinition|Oas30SchemaDefinition) => boolean)) {\n        super();\n    }\n\n    /**\n     * Called when a schema definition is visited.\n     * @param node\n     */\n    visitSchemaDefinition(node: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n        if (this.acceptThroughFilter(node)) {\n            this.schemaDefinitions.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the path items.\n     */\n    public getSortedSchemaDefinitions(): (Oas20SchemaDefinition | Oas30SchemaDefinition)[] {\n        return this.schemaDefinitions.sort( (def1, def2) => {\n            let name1: string = FindSchemaDefinitionsVisitor.definitionName(def1);\n            let name2: string = FindSchemaDefinitionsVisitor.definitionName(def2);\n            return name1.localeCompare(name2);\n        });\n    }\n\n    /**\n     * Figures out the definition name regardless of the version of the model.\n     * @param definition\n     */\n    public static definitionName(definition: Oas20SchemaDefinition|Oas30SchemaDefinition): string {\n        return definition.getName();\n    }\n\n    /**\n     * Returns true if the given node is accepted by the current filter criteria.\n     * @param node\n     */\n    private acceptThroughFilter(node: Oas20SchemaDefinition | Oas30SchemaDefinition): boolean {\n        //console.info(\"Accepting: %s through filter: %s\", name, this.filterCriteria);\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        const name: string = node.getName();\n        if (typeof this.filterCriteria == \"string\") {\n            return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n        } else {\n            return this.filterCriteria(node);\n        }\n    }\n\n}\n\nexport class FindAaiSchemaDefinitionsVisitor extends CombinedVisitorAdapter {\n\n    schemaDefinitions: Aai20SchemaDefinition[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria can be a string or a function callback\n     */\n    constructor(private filterCriteria: string|((node:Aai20SchemaDefinition) => boolean)) {\n        super();\n    }\n\n    /**\n     * Called when a schema definition is visited.\n     * @param node\n     */\n    visitSchemaDefinition(node: Aai20SchemaDefinition): void {\n        if (this.acceptThroughFilter(node)) {\n            this.schemaDefinitions.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the path items.\n     */\n    public getSortedSchemaDefinitions(): Aai20SchemaDefinition[] {\n        return this.schemaDefinitions.sort( (def1, def2) => {\n            let name1: string = FindAaiSchemaDefinitionsVisitor.definitionName(def1);\n            let name2: string = FindAaiSchemaDefinitionsVisitor.definitionName(def2);\n            return name1.localeCompare(name2);\n        });\n    }\n\n    /**\n     * Figures out the definition name regardless of the version of the model.\n     * @param definition\n     */\n    public static definitionName(definition: Aai20SchemaDefinition): string {\n        return definition.getName();\n    }\n\n    /**\n     * Returns true if the given node is accepted by the current filter criteria.\n     * @param node\n     */\n    private acceptThroughFilter(node: Aai20SchemaDefinition): boolean {\n        //console.info(\"Accepting: %s through filter: %s\", name, this.filterCriteria);\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        const name: string = node.getName();\n        if (typeof this.filterCriteria == \"string\") {\n            return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n        } else {\n            return this.filterCriteria(node);\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NgModule} from \"@angular/core\";\n\nimport {CommonModule} from \"@angular/common\";\nimport {FormsModule} from \"@angular/forms\";\nimport {BsDropdownModule} from 'ngx-bootstrap/dropdown';\nimport {ModalModule} from 'ngx-bootstrap/modal';\n\nimport {ValidationIconComponent} from \"./editor/_components/title-bar/validation-icon.component\";\nimport {ServerUrlComponent} from \"./editor/_components/common/server-url.component\";\nimport {SearchComponent} from \"./editor/_components/common/search.component\";\nimport {SchemaTypeComponent} from \"./editor/_components/common/schema-type.component\";\nimport {PathItemComponent} from \"./editor/_components/common/path-item.component\";\nimport {ContextHelpComponent} from \"./editor/_components/common/context-help.component\";\nimport {SetLicenseDialogComponent} from \"./editor/_components/dialogs/set-license.component\";\nimport {AddTagDialogComponent} from \"./editor/_components/dialogs/add-tag.component\";\nimport {CloneDefinitionDialogComponent} from \"./editor/_components/dialogs/clone-definition.component\";\nimport {ClonePathDialogComponent} from \"./editor/_components/dialogs/clone-path.component\";\nimport {PropertyRowComponent} from \"./editor/_components/forms/definition/property-row.component\";\nimport {OneOfRowComponent} from \"./editor/_components/forms/definition/oneof-row.component\";\nimport {ServersSectionComponent} from \"./editor/_components/forms/shared/servers-section.component\";\nimport {DefinitionItemComponent} from \"./editor/_components/forms/definition-item.component\";\nimport {DefinitionFormComponent} from \"./editor/_components/forms/definition-form.component\";\nimport {PathFormComponent} from \"./editor/_components/forms/path-form.component\";\nimport {ChannelFormComponent} from \"./editor/_components/forms/channel-form.component\";\nimport {MessageTraitFormComponent} from \"./editor/_components/forms/messagetrait-form.component\";\nimport {MessageFormComponent} from \"./editor/_components/forms/message-form.component\";\nimport {MessageItemComponent} from \"./editor/_components/forms/message-item.component\";\nimport {MessageTraitItemComponent} from \"./editor/_components/forms/messagetrait-item.component\";\nimport {OperationTraitFormComponent} from \"./editor/_components/forms/operationtrait-form.component\";\nimport {OperationTraitItemComponent} from \"./editor/_components/forms/operationtrait-item.component\";\nimport {EditorMasterComponent} from \"./editor/_components/master.component\";\nimport {AsyncApiEditorMasterComponent} from \"./editor/_components/aaimaster.component\";\nimport {OaiEditorComponent} from \"./editor/oaieditor.component\";\nimport {AddPathDialogComponent} from \"./editor/_components/dialogs/add-path.component\";\nimport {AddChannelDialogComponent} from \"./editor/_components/dialogs/add-channel.component\";\nimport {AddResponseDialogComponent} from \"./editor/_components/dialogs/add-response.component\";\nimport {CloneResponseDialogComponent} from \"./editor/_components/dialogs/clone-response.component\";\nimport {MainFormComponent} from \"./editor/_components/forms/main-form.component\";\nimport {AsyncApiMainFormComponent} from \"./editor/_components/forms/aaimain-form.component\";\nimport {AddMediaTypeDialogComponent} from \"./editor/_components/dialogs/add-media-type.component\";\nimport {AddExampleDialogComponent} from \"./editor/_components/dialogs/add-example.component\";\nimport {EditExampleDialogComponent} from \"./editor/_components/dialogs/edit-example.component\";\nimport {AddExample20DialogComponent} from \"./editor/_components/dialogs/add-example-20.component\";\nimport {EditExample20DialogComponent} from \"./editor/_components/dialogs/edit-example-20.component\";\nimport {AddAsyncApiExampleDialogComponent} from \"./editor/_components/dialogs/add-aai-example.component\";\nimport {EditAsyncApiExampleDialogComponent} from \"./editor/_components/dialogs/edit-aai-example.component\";\nimport {ProblemsService} from \"./editor/_services/problems.service\";\nimport {SelectionService} from \"./editor/_services/selection.service\";\nimport {LicenseService} from \"./editor/_services/license.service\";\nimport {IconButtonComponent} from \"./editor/_components/common/icon-button.component\";\nimport {SignpostComponent} from \"./editor/_components/common/signpost.component\";\nimport {EditorTitleBarComponent} from \"./editor/_components/title-bar.component\";\nimport {EditorProblemDrawerComponent} from \"./editor/_components/problem-drawer.component\";\nimport {InfoSectionComponent} from \"./editor/_components/forms/main/info-section.component\";\nimport {AsyncApiInfoSectionComponent} from \"./editor/_components/forms/main/aaiinfo-section.component\";\nimport {CommandService} from \"./editor/_services/command.service\";\nimport {ValidationProblemComponent} from \"./editor/_components/common/validation-problem.component\";\nimport {ValidationAggregateComponent} from \"./editor/_components/common/validation-aggregate.component\";\nimport {ContactSectionComponent} from \"./editor/_components/forms/main/contact-section.component\";\nimport {AsyncApiContactSectionComponent} from \"./editor/_components/forms/main/aaicontact-section.component\";\nimport {LicenseSectionComponent} from \"./editor/_components/forms/main/license-section.component\";\nimport {AsyncApiLicenseSectionComponent} from \"./editor/_components/forms/main/aailicense-section.component\";\nimport {TagsSectionComponent} from \"./editor/_components/forms/main/tags-section.component\";\nimport {SecurityRequirementsSectionComponent} from \"./editor/_components/forms/shared/security-requirements-section.component\";\nimport {SecuritySchemesSectionComponent} from \"./editor/_components/forms/main/security-schemes-section.component\";\nimport {PathParamsSectionComponent} from \"./editor/_components/forms/shared/path-params-section.component\";\nimport {QueryParamsSectionComponent} from \"./editor/_components/forms/shared/query-params-section.component\";\nimport {HeaderParamsSectionComponent} from \"./editor/_components/forms/shared/header-params-section.component\";\nimport {DocumentService} from \"./editor/_services/document.service\";\nimport {PfInlineTextEditorComponent} from \"./editor/_components/common/pf-inline-text-editor.component\";\nimport {TagRowComponent} from \"./editor/_components/forms/main/tag-row.component\";\nimport {ServerEditorComponent} from \"./editor/_components/editors/server-editor.component\";\nimport {EditorsService} from \"./editor/_services/editors.service\";\nimport {ServerRowComponent} from \"./editor/_components/forms/shared/server-row.component\";\nimport {UndoIconComponent} from \"./editor/_components/title-bar/undo-icon.component\";\nimport {RedoIconComponent} from \"./editor/_components/title-bar/redo-icon.component\";\nimport {InlineArrayEditorComponent} from \"./editor/_components/common/inline-array-editor.component\";\nimport {SecuritySchemeRowComponent} from \"./editor/_components/forms/main/security-scheme-row.component\";\nimport {SecuritySchemeEditorComponent} from \"./editor/_components/editors/security-scheme-editor.component\";\nimport {SecurityRequirementEditorComponent} from \"./editor/_components/editors/security-requirement-editor.component\";\nimport {EntityEditorComponent} from \"./editor/_components/editors/entity-editor.component\";\nimport {QueryParamRowComponent} from \"./editor/_components/forms/shared/query-param-row.component\";\nimport {PathParamRowComponent} from \"./editor/_components/forms/shared/path-param-row.component\";\nimport {HeaderParamRowComponent} from \"./editor/_components/forms/shared/header-param-row.component\";\nimport {InlineMarkdownEditorComponent} from \"./editor/_components/common/inline-markdown-editor.component\";\nimport {DataTypeEditorComponent} from \"./editor/_components/editors/data-type-editor.component\";\nimport {DefinitionInfoSectionComponent} from \"./editor/_components/forms/definition/info-section.component\";\nimport {RestResourceService} from \"./editor/_services/rest-resource.service\";\nimport {RenamePathDialogComponent} from \"./editor/_components/dialogs/rename-path.component\";\nimport {CounterComponent} from \"./editor/_components/common/counter.component\";\nimport {InlineExampleEditorComponent} from \"./editor/_components/common/inline-example-editor.component\";\nimport {DefinitionExampleSectionComponent} from \"./editor/_components/forms/definition/example-section.component\";\nimport {PathInfoSectionComponent} from \"./editor/_components/forms/path/info-section.component\";\nimport {ChannelInfoSectionComponent} from \"./editor/_components/forms/channel/info-section.component\";\nimport {ParameterEditorComponent} from \"./editor/_components/editors/parameter-editor.component\";\nimport {PropertyEditorComponent} from \"./editor/_components/editors/property-editor.component\";\nimport {SchemaTypeEditorComponent} from \"./editor/_components/forms/shared/schema-type-editor.component\";\nimport {OperationsSectionComponent} from \"./editor/_components/forms/path/operations-section.component\";\nimport {ChannelOperationsSectionComponent} from \"./editor/_components/forms/channel/operations-section.component\";\nimport {OperationInfoSectionComponent} from \"./editor/_components/forms/path/operation/info-section.component\";\nimport {ChannelOperationInfoSectionComponent} from \"./editor/_components/forms/channel/operation/info-section.component\";\nimport {MessageSectionComponent} from \"./editor/_components/forms/channel/operation/message-section.component\";\nimport {PayloadTabComponent} from \"./editor/_components/forms/channel/operation/payload-tab.component\";\nimport {HeadersTabComponent} from \"./editor/_components/forms/channel/operation/headers-tab.component\";\nimport {NoOperationComponent} from \"./editor/_components/forms/path/operation/no-operation.component\";\nimport {SectionComponent} from \"./editor/_components/forms/shared/section.component\";\nimport {RequestBodySectionComponent} from \"./editor/_components/forms/path/operation/requestBody-section.component\";\nimport {FormDataParamRowComponent} from \"./editor/_components/forms/path/operation/formData-param-row.component\";\nimport {ContentComponent} from \"./editor/_components/forms/path/operation/content.component\";\nimport {ResponsesSectionComponent} from \"./editor/_components/forms/path/operation/responses-section.component\";\nimport {ScopesInputComponent} from \"./editor/_components/common/scopes-input.component\";\nimport {ResponseTabComponent} from \"./editor/_components/forms/path/operation/response-tab.component\";\nimport {ResponseTab30Component} from \"./editor/_components/forms/path/operation/response-tab-30.component\";\nimport {MediaTypeRowComponent} from \"./editor/_components/forms/shared/media-type-row.component\";\nimport {FeaturesService} from \"./editor/_services/features.service\";\nimport {CollaboratorAggregateComponent} from \"./editor/_components/common/collaborator-aggregate.component\";\nimport {CollaboratorService} from \"./editor/_services/collaborator.service\";\nimport {CollaboratorOverlayComponent} from \"./editor/_components/common/collaborator-overlay.component\";\nimport {RenameEntityDialogComponent} from \"./editor/_components/dialogs/rename-entity.component\";\nimport {CookieParamsSectionComponent} from \"./editor/_components/forms/shared/cookie-params-section.component\";\nimport {CookieParamRowComponent} from \"./editor/_components/forms/shared/cookie-param-row.component\";\nimport {ResponseEditorComponent} from \"./editor/_components/editors/response-editor.component\";\nimport {OperationTraitEditorComponent} from \"./editor/_components/editors/operationtrait-editor.component\";\nimport {MessageTraitEditorComponent} from \"./editor/_components/editors/messagetrait-editor.component\";\nimport {ResponseItemComponent} from \"./editor/_components/forms/response-item.component\";\nimport {ResponseFormComponent} from \"./editor/_components/forms/response-form.component\";\nimport {CloneResponseDefinitionDialogComponent} from \"./editor/_components/dialogs/clone-response-definition.component\";\nimport {AaiEditorComponent} from \"./editor/aaieditor.component\";\nimport {PropertiesSectionComponent} from \"./editor/_components/forms/definition/properties-section.component\";\nimport {InheritanceSchemasSectionComponent} from \"./editor/_components/forms/definition/schemas-section.component\";\nimport {SchemaRowComponent} from \"./editor/_components/forms/definition/schema-row.component\";\nimport {AddSchemaDialogComponent} from \"./editor/_components/dialogs/add-schema.component\";\nimport {ApiCatalogService} from \"./editor/_services/api-catalog.service\";\nimport {CheckBoxInputComponent} from \"./editor/_components/common/checkbox-input.component\";\nimport {AaiServersSectionComponent} from \"./editor/_components/forms/shared/aaiservers-section.component\";\nimport {AaiServerEditorComponent} from \"./editor/_components/editors/aaiserver-editor.component\";\nimport {AaiServerRowComponent} from \"./editor/_components/forms/shared/aaiserver-row.component\";\nimport {AaiSecuritySchemesSectionComponent} from \"./editor/_components/forms/main/aaisecurity-schemes-section.component\";\nimport {AaiSecurityRequirementRowComponent} from \"./editor/_components/forms/shared/aaisecurity-requirement-row.component\";\nimport {HttpHeadersComponent} from \"./editor/_components/forms/path/operation/http-headers.component\";\nimport {HeaderRowComponent} from \"./editor/_components/forms/shared/header-row.component\";\nimport {AddHeaderDialogComponent} from \"./editor/_components/dialogs/add-header.component\";\nimport {CloneChannelDialogComponent} from \"./editor/_components/dialogs/clone-channel.component\";\nimport {MessageEditorComponent} from \"./editor/_components/editors/message-editor.component\";\nimport {OneOfInMessageEditorComponent} from \"./editor/_components/editors/oneof-in-message-editor.component\";\nimport {AddOneOfInMessageDialogComponent} from \"./editor/_components/dialogs/add-message-reference.component\";\nimport {ExtensionsSectionComponent} from \"./editor/_components/forms/shared/extensions-section.component\";\nimport {ExtensionRowComponent} from \"./editor/_components/forms/shared/extension-row.component\";\nimport {JsonSummaryComponent} from \"./editor/_components/common/json-summary.component\";\nimport {InlineJsonEditorComponent} from \"./editor/_components/common/inline-json-editor.component\";\nimport {AddExtensionDialogComponent} from \"./editor/_components/dialogs/add-extension.component\";\nimport {DropDownComponent} from './editor/_components/common/drop-down.component';\nimport {FormErrorMessageComponent} from \"./editor/_components/common/form-error-message.component\";\nimport {CodeEditorComponent} from \"./editor/_components/common/code-editor.component\";\nimport {AceEditorComponent} from \"./editor/_components/common/ace-editor.component\";\nimport {DivAutoHeight, TextAreaAutosize, TextBoxAutosize} from \"./editor/_directives/autosize.directive\";\nimport {MarkdownComponent} from \"./editor/_components/common/markdown.component\";\nimport {MarkdownSummaryComponent} from \"./editor/_components/common/markdown-summary.component\";\nimport {MarkdownEditorComponent} from './editor/_components/common/markdown-editor.component';\n\n@NgModule({\n    imports: [\n        CommonModule, FormsModule, ModalModule, BsDropdownModule\n    ],\n    declarations: [\n        ValidationIconComponent, ServerUrlComponent, SearchComponent, SchemaTypeComponent, ResponseItemComponent,\n        PathItemComponent, ContextHelpComponent, InlineMarkdownEditorComponent, OperationInfoSectionComponent,\n        ChannelOperationInfoSectionComponent, MessageSectionComponent, PayloadTabComponent, HeadersTabComponent,\n        SetLicenseDialogComponent, ClonePathDialogComponent, DropDownComponent, FormErrorMessageComponent,\n        CodeEditorComponent, AceEditorComponent, TextAreaAutosize, DivAutoHeight, TextBoxAutosize, MarkdownComponent,\n        MarkdownSummaryComponent, MarkdownEditorComponent, CloneDefinitionDialogComponent, ScopesInputComponent,\n        AddTagDialogComponent, UndoIconComponent, SchemaTypeEditorComponent, NoOperationComponent, ContentComponent,\n        HttpHeadersComponent, PropertyRowComponent, OneOfRowComponent, PathFormComponent, ChannelFormComponent,\n        MessageTraitFormComponent, MessageFormComponent, MessageTraitItemComponent, MessageItemComponent,\n        OperationTraitFormComponent, OperationTraitItemComponent, QueryParamRowComponent, SectionComponent,\n        RequestBodySectionComponent, DefinitionItemComponent, DefinitionFormComponent, FormDataParamRowComponent,\n        ResponseTab30Component, EditorMasterComponent, AsyncApiEditorMasterComponent, AaiEditorComponent,\n        AddPathDialogComponent, AddChannelDialogComponent, AddOneOfInMessageDialogComponent, ParameterEditorComponent,\n        AddResponseDialogComponent, CloneResponseDialogComponent, RedoIconComponent, PathInfoSectionComponent,\n        OperationTraitEditorComponent, ChannelInfoSectionComponent, ResponseTabComponent, AddMediaTypeDialogComponent,\n        AddHeaderDialogComponent, MainFormComponent, AsyncApiMainFormComponent, RenameEntityDialogComponent,\n        AddExampleDialogComponent, EditExampleDialogComponent, AddExample20DialogComponent,\n        AddAsyncApiExampleDialogComponent, EditAsyncApiExampleDialogComponent, EditorTitleBarComponent,\n        EditExample20DialogComponent, IconButtonComponent, SignpostComponent, EditorProblemDrawerComponent,\n        CheckBoxInputComponent, SecurityRequirementEditorComponent, InfoSectionComponent, AsyncApiInfoSectionComponent,\n        ValidationProblemComponent, ValidationAggregateComponent, ContactSectionComponent,\n        AsyncApiContactSectionComponent, LicenseSectionComponent, AsyncApiLicenseSectionComponent,\n        TagsSectionComponent, AaiServersSectionComponent, ServersSectionComponent, AaiSecurityRequirementRowComponent,\n        SecurityRequirementsSectionComponent, SecuritySchemesSectionComponent, AaiSecuritySchemesSectionComponent,\n        PathParamsSectionComponent, QueryParamsSectionComponent, PathParamRowComponent, PfInlineTextEditorComponent,\n        TagRowComponent, AaiServerEditorComponent, ServerEditorComponent, AaiServerRowComponent, ServerRowComponent,\n        EntityEditorComponent, InlineArrayEditorComponent, SecuritySchemeRowComponent, SecuritySchemeEditorComponent,\n        DataTypeEditorComponent, DefinitionInfoSectionComponent, RenamePathDialogComponent, CounterComponent,\n        ResponsesSectionComponent, InlineExampleEditorComponent, DefinitionExampleSectionComponent,\n        PropertyEditorComponent, HeaderParamRowComponent, HeaderParamsSectionComponent, OperationsSectionComponent,\n        ChannelOperationsSectionComponent, MediaTypeRowComponent, HeaderRowComponent, CollaboratorAggregateComponent,\n        CollaboratorOverlayComponent, CookieParamsSectionComponent, CookieParamRowComponent, ResponseEditorComponent,\n        MessageTraitEditorComponent, MessageEditorComponent, OneOfInMessageEditorComponent, ResponseFormComponent,\n        CloneResponseDefinitionDialogComponent, PropertiesSectionComponent, InheritanceSchemasSectionComponent,\n        SchemaRowComponent, AddSchemaDialogComponent, CloneChannelDialogComponent, ExtensionsSectionComponent,\n        ExtensionRowComponent, JsonSummaryComponent, InlineJsonEditorComponent, AddExtensionDialogComponent,\n        OaiEditorComponent\n    ],\n    providers: [\n        ProblemsService, SelectionService, LicenseService, CommandService, DocumentService, EditorsService,\n        RestResourceService, FeaturesService, CollaboratorService, ApiCatalogService\n    ],\n    exports: [\n        OaiEditorComponent, AaiEditorComponent\n    ]\n})\nexport class ApicurioEditorModule {\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {Scope} from \"../../_models/scope.model\";\n\n@Component({\n    selector: \"scopes-input\",\n    templateUrl: \"scopes-input.component.html\",\n    styleUrls: [ \"scopes-input.component.css\" ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScopesInputComponent extends AbstractBaseComponent {\n\n    @Input() scopes: Scope[];\n\n    @Output() onChange: EventEmitter<Scope[]> = new EventEmitter<Scope[]>();\n\n    private scopeIncrement: number;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n        this.scopeIncrement = 1;\n    }\n\n    /**\n     * Called when the user clicks the \"Add Scope\" button.\n     */\n    public addScope(): void {\n        let scopeName: string = \"scope-\" + this.scopeIncrement++;\n        while (this.hasScope(scopeName)) {\n            scopeName = \"scope-\" + this.scopeIncrement++;\n        }\n        this.scopes.push({\n            name: scopeName,\n            description: \"\"\n        });\n    }\n\n    /**\n     * Called to delete a scope.\n     * @param scope\n     */\n    public deleteScope(scope: Scope): void {\n        this.scopes.splice(this.scopes.indexOf(scope), 1);\n    }\n\n    /**\n     * Returns true if the given scope name is present in the list of scopes.\n     * @param scopeName\n     */\n    private hasScope(scopeName: string): boolean {\n        for (let scope of this.scopes) {\n            if (scope.name === scopeName) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n}\n","<div class=\"scopes\">\n    <div class=\"scope\" *ngFor=\"let scope of scopes\">\n        <div class=\"scope-left\">\n            <div class=\"scope-name\">\n                <pf-inline-text-editor [noValueMessage]=\"'No Name'\"\n                                       (onChange)=\"scope.name = $event\"\n                                       [value]=\"scope.name\"></pf-inline-text-editor>\n            </div>\n            <div class=\"scope-description\">\n                <pf-inline-text-editor [noValueMessage]=\"'No description.'\"\n                                       (onChange)=\"scope.description = $event\"\n                                       [value]=\"scope.description\"></pf-inline-text-editor>\n            </div>\n        </div>\n        <div class=\"scope-right\">\n            <button class=\"btn icon-button\" (click)=\"deleteScope(scope)\"\n                    type=\"button\" title=\"Delete scope.\"><span class=\"pficon pficon-delete\"></span></button>\n        </div>\n    </div>\n    <button type=\"button\" class=\"btn btn-default btn-sm\" (click)=\"addScope()\">Add Scope</button>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {Oas20Operation, Oas30Operation} from \"@apicurio/data-models\";\nimport {HttpCodeService} from \"../../_services/httpcode.service\";\nimport {DropDownOption} from \"../common/drop-down.component\";\n\n\n@Component({\n    selector: \"clone-response-dialog\",\n    templateUrl: \"clone-response.component.html\"\n})\nexport class CloneResponseDialogComponent {\n\n    @Output() onClone: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"cloneResponseModal\") addResponseModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    private _statusCode: string = \"\";\n    get statusCode() {\n        return this._statusCode;\n    }\n    set statusCode(code: string) {\n        this._statusCode = code;\n        if (this.codes.indexOf(code) !== -1) {\n            this.codeExists = true;\n        } else {\n            this.codeExists = false;\n        }\n    }\n\n    codes: string[] = [];\n    codeExists: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     * @param parent\n     * @param statusCode\n     */\n    public open(parent: Oas20Operation | Oas30Operation, statusCode?: string): void {\n        this.statusCode = statusCode;\n        if (!statusCode) {\n            this.statusCode = \"\";\n        }\n        this._isOpen = true;\n        this.addResponseModal.changes.subscribe( thing => {\n            if (this.addResponseModal.first) {\n                this.addResponseModal.first.show();\n            }\n        });\n\n        this.codes = [];\n        this.codeExists = false;\n        if (parent.responses) {\n            this.codes = parent.responses.getResponseStatusCodes();\n        }\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.statusCode = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    clone(): void {\n        if (this.isValid()) {\n            this.onClone.emit(this.statusCode);\n            this.cancel();\n        }\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addResponseModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Check to see if the form is valid.\n     */\n    isValid(): boolean {\n        return this.statusCode && !this.codeExists;\n    }\n\n    public getStatusCodeDropDownOptions(): DropDownOption[] {\n        return HttpCodeService.generateDropDownOptions();\n    }\n\n    public getStatusCode(): string {\n        return this.statusCode;\n    }\n\n    public setStatusCode(statusCode: string) {\n        this.statusCode = statusCode;\n    }\n}\n","<!-- Clone Response Dialog -->\n<div bsModal #cloneResponseModal=\"bs-modal\" class=\"modal fade\" id=\"cloneResponseModal\" tabindex=\"-1\" role=\"dialog\"\n     aria-labelledby=\"cloneResponseModalLabel\" role=\"dialog\" aria-hidden=\"true\" (onHidden)=\"close()\" *ngIf=\"isOpen()\"\n     [config]=\"{ backdrop: true }\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"cloneResponseModalLabel\">Clone Response</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter information about the new response below and then click Clone.</p>\n                <form id=\"cloneResponse-form\" class=\"form-horizontal\" (submit)=\"clone()\" #cloneResponseForm=\"ngForm\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-5 control-label required\" for=\"statusCodeDropDown\">Response Status Code</label>\n                        <div class=\"col-sm-7\">\n                            <drop-down id=\"statusCodeDropDown\" [id]=\"'statusCodeDropDown'\"\n                                [options]=\"getStatusCodeDropDownOptions()\"\n                                [value]=\"getStatusCode()\"\n                                (onValueChange)=\"setStatusCode($event)\"\n                                [noSelectionLabel]=\"'Choose HTTP Status Code'\"></drop-down>\n                            <div class=\"form-error-message error\" *ngIf=\"codeExists\">Response with this code already exists.</div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"clone()\" [disabled]=\"!isValid()\">Clone</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {Oas20ResponseDefinition, Oas30ResponseDefinition} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\n@Component({\n    selector: \"[response-item]\",\n    templateUrl: \"response-item.component.html\",\n    styleUrls: [ \"response-item.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResponseItemComponent extends AbstractBaseComponent {\n\n    @Input() response: Oas20ResponseDefinition | Oas30ResponseDefinition;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns the name of the response.\n     */\n    public responseName(): string {\n        return this.response.getName();\n    }\n\n    /**\n     * Gets the node path for the response item.\n     */\n    public asNodePath(): string {\n        return ModelUtils.nodeToPath(this.response);\n    }\n\n    /**\n     * Returns true iff the schema definition is \"imported\".  A definition is imported if it has a $ref\n     * that refers to an external source (anything other than #/ references).\n     */\n    isImported(): boolean {\n        let $ref: string = this.response.$ref;\n        return ($ref && $ref.indexOf(\"#\") != 0);\n    }\n\n}\n","<span class=\"icon fa fa-fw fa-reply-all\"></span>\n<span class=\"name\">{{ responseName() }}</span>\n<span class=\"imported label label-info\" *ngIf=\"isImported()\">Imported</span>\n<collaborator-aggregate [nodePath]=\"asNodePath()\"></collaborator-aggregate>\n<validation-aggregate [models]=\"[response]\"></validation-aggregate>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {Oas20PathItem, Oas30PathItem, OasDocument, TraverserDirection, VisitorUtil} from \"@apicurio/data-models\";\nimport {FindPathItemsVisitor} from \"../../_visitors/path-items.visitor\";\n\n\n@Component({\n    selector: \"rename-path-dialog\",\n    templateUrl: \"rename-path.component.html\",\n    styleUrls: [ \"rename-path.component.css\" ]\n})\nexport class RenamePathDialogComponent {\n\n    @Output() onRename: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"renamePathModal\") renamePathModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    name: string = \"\";\n    path: Oas20PathItem | Oas30PathItem;\n    alsoSubpaths: boolean;\n\n    paths: string[] = [];\n    pathExists: boolean = false;\n    numSubpaths: number = 0;\n\n    /**\n     * Called to open the dialog.\n     * @param path\n     */\n    public open(document: OasDocument, path: Oas20PathItem | Oas30PathItem): void {\n        this._isOpen = true;\n        this.path = path;\n        this.name = path.getPath();\n        this.alsoSubpaths = true;\n\n        this.renamePathModal.changes.subscribe( () => {\n            if (this.renamePathModal.first) {\n                this.renamePathModal.first.show();\n            }\n        });\n\n        this.paths = [];\n        this.pathExists = false;\n        let paths: (Oas20PathItem | Oas30PathItem)[] = this.getPaths(document);\n        paths.forEach( path => {\n            this.paths.push(path.getPath());\n        });\n        this.numSubpaths = this.calculateNumberOfSubpaths(path.getPath());\n    }\n\n    private getPaths(document: OasDocument): (Oas20PathItem | Oas30PathItem)[] {\n        let vizzy: FindPathItemsVisitor = new FindPathItemsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedPathItems() as (Oas20PathItem | Oas30PathItem)[];\n    }\n\n    private calculateNumberOfSubpaths(path: string): number {\n        let rval: number = 0;\n        this.paths.forEach( aPath => {\n            if (aPath.startsWith(path) && aPath !== path) {\n                rval++;\n            }\n        });\n        return rval;\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"rename\".\n     */\n    rename(): void {\n        let data: any = {\n            name: this.name,\n            path: this.path,\n            renameSubpaths: this.alsoSubpaths\n        };\n        this.onRename.emit(data);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.renamePathModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n}\n","<!-- Rename Path Dialog -->\n<div>\n    <div bsModal #renamePathModal=\"bs-modal\" class=\"modal fade\" id=\"renamePathModal\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"renamePathModalLabel\" role=\"dialog\" aria-hidden=\"true\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\"\n         (onShown)=\"renamePathInput.focus()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"renamePathModalLabel\">Rename Path</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter a new path below and then click Rename.</p>\n                    <form id=\"renamepath-form\" class=\"form-horizontal\" #renamePathForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label required\" for=\"pathName\">Path</label>\n                            <div class=\"col-sm-10\">\n                                <input name=\"pathName\" type=\"text\" id=\"pathName\" class=\"form-control\" #renamePathInput\n                                       placeholder=\"Enter a Path Name\" #pathName=\"ngModel\" pattern=\"(\\/[^{}\\/]*(\\{[a-zA-Z_][0-9a-zA-Z_]*\\})?)+\"\n                                       required [(ngModel)]=\"name\" (ngModelChange)=\"pathExists = paths.indexOf($event) != -1\">\n                                <div class=\"form-error-message error\" *ngIf=\"pathExists\">Path already exists.</div>\n                                <form-error-message [inputModel]=\"pathName\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid path.</form-error-message>\n                                <form-error-message [inputModel]=\"pathName\" [type]=\"'required'\">Name is required.</form-error-message>\n                            </div>\n                        </div>\n                        <div class=\"form-group subpath-option\" *ngIf=\"numSubpaths > 0\">\n                            <label class=\"col-sm-2 control-label\"></label>\n                            <div class=\"col-sm-10\">\n                                <input type=\"checkbox\" name=\"alsoSubpaths\" id=\"alsoSubpaths\" [(ngModel)]=\"alsoSubpaths\">\n                                <label for=\"alsoSubpaths\">Also rename <strong>{{ numSubpaths }}</strong> sub-path(s).</label>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"rename()\"\n                            [disabled]=\"!renamePathForm.form.valid || pathExists\">Rename</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {Node} from \"@apicurio/data-models\";\n\n\nexport interface RenameEntityEvent {\n\n    entity: Node;\n    newName: string;\n\n}\n\n\n@Component({\n    selector: \"rename-entity-dialog\",\n    templateUrl: \"rename-entity.component.html\",\n    styleUrls: [ \"rename-entity.component.css\" ]\n})\nexport class RenameEntityDialogComponent {\n\n    @Input() type: string;\n    @Input() title: string;\n    @Input() message: string;\n    @Input() warning: string;\n    @Input() validationPattern: string;\n    @Input() validationError: string;\n    @Output() onRename: EventEmitter<RenameEntityEvent> = new EventEmitter<RenameEntityEvent>();\n\n    @ViewChildren(\"renameEntityModal\") renameEntityModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    private entity: Node;\n    originalName: string;\n    newName: string;\n    private checkExistence: (name: string) => boolean;\n    _alreadyExists: boolean;\n\n    /**\n     * Called to open the dialog.\n     * @param entity\n     * @param name\n     * @param checkExistence\n     */\n    public open(entity: Node, name: string, checkExistence: (name: string) => boolean): void {\n        this._isOpen = true;\n        this.entity = entity;\n        this.originalName = name;\n        this.newName = name;\n        this._alreadyExists = true;\n        this.checkExistence = checkExistence;\n\n        this.renameEntityModal.changes.subscribe( () => {\n            if (this.renameEntityModal.first) {\n                this.renameEntityModal.first.show();\n            }\n        });\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"rename\".\n     */\n    rename(): void {\n        let event: RenameEntityEvent = {\n            entity: this.entity,\n            newName: this.newName\n        };\n        this.onRename.emit(event);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.renameEntityModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Called to validate the new (potential) name.\n     * @param name\n     */\n    validateName(name: string): void {\n        this._alreadyExists = this.checkExistence(name);\n    }\n\n    /**\n     * Returns true if the warning message should be displayed.\n     */\n    shouldShowWarning(): boolean {\n        return this.warning !== null && this.warning !== undefined;\n    }\n\n    /**\n     * Returns true if the message should be displayed.\n     */\n    shouldShowMessage(): boolean {\n        return this.message !== null && this.message !== undefined;\n    }\n\n}\n","<!-- Rename Entity Dialog -->\n<div>\n    <div bsModal #renameEntityModal=\"bs-modal\" class=\"modal fade\" id=\"renameEntityModal\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"renameEntityModalLabel\" role=\"dialog\" aria-hidden=\"true\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\"\n         (onShown)=\"renameEntityInput.focus()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"renameEntityModalLabel\">{{ title }}</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <!-- Warning about what will happen -->\n                    <div class=\"alert alert-info\" *ngIf=\"shouldShowWarning()\">\n                        <span class=\"pficon pficon-info\"></span>\n                        <strong>You should know!</strong>\n                        <span>{{ warning }}</span>\n                    </div>\n                    <!-- Form to enter the new name -->\n                    <p *ngIf=\"shouldShowMessage()\">{{ message }}</p>\n                    <form id=\"renameentity-form\" class=\"form-horizontal\" #renameEntityForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"form-group currentNameGroup\">\n                            <label class=\"col-sm-2 control-label\" for=\"currentName\">Current name</label>\n                            <div class=\"col-sm-10\">\n                                <span id=\"currentName\">{{ originalName }}</span>\n                            </div>\n                        </div>\n                        <div class=\"form-group entityNameGroup\">\n                            <label class=\"col-sm-2 control-label required\" for=\"entityName\">New name</label>\n                            <div class=\"col-sm-10\">\n                                <input name=\"entityName\" type=\"text\" id=\"entityName\" class=\"form-control\" #renameEntityInput\n                                       placeholder=\"Enter a {{ type }} Name\" pattern=\"{{ validationPattern }}\" #defName=\"ngModel\"\n                                       required [(ngModel)]=\"newName\" (ngModelChange)=\"validateName($event)\">\n                                <div class=\"form-error-message error\" *ngIf=\"newName !== originalName && _alreadyExists\">{{ type }} already exists.</div>\n                                <form-error-message [inputModel]=\"defName\" [type]=\"'required'\">Name is required.</form-error-message>\n                                <form-error-message [inputModel]=\"defName\" [type]=\"'pattern'\" [alwaysOn]=\"true\">{{ validationError }}</form-error-message>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"rename()\"\n                            [disabled]=\"!renameEntityForm.form.valid || _alreadyExists\">Rename</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    AaiOperation\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../../_util/model.util\";\n\n\n@Component({\n    selector: \"channel-operation-info-section\",\n    templateUrl: \"info-section.component.html\",\n    styleUrls: [ \"info-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChannelOperationInfoSectionComponent extends AbstractBaseComponent {\n\n    @Input() operation: AaiOperation;\n\n    private _operationInfoPaths: string[];\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this._operationInfoPaths = null;\n    }\n\n    /**\n     * Returns the node paths of all the properties editable in this section.\n     */\n    public operationInfoPaths(): string[] {\n        if (!this._operationInfoPaths) {\n            let basePath: string = ModelUtils.nodeToPath(this.operation);\n            this._operationInfoPaths = [ \"summary\", \"description\", \"operationId\", \"tags\" ].map( prop => {\n                return basePath + \"/\" + prop;\n            });\n        }\n        return this._operationInfoPaths;\n    }\n\n    /**\n     * Called when the user changes the summary.\n     * @param newSummary\n     */\n    public changeSummary(newSummary: string): void {\n        console.info(\"[ChannelOperationInfoSectionComponent] User changed the summary.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"summary\", newSummary);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the description.\n     * @param newDescription\n     */\n    public changeDescription(newDescription: string): void {\n        console.info(\"[ChannelOperationInfoSectionComponent] User changed the description.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the operationId.\n     * @param newOperationId\n     */\n    public changeOperationId(newOperationId: string): void {\n        console.info(\"[ChannelOperationInfoSectionComponent] User changed the operationId.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"operationId\", newOperationId);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the tags.\n     * @param newTags\n     */\n    public changeTags(newTags: string[]): void {\n        console.info(\"[ChannelOperationInfoSectionComponent] User changed the tags.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"tags\", newTags);\n        this.commandService.emit(command);\n    }\n\n    public tagDefs(): ()=>string[] {\n        return ()=> {\n            if (this.operation.ownerDocument().tags && this.operation.ownerDocument().tags.length > 0) {\n                let tagDefs: string[] = this.operation.ownerDocument().tags.map(tagDef => tagDef.name);\n                tagDefs.sort();\n                return tagDefs;\n            } else {\n                return [];\n            }\n        }\n    }\n}\n","<section type=\"info\" label=\"INFO\"\n         contextHelp=\"In this section you can easily edit the Summary, ID, and Description of the Operation.\"\n         [collaborationNodePath]=\"operationInfoPaths()\"\n         [validationModels]=\"[operation]\" [validationShallow]=\"true\" [validationProperties]=\"[ 'operationId', 'summary', 'description' ]\">\n    <span actions></span>\n    <div body>\n        <div class=\"half-section\">\n            <!-- Summary -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'summary'\"></validation-problem>\n                <span>Summary</span>\n            </div>\n            <div class=\"section-field summary\">\n                <pf-inline-text-editor [value]=\"operation.summary\" [noValueMessage]=\"'No Summary'\"\n                                       [labelClass]=\"'api-item-title'\"\n                                       [inputClass]=\"'api-item-editor api-summary-editor api-item-title'\"\n                                       [baseNode]=\"operation\" nodePath=\"summary\"\n                                       (onChange)=\"changeSummary($event)\"></pf-inline-text-editor>\n            </div>\n        </div>\n\n        <div class=\"half-section right\">\n            <!-- Operation ID -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'operationId'\"></validation-problem>\n                <span>Operation ID</span>\n            </div>\n            <div class=\"section-field operationId\">\n                <pf-inline-text-editor [value]=\"operation.operationId\" [noValueMessage]=\"'No Operation ID'\"\n                                       [labelClass]=\"'api-item-operation-id'\"\n                                       [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                       [baseNode]=\"operation\" nodePath=\"operationId\"\n                                       (onChange)=\"changeOperationId($event)\"></pf-inline-text-editor>\n            </div>\n        </div>\n\n        <!-- Description -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'description'\"></validation-problem>\n            <span>Description</span>\n        </div>\n        <div class=\"section-field description\">\n            <inline-markdown-editor [value]=\"operation.description\" [noValueMessage]=\"'No description.'\"\n                                    [labelClass]=\"'api-item-editor api-description-editor operation-description api-item-description'\"\n                                    [inputClass]=\"'api-item-description'\"\n                                    [formClass]=\"'api-description-editor-form'\"\n                                    [baseNode]=\"operation\" nodePath=\"description\"\n                                    (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n        </div>\n\n        <!-- Tags -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'tags'\"></validation-problem>\n            <span>Tags</span>\n        </div>\n        <div class=\"section-field tags\">\n            <inline-array-editor noValueMessage=\"No tags configured.\" [value]=\"operation.tags\" [items]=\"tagDefs()\"\n                                 [baseNode]=\"operation\" nodepath=\"tags\"\n                                 (onChange)=\"changeTags($event)\"></inline-array-editor>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AaiDocument, Library, CommandFactory} from \"@apicurio/data-models\";\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {ICommand} from \"@apicurio/data-models\";\nimport {EditorsService} from \"../../_services/editors.service\";\n\n\n@Component({\n    selector: \"aaimain-form\",\n    templateUrl: \"aaimain-form.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AsyncApiMainFormComponent extends SourceFormComponent<AaiDocument> {\n\n    _document: AaiDocument;\n    @Input()\n    set document(doc: AaiDocument) {\n        this._document = doc;\n        this.sourceNode = doc;\n        this.revertSource();\n    }\n    get document(): AaiDocument {\n        return this._document;\n    }\n\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n                protected selectionService: SelectionService,\n                protected commandService: CommandService,\n                protected documentService: DocumentService,\n                private editors: EditorsService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    protected createEmptyNodeForSource(): AaiDocument {\n        return <AaiDocument> Library.createDocument(this.document.getDocumentType());\n    }\n\n    protected createReplaceNodeCommand(node: AaiDocument): ICommand {\n        return CommandFactory.createReplaceDocumentCommand(this.document, node);\n    }\n\n    public saveSource(): void {\n        super.saveSource();\n        this.sourceNode = this._document;\n    }\n}\n","<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor [(text)]=\"source\" [theme]=\"sourceEditorTheme()\" [mode]=\"sourceEditorMode()\" [debounceTime]=\"250\" [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n\n    <!-- Info about the API -->\n    <aaiinfo-section [document]=\"document\"></aaiinfo-section>\n\n    <!-- Contact Info -->\n    <aaicontact-section [document]=\"document\"></aaicontact-section>\n\n    <!-- License -->\n    <aailicense-section [document]=\"document\"></aailicense-section>\n\n    <!-- Global Servers -->\n    <aaiservers-section [parent]=\"document\" [collapsed]=\"false\"\n                        [description]=\"'Configure servers for your API in this section.  Once defined, servers indicate where the API receives and publishes messages.'\"></aaiservers-section>\n\n    <!-- Global Security Schemes -->\n    <aaisecurity-schemes-section [document]=\"document\"></aaisecurity-schemes-section>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {\n    Aai20Schema, AaiComponents,\n    AaiDocument,\n    AaiMessage,\n    AaiOperation,\n    CommandFactory,\n    ICommand,\n    Library,\n    ReferenceUtil,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {EditExampleEvent} from \"../../../dialogs/edit-aai-example.component\";\n\n@Component({\n    selector: \"payload-tab\",\n    templateUrl: \"payload-tab.component.html\",\n    styleUrls: [ \"payload-tab.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PayloadTabComponent extends AbstractBaseComponent {\n\n    @Input() message: AaiMessage;\n\n    protected _model: SimplifiedType = null;\n    protected editing: boolean = false;\n    protected tab: string = \"\";\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n        private commandService: CommandService, private selectionService: SelectionService) {\n            super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public model(): SimplifiedType {\n        return this._model;\n    }\n    public updateModel(): void {\n        this._model = SimplifiedType.fromSchema(this.message.payload);\n    }\n    public document(): AaiDocument {\n        return <AaiDocument> this.message.ownerDocument();\n    }\n\n    public toggleTab(tab: string): void {\n        if (this.isEditing() && this.tab === tab) {\n            this.editing = false;\n        } else {\n            this.editing = true;\n            this.tab = tab;\n        }\n    }\n    public isEditing(): boolean {\n        return this.editing;\n    }\n    public isEditingTab(tab: string): boolean {\n        return this.isEditing() && this.tab === tab;\n    }\n\n    public toggleType(): void {\n        this.toggleTab(\"type\");\n    }\n    public toggleExamples(): void {\n        this.toggleTab(\"examples\");\n    }\n    public isEditingType(): boolean {\n        return this.isEditingTab(\"type\");\n    }\n    public isEditingExamples(): boolean {\n        return this.isEditingTab(\"examples\");\n    }\n\n    public messageHasExamples(): boolean {\n        return this.message.examples != null && this.message.examples.length > 0;\n    }\n    public messageExamples(): any[] {\n        return this.message.examples;\n    }\n\n    public displayType(): SimplifiedType {\n        return SimplifiedType.fromSchema(this.message.payload);\n    }\n    public displayExamples(): string {\n        if (this.messageHasExamples()) {\n            return `${this.messageExamples().length} example(s) defined.`;\n        } else {\n            return \"No examples defined.\"\n        }\n    }\n\n    public changeRefType(newType: SimplifiedType): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n\n        let command: ICommand = CommandFactory.createChangePayloadRefCommand_Aai20$java_lang_String$io_apicurio_datamodels_asyncapi_models_AaiMessage(nt.type, this.message);\n        this.commandService.emit(command);\n\n        this._model = nt;\n    }\n\n    public schemaForExamplePayload(): Aai20Schema {\n        if (this.message.payload && this.message.payload.$ref) {\n            return ReferenceUtil.resolveRef(this.message.payload.$ref, this.message) as Aai20Schema;\n        }\n        return null;\n    }\n    public schemaForExampleHeaders(): Aai20Schema {\n        if (this.message.headers && this.message.headers.$ref) {\n            return ReferenceUtil.resolveRef(this.message.headers.$ref, this.message) as Aai20Schema;\n        }\n        return null;\n    }\n\n    public exampleName(example: any): string {\n        return example.name as string;\n    }\n    public examplePayloadValue(example: any): string {\n        let evalue: any = example.payload;\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n    public exampleHeadersValue(example: any): string {\n        let evalue: any = example.headers;\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n\n    public addExample(exampleData: any): void {\n        let example: any = {};\n        example.name = exampleData.name;\n        // Add payload if provided.\n        if (exampleData.payloadValue != null) {\n            example.payload = exampleData.payloadValue\n        }\n        // Add headers if provided.\n        if (exampleData.headersValue != null) {\n            example.headers = exampleData.headersValue;\n        }\n        let command: ICommand = CommandFactory.createAddMessageExampleCommand_Aai20(this.message.parent() as AaiOperation, example);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.message);\n        nodePath.appendSegment(\"examples\", false);\n        this.__selectionService.select(nodePath.toString());\n    }\n    public editExample(event: EditExampleEvent): void {\n        console.info(\"[PayloadTabComponent] Changing the value of a Message example.\");\n        /** Not implemented for the moment.\n        let command: ICommand = CommandFactory.createSetExampleCommand(this.item.ownerDocument().getDocumentType(), this.item,\n            event.value, event.example.getName());\n        this.commandService.emit(command);\n        */\n    }\n    public deleteExample(example: any): void {\n        let command: ICommand = CommandFactory.createDeleteMessageExampleCommand_Aai20(this.message.parent() as AaiOperation, example);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.message);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public deleteAllExamples(): void {\n        let command: ICommand = CommandFactory.createDeleteAllMessageExamplesCommand_Aai20(this.message.parent() as AaiOperation);\n        this.commandService.emit(command);\n    }\n}\n","<div class=\"payload\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"reference\">\n            <span>Reference</span>\n        </div>\n        <div class=\"problem-flex type\" (click)=\"toggleType()\" [class.selected]=\"isEditingType()\">\n            <!-- <validation-problem [model]=\"message.payload\" property=\"$ref\"></validation-problem> --> \n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingType()\"></span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"examples\" (click)=\"toggleExamples()\" [class.selected]=\"isEditingExamples()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingExamples()\"></span>\n            <span [class.empty]=\"!messageHasExamples()\">{{ displayExamples() }}</span>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"mt-content\" *ngIf=\"isEditingType()\">\n                        <div class=\"mt-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"false\"\n                                                [dataTypesOnly]=\"true\"\n                                                (onChange)=\"changeRefType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                    <div class=\"mt-examples\" *ngIf=\"isEditingExamples()\">\n                        <div class=\"form-label\">Examples</div>\n                        <signpost *ngIf=\"!messageHasExamples()\">\n                            <span>No examples have been defined.</span>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </signpost>\n                        <div *ngIf=\"messageHasExamples()\">\n                            <table class=\"table table-striped table-bordered table-examples\">\n                                <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th class=\"pre-actions\">Payload</th>\n                                    <th class=\"pre-actions\">Headers</th>\n                                    <th class=\"actions\"></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let example of messageExamples()\">\n                                    <td class=\"name\">\n                                        <span>{{ exampleName(example) }}</span>\n                                    </td>\n                                    <td class=\"payloadValue pre-actions\">\n                                        <span>{{ examplePayloadValue(example) }}</span>\n                                    </td>\n                                    <td class=\"payloadHeaders pre-actions\">\n                                        <span>{{ exampleHeadersValue(example) }}</span>\n                                    </td>\n                                    <td class=\"actions\">\n                                        <div>\n                                            <icon-button (onClick)=\"deleteExample(example)\" [pullRight]=\"true\" type=\"delete\"\n                                                         [title]=\"'Delete example.'\"></icon-button>\n                                            <!-- <icon-button (onClick)=\"editExampleDialog.open(example)\" [pullRight]=\"true\" type=\"edit\"\n                                                         [title]=\"'Edit example.'\"></icon-button> -->\n                                        </div>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                            <a (click)=\"deleteAllExamples()\" class=\"pull-right\">Delete all examples</a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<add-aai-example-dialog #addExampleDialog (onAdd)=\"addExample($event)\"\n    [payloadSchema]=\"schemaForExamplePayload()\" [headersSchema]=\"schemaForExampleHeaders()\"></add-aai-example-dialog>\n<edit-aai-example-dialog #editExampleDialog (onEdit)=\"editExample($event)\"\n    [payloadSchema]=\"schemaForExamplePayload()\" [headersSchema]=\"schemaForExampleHeaders()\"></edit-aai-example-dialog>","/**\n * @license\n * Copyright 2020s JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, EventEmitter,\n    HostListener,\n    Input, Output,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedAllNodeVisitor,\n    CombinedVisitorAdapter,\n    CommandFactory,\n    ICommand,\n    Library,\n    Node,\n    NodePath,\n    AaiChannelItem,\n    Aai20Document,\n    Aai20SchemaDefinition,\n    AaiMessageTraitDefinition,\n    AaiOperationTraitDefinition,\n    TraverserDirection,\n    VisitorUtil, AaiMessage\n} from \"@apicurio/data-models\";\nimport {AddChannelDialogComponent} from \"./dialogs/add-channel.component\";\nimport {CloneDefinitionDialogComponent} from \"./dialogs/clone-definition.component\";\nimport {FindChannelItemsVisitor} from \"../_visitors/channel-items.visitor\";\nimport {FindAaiSchemaDefinitionsVisitor} from \"../_visitors/schema-definitions.visitor\";\nimport {FindMessageTraitDefinitionsVisitor} from \"../_visitors/messagetrait-definitions.visitor\";\nimport {FindOperationTraitDefinitionsVisitor} from \"../_visitors/operationtrait-definitions.visitor\";\nimport {ModelUtils} from \"../_util/model.util\";\nimport {SelectionService} from \"../_services/selection.service\";\nimport {CommandService} from \"../_services/command.service\";\nimport {EditorsService} from \"../_services/editors.service\";\nimport {DataTypeData, DataTypeEditorComponent, IDataTypeEditorHandler} from \"./editors/data-type-editor.component\";\nimport {RestResourceService} from \"../_services/rest-resource.service\";\nimport {AbstractBaseComponent} from \"./common/base-component\";\nimport {DocumentService} from \"../_services/document.service\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"./dialogs/rename-entity.component\";\nimport {KeypressUtils} from \"../_util/keypress.util\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {FeaturesService} from \"../_services/features.service\";\nimport {ComponentType} from \"../_models/component-type.model\";\nimport { IOperationTraitEditorHandler, OperationTraitData, OperationTraitEditorComponent } from \"./editors/operationtrait-editor.component\";\nimport { IMessageTraitEditorHandler, MessageTraitData, MessageTraitEditorComponent } from \"./editors/messagetrait-editor.component\";\nimport {CloneChannelDialogComponent} from \"./dialogs/clone-channel.component\";\nimport {FindMessageDefinitionsVisitor} from \"../_visitors/message-definitions.visitor\";\nimport {IMessageEditorHandler, MessageData, MessageEditorComponent} from \"./editors/message-editor.component\";\n\n\n/**\n * The component that models the master view of the API editor.  This is the\n * left-hand side of the editor, which lists things like Paths and Definitions.\n * Users will select an item in this master panel which will result in a form\n * being displayed in the detail panel.\n*/\n@Component({\n    selector: \"aaimaster\",\n    templateUrl: \"aaimaster.component.html\",\n    styleUrls: [ \"aaimaster.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AsyncApiEditorMasterComponent extends AbstractBaseComponent {\n\n    @Input() document: Aai20Document;\n    @Input() channelNameRegex: string;\n\n    @Output() onImportComponent: EventEmitter<ComponentType> = new EventEmitter<ComponentType>();\n\n    contextMenuSelection: NodePath = null;\n    contextMenuType: string = null;\n    contextMenuPos: any = {\n        left: \"0px\",\n        top: \"0px\"\n    };\n\n    @ViewChild(\"addChannelDialog\", { static: true }) addChannelDialog: AddChannelDialogComponent;\n    @ViewChild(\"cloneChannelDialog\", { static: true }) cloneChannelDialog: CloneChannelDialogComponent;\n    @ViewChild(\"renameChannelDialog\", { static: true }) renameChannelDialog: RenameEntityDialogComponent;\n\n    @ViewChild(\"cloneDefinitionDialog\", { static: true }) cloneDefinitionDialog: CloneDefinitionDialogComponent;\n    @ViewChild(\"renameDefinitionDialog\", { static: true }) renameDefinitionDialog: RenameEntityDialogComponent;\n\n    @ViewChild(\"renameOperationTraitDialog\") renameOperationTraitDialog: RenameEntityDialogComponent;\n    @ViewChild(\"renameMessageTraitDialog\", { static: true }) renameMessageTraitDialog: RenameEntityDialogComponent;\n\n    @ViewChild(\"renameMessageDialog\", { static: true }) renameMessageDialog: RenameEntityDialogComponent;\n\n    filterCriteria: string = null;\n    _channels: AaiChannelItem[];\n    _defs: Aai20SchemaDefinition[];\n    _opTraitsDefs: AaiOperationTraitDefinition[];\n    _msgTraitsDefs: AaiMessageTraitDefinition[];\n    _msgsDefs: AaiMessage[];\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     * @param commandService\n     * @param editors\n     * @param restResourceService\n     * @param features\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService, private commandService: CommandService,\n                private editors: EditorsService, private restResourceService: RestResourceService,\n                private features: FeaturesService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    protected onDocumentChange(): void {\n        this._channels = null;\n        this._defs = null;\n        this._opTraitsDefs = null;\n        this._msgTraitsDefs = null;\n        this._msgsDefs = null;\n    }\n\n    public onChannelsKeypress(event: KeyboardEvent): void {\n        if (KeypressUtils.isUpArrow(event) || KeypressUtils.isDownArrow(event)) {\n            let channels: AaiChannelItem[] = this.channels();\n            this.handleArrowKeypress(event, channels);\n        }\n    }\n\n    public onDefinitionsKeypress(event: KeyboardEvent): void {\n        if (KeypressUtils.isUpArrow(event) || KeypressUtils.isDownArrow(event)) {\n            let definitions: Aai20SchemaDefinition[] = this.definitions();\n            this.handleArrowKeypress(event, definitions);\n        }\n    }\n\n    protected handleArrowKeypress(event: KeyboardEvent, items: Node[]): void {\n        console.info(\"[AsyncApiEditorMasterComponent] Up/Down arrow detected.\");\n        let selectedIdx: number = -1;\n        items.forEach( (item, idx) => {\n            if (ModelUtils.isSelected(item)) {\n                selectedIdx = idx;\n            }\n        });\n\n        console.info(\"[AsyncApiEditorMasterComponent] Current selection index: \", selectedIdx);\n\n        // Do nothing if we have no selection and the user hits the UP arrow\n        if (selectedIdx == -1 && KeypressUtils.isUpArrow(event)) {\n            selectedIdx = items.length;\n        }\n\n        if (KeypressUtils.isDownArrow(event)) {\n            selectedIdx++;\n        } else {\n            selectedIdx--;\n        }\n        if (selectedIdx < 0) {\n            selectedIdx = 0;\n        }\n        if (selectedIdx >= items.length) {\n            selectedIdx = items.length - 1;\n        }\n\n        console.info(\"[AsyncApiEditorMasterComponent] New Selection Index: \", selectedIdx);\n\n        let newSelection: Node = items[selectedIdx];\n        this.__selectionService.selectNode(newSelection);\n    }\n\n    /**\n     * Called when the user searches in the master area.\n     * @param criteria\n     */\n    public filterAll(criteria: string): void {\n        console.info(\"[AsyncApiEditorMasterComponent] Filtering master items: %s\", criteria);\n        this.filterCriteria = criteria;\n        if (this.filterCriteria !== null) {\n            this.filterCriteria = this.filterCriteria.toLowerCase();\n        }\n        this._channels = null;\n        this._defs = null;\n        this._opTraitsDefs = null;\n        this._msgTraitsDefs = null;\n        this._msgsDefs = null;\n    }\n\n    /**\n     * Returns an array of paths that match the filter criteria and are sorted alphabetically.\n     */\n    public channels(): AaiChannelItem[] {\n        if (!this._channels) {\n            let viz: FindChannelItemsVisitor = new FindChannelItemsVisitor(this.filterCriteria);\n            if (this.document && this.document.channels) {\n                this.document.getChannels().forEach(channelItem => {\n                    VisitorUtil.visitNode(channelItem, viz);\n                });\n            }\n            this._channels = viz.getSortedChannelItems();\n        }\n        return this._channels;\n    }\n\n    /**\n     * Returns true if the channels have been initialized to non empty\n     */\n    public hasChannels(): boolean {\n        let channelList = this.channels();\n        return !!channelList && channelList.length > 0;\n    }\n\n    /**\n     * Returns the array of definitions, filtered by search criteria and sorted.\n     */\n    public definitions(): Aai20SchemaDefinition[] {\n        let viz: FindAaiSchemaDefinitionsVisitor = new FindAaiSchemaDefinitionsVisitor(this.filterCriteria);\n        if (!this._defs) {\n            if (this.document.components) {\n                this.document.components.getSchemaDefinitions().forEach( definition => {\n                    VisitorUtil.visitNode(definition, viz);\n                })\n                this._defs = viz.getSortedSchemaDefinitions();\n            } else {\n                this._defs = [];\n            }\n        }\n        return this._defs;\n    }\n\n    /**\n     * Returns true if the definitions have been initialized to non empty\n     */\n    public hasDefinitions(): boolean {\n        let definitionList = this.definitions();\n        return !!definitionList && definitionList.length > 0;\n    }\n\n    /**\n     * Returns the array of operation trait definitions, filtered by search criteria and sorted.\n     */\n    public operationTraits(): AaiOperationTraitDefinition[] {\n        if (!this._opTraitsDefs) {\n            if (this.document.components) {\n                let viz: FindOperationTraitDefinitionsVisitor = new FindOperationTraitDefinitionsVisitor(this.filterCriteria);\n                this.document.components.getOperationTraitDefinitionsList().forEach( opTraitDef => {\n                    VisitorUtil.visitNode(opTraitDef, viz);\n                })\n                this._opTraitsDefs = viz.getSortedOperationTraitDefinitions();\n            } else {\n                this._opTraitsDefs = [];\n            }\n        }\n        return this._opTraitsDefs;\n    }\n\n    /**\n     * Returns true if the operationTraits have been initialized to non empty\n     */\n    public hasOperationTraits(): boolean {\n        let operationTraitList = this.operationTraits();\n        return !!operationTraitList && operationTraitList.length > 0;\n    }\n\n    /**\n     * Returns the array of message trait definitions, filtered by search criteria and sorted.\n     */\n    public messageTraits(): AaiMessageTraitDefinition[] {\n        if (!this._msgTraitsDefs) {\n            if (this.document.components) {\n                let viz: FindMessageTraitDefinitionsVisitor = new FindMessageTraitDefinitionsVisitor(this.filterCriteria);\n                this.document.components.getMessageTraitDefinitionsList().forEach( msgTraitDef => {\n                    VisitorUtil.visitNode(msgTraitDef, viz);\n                })\n                this._msgTraitsDefs = viz.getSortedMessageTraitDefinitions();\n            } else {\n                this._msgTraitsDefs = [];\n            }\n        }\n        return this._msgTraitsDefs;\n    }\n\n    /**\n     * Returns the array of message definitions, filtered by search criteria and sorted.\n     */\n    public messages(): AaiMessage[]{\n        if (!this._msgsDefs) {\n            if (this.document.components) {\n                let viz: FindMessageDefinitionsVisitor = new FindMessageDefinitionsVisitor(this.filterCriteria);\n                this.document.components.getMessagesList().forEach( msgDef => {\n                    VisitorUtil.visitNode(msgDef, viz);\n                })\n                this._msgsDefs = viz.getSortedMessageDefinitions();\n            } else {\n                this._msgsDefs = [];\n            }\n        }\n        return this._msgsDefs;\n    }\n\n    /**\n     * Returns true if the messageTraits have been initialized to non empty\n     */\n    public hasMessageTraits(): boolean {\n        let messageTraitList = this.messageTraits();\n        return !!messageTraitList && messageTraitList.length > 0;\n    }\n\n    /**\n     * Returns true if the messages have been initialized to non empty\n     */\n    public hasMessages(): boolean {\n        let messageList = this.messages();\n        return !!messageList && messageList.length > 0;\n    }\n\n    /**\n     * Gets a definition by its name.\n     * @param name\n     */\n    protected getDefinitionByName(name: string): Aai20SchemaDefinition {\n        return this.document.components.getSchemaDefinition(name) as Aai20SchemaDefinition;\n    }\n\n    public definitionsPath(): string {\n        return \"/components/schemas\";\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.closeContextMenu();\n        }\n    }\n\n    /**\n     * Called to return the currently selected path (if one is selected).  If not, returns \"/\".\n     */\n    public getCurrentChannelSelection(): string { // Should this method really exist on the asyncapi editor? It looks designed for REST resource nesting and returns '' on aai channels\n        let currentSelection: string = this.__selectionService.currentSelection();\n        let npath: NodePath = new NodePath(currentSelection);\n        let node: Node = npath.resolve(this.document);\n        let rval: string = \"\";\n        if (node && node[\"_path\"]) {\n            rval = node[\"_path\"] + \"/\";\n        } else if (node && node.parent() && node.parent()[\"_path\"]) {\n            rval = node.parent()[\"_path\"] + \"/\";\n        }\n        if (rval.endsWith(\"//\")) {\n            rval = rval.substring(0, rval.length - 1);\n        }\n        return rval;\n    }\n\n     /**\n     * Called when the user fills out the Add Channel modal dialog and clicks Add.\n     * @param channel\n     */\n    public addChannel(channel: string): void {\n        let command: ICommand = CommandFactory.createNewChannelCommand(channel);\n        this.commandService.emit(command);\n        // console.debug(\"this.document.channels: \" + JSON.stringify(this.document.channels, (k,v) =>  [\"_ownerDocument\", \"_parent\"].includes(k) && !!v ? \"<<circular reference>>\" : v));\n        this.selectChannel(this.document.channels[channel] as AaiChannelItem);\n    }\n\n    /**\n     * Called when the user clicks \"Rename Channel\" in the context-menu for a channel.\n     */\n    public renameChannel(modalData?: any): void {\n        console.info(\"[AsyncApiEditorMasterComponent] Renaming channel: \", modalData);\n        if (undefined === modalData || modalData === null) {\n            let channelItem: any = this.contextMenuSelection.resolve(this.document);\n            let channelNames: string[] = [];\n            VisitorUtil.visitTree(this.document, new class extends CombinedVisitorAdapter {\n                public visitChannelItem(node: AaiChannelItem): void {\n                    channelNames.push(node.getName());\n                }\n            }, TraverserDirection.down);\n            this.renameChannelDialog.open(channelItem, channelItem.getName(), newName => {\n                return channelNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let channel: AaiChannelItem = modalData.entity;\n            let oldName: string = channel.getName();\n            console.info(\"[AsyncApiEditorMasterComponent] Rename channel to: %s\", modalData.newName);\n            let command: ICommand = CommandFactory.createRenameChannelItemCommand(oldName, modalData.newName);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Clone Channel\" in the context-menu for a channel.\n     */\n    public cloneChannel(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            let channelItem: AaiChannelItem = this.contextMenuSelection.resolve(this.document) as AaiChannelItem;\n            this.cloneChannelDialog.open(this.document, channelItem);\n        } else {\n            let channelItem: AaiChannelItem = modalData.object;\n            console.info(\"[EditorMasterComponent] Clone channel item: %s\", modalData.channelName);\n            let cloneSrcObj: any = Library.writeNode(channelItem);\n            let command: ICommand = CommandFactory.createAddChannelItemCommand(modalData.channelName, cloneSrcObj);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Delete Channel\" in the context-menu for a channel.\n     */\n    public deleteChannel(): void {\n        let channelItem: AaiChannelItem = this.contextMenuSelection.resolve(this.document) as AaiChannelItem;\n        let command: ICommand = CommandFactory.createDeleteChannelCommand(channelItem.getName());\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Returns true if the given item is a valid channel in the current document.\n     * @param channelItem\n     */\n    protected isValidChannelItem(channelItem: AaiChannelItem): boolean {\n        if (ObjectUtils.isNullOrUndefined(channelItem)) {\n            return false;\n        }\n        if (ObjectUtils.isNullOrUndefined(this.document.channels)) {\n            return false;\n        }\n        let pi: any = this.document.channels[channelItem.getName()];\n        return pi === channelItem;\n    }\n\n    /**\n     * Called when the user fills out the Add Definition modal dialog and clicks Add.\n     */\n    public addDefinition(data: DataTypeData): void {\n        console.info(\"[AsyncAPIEditorMasterComponent] Adding a definition: \", data);\n        let example: any = (data.example === \"\") ? null : data.example;\n        example = this.exampleAsObject(example);\n        let command: ICommand = CommandFactory.createNewSchemaDefinitionCommand(this.document.getDocumentType(),\n            data.name, example, data.description);\n        this.commandService.emit(command);\n        this.selectDefinition(this.getDefinitionByName(data.name));\n    }\n\n    /**\n     * Called when the user clicks \"Clone Definition\" in the context-menu for a definition.\n     */\n    public cloneDefinition(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            let schemaDef: any = this.contextMenuSelection.resolve(this.document);\n            this.cloneDefinitionDialog.open(this.document, schemaDef);\n        } else {\n            let definition: Node = modalData.definition;\n            console.info(\"[AsyncApiEditorMasterComponent] Clone definition: %s\", modalData.name);\n            let cloneSrcObj: any = Library.writeNode(definition);\n            let command: ICommand = CommandFactory.createAddSchemaDefinitionCommand(this.document.getDocumentType(),\n                modalData.name, cloneSrcObj);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Rename Definition\" in the context-menu for a schema definition.\n     */\n    public renameDefinition(event?: RenameEntityEvent): void {\n        if (undefined === event || event === null) {\n            let schemaDef: Aai20SchemaDefinition = <any>this.contextMenuSelection.resolve(this.document);\n            let name: string = this.definitionName(schemaDef);\n            let definitionNames: string[] = [];\n            let master: AsyncApiEditorMasterComponent = this;\n            VisitorUtil.visitTree(this.document, new class extends CombinedVisitorAdapter {\n                public visitSchemaDefinition(node: Aai20SchemaDefinition): void {\n                    definitionNames.push(master.definitionName(node));\n                }\n            }, TraverserDirection.down);\n            this.renameDefinitionDialog.open(schemaDef, name, newName => {\n                return definitionNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let definition: Aai20SchemaDefinition = <any>event.entity;\n            let oldName: string = this.definitionName(definition);\n            console.info(\"[AsyncApiEditorMasterComponent] Rename definition to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameSchemaDefinitionCommand(this.document.getDocumentType(),\n                oldName, event.newName);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Delete Definition\" in the context-menu for a schema definition.\n     */\n    public deleteDefinition(): void {\n        let definition: Aai20SchemaDefinition = this.contextMenuSelection.resolve(this.document) as Aai20SchemaDefinition;\n        let command: ICommand = CommandFactory.createDeleteSchemaDefinitionCommand(this.document.getDocumentType(), definition.getName());\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Called when the user fills out the Add Operation Trait page and clicks Add.\n     */\n    public addOperationTrait(trait: OperationTraitData): void {\n        console.info(\"[AsyncAPIEditorMasterComponent] Adding an operation trait: \", trait);\n        let command: ICommand = CommandFactory.createNewOperationTraitDefinitionCommand(trait.name, trait.description);\n        this.commandService.emit(command);\n        this.deselectOperationTrait();\n    }\n\n    /**\n     * Called when the user clicks \"Rename OperationTrait\" in the context-menu for a OperationTrait.\n     */\n    public renameOperationTrait(event?: RenameEntityEvent): void {\n        if (undefined === event || event === null) {\n            let operationTrait: AaiOperationTraitDefinition = <any>this.contextMenuSelection.resolve(this.document);\n            let name: string = operationTrait.getName();\n            let operationTraitNames: string[] = [];\n            VisitorUtil.visitTree(this.document, new class extends CombinedVisitorAdapter {\n                public visitOperationTraitDefinition(node: AaiOperationTraitDefinition): void {\n                    operationTraitNames.push(node.getName());\n                }\n            }, TraverserDirection.down);\n            this.renameMessageTraitDialog.open(operationTrait, name, newName => {\n                return operationTraitNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let operationTrait: AaiOperationTraitDefinition = <any>event.entity;\n            let oldName: string = operationTrait.getName();\n            console.info(\"[AsyncApiEditorMasterComponent] Rename operationTrait to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameOperationTraitDefinitionCommand(oldName, event.newName);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Delete Operation Trait\" in the context-menu for a trait.\n     */\n    public deleteOperationTrait(): void {\n        let definition: AaiOperationTraitDefinition = this.contextMenuSelection.resolve(this.document) as AaiOperationTraitDefinition;\n        let command: ICommand = CommandFactory.createDeleteOperationTraitDefinitionCommand(definition.getName());\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Called when the user fills out the Add Message Trait page and clicks Add.\n     */\n    public addMessageTrait(trait: MessageTraitData): void {\n        console.info(\"[AsyncAPIEditorMasterComponent] Adding a message trait: \", trait);\n        let command: ICommand = CommandFactory.createNewMessageTraitDefinitionCommand(trait.name, trait.description);\n        this.commandService.emit(command);\n        this.deselectMessageTrait();\n    }\n\n    /**\n     * Called when the user clicks \"Rename MessageTrait\" in the context-menu for a MessageTrait.\n     */\n    public renameMessageTrait(event?: RenameEntityEvent): void {\n        if (undefined === event || event === null) {\n            let messageTrait: AaiMessageTraitDefinition = <any>this.contextMenuSelection.resolve(this.document);\n            let name: string = messageTrait.getName();\n            let messageTraitNames: string[] = [];\n            VisitorUtil.visitTree(this.document, new class extends CombinedVisitorAdapter {\n                public visitMessageTraitDefinition(node: AaiMessageTraitDefinition): void {\n                    messageTraitNames.push(node.getName());\n                }\n            }, TraverserDirection.down);\n            this.renameMessageTraitDialog.open(messageTrait, name, newName => {\n                return messageTraitNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let messageTrait: AaiMessageTraitDefinition = <any>event.entity;\n            let oldName: string = messageTrait.getName();\n            console.info(\"[AsyncApiEditorMasterComponent] Rename messageTrait to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameMessageTraitDefinitionCommand(oldName, event.newName);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Delete Message Trait\" in the context-menu for a trait.\n     */\n    public deleteMessageTrait(): void {\n        let definition: AaiMessageTraitDefinition = this.contextMenuSelection.resolve(this.document) as AaiMessageTraitDefinition;\n        let command: ICommand = CommandFactory.createDeleteMessageTraitDefinitionCommand(definition.getName());\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Called when the user fills out the Add Message page and clicks Add.\n     */\n    public addMessage(mes: MessageData): void {\n        console.info(\"[AsyncAPIEditorMasterComponent] Adding a message: \", mes);\n        let command: ICommand = CommandFactory.createNewMessageDefinitionCommand(mes.name, mes.description);\n        this.commandService.emit(command);\n        this.deselectMessage();\n    }\n\n    /**\n     * Called when the user clicks \"Rename Message\" in the context-menu for a Message.\n     */\n    public renameMessage(event?: RenameEntityEvent): void {\n        if (undefined === event || event === null) {\n            let message: AaiMessageTraitDefinition = <any>this.contextMenuSelection.resolve(this.document);\n            let name: string = message.getName();\n            let messageNames: string[] = [];\n            VisitorUtil.visitTree(this.document, new class extends CombinedVisitorAdapter {\n                public visitMessage(node: AaiMessage): void {\n                    messageNames.push(node.getName());\n                }\n            }, TraverserDirection.down);\n            this.renameMessageDialog.open(message, name, newName => {\n                return messageNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let message: AaiMessage = <any>event.entity;\n            let oldName: string = message.getName();\n            console.info(\"[AsyncApiEditorMasterComponent] Rename message to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameMessageDefinitionCommand(oldName, event.newName);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Delete Message\" in the context-menu for a trait.\n     */\n    public deleteMessage(): void {\n        let definition: AaiMessage = this.contextMenuSelection.resolve(this.document) as AaiMessage;\n        let command: ICommand = CommandFactory.createDeleteMessageDefinitionCommand(definition.getName());\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Converts a JSON formatted string example to an object.\n     * @param from\n     */\n    protected exampleAsObject(from: string): any {\n        try {\n            return JSON.parse(from);\n        } catch (e) {\n            return from;\n        }\n    }\n\n    /**\n     * Figures out the definition name.\n     * @param schemaDef\n     */\n    protected definitionName(schemaDef: Aai20SchemaDefinition): string {\n        return schemaDef.getName();\n    }\n\n    /**\n     * Returns true if the given schema definition is valid and contained within the\n     * current document.\n     * @param definition\n     * @return\n     */\n    protected isValidDefinition(definition: Aai20SchemaDefinition): boolean {\n        if (ObjectUtils.isNullOrUndefined(definition)) {\n            return false;\n        }\n        return this.definitions().indexOf(definition) !== -1;\n    }\n\n    /**\n     * Called when the user selects the main/default element from the master area.\n     */\n    public selectMain(): void {\n        this.__selectionService.selectRoot();\n    }\n\n    /**\n     * Called when the user selects a channel from the master area.\n     * @param channel\n     */\n    public selectChannel(channel: AaiChannelItem): void {\n        this.__selectionService.selectNode(channel);\n    }\n\n     /**\n     * Called to deselect the currently selected channel.\n     */\n    public deselectChannel(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Called when the user selects a definition from the master area.\n     * @param def\n     */\n    public selectDefinition(def: Aai20SchemaDefinition): void {\n        this.__selectionService.selectNode(def);\n    }\n\n    /**\n     * Deselects the currently selected definition.\n     */\n    public deselectDefinition(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Called when the user selects an operation trait definition from the master area.\n     * @param operationTraitDef\n     */\n    public selectOperationTrait(operationTraitDef: AaiOperationTraitDefinition): void {\n        this.__selectionService.selectNode(operationTraitDef);\n    }\n\n    /**\n     * Deselects the currently selected operation trait definition.\n     */\n    public deselectOperationTrait(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Called when the user selects a message trait definition from the master area.\n     * @param messageTraitDef\n     */\n    public selectMessageTrait(messageTraitDef: AaiMessageTraitDefinition): void {\n        this.__selectionService.selectNode(messageTraitDef);\n    }\n\n    /**\n     * Called when the user selects a message definition from the master area.\n     * @param messageDef\n     */\n    public selectMessage(messageDef: AaiMessage): void {\n        this.__selectionService.selectNode(messageDef);\n    }\n\n    /**\n     * Deselects the currently selected message trait definition.\n     */\n    public deselectMessageTrait(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Deselects the currently selected message definition.\n     */\n    public deselectMessage(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Returns true if the given node is the currently selected item *or* is the parent\n     * of the currently selected item.\n     * @param node\n     * @return\n     */\n    public isSelected(node: Node): boolean {\n        return ModelUtils.isSelected(node);\n    }\n\n    /**\n     * Returns true if the main node should be selected.\n     * @return\n     */\n    public isMainSelected(): boolean {\n        return ModelUtils.isSelected(this.document);\n    }\n\n    /**\n     * Returns true if the given node is the current context menu item.\n     * @param node\n     * @return\n     */\n    public isContexted(node: Node): boolean {\n        if (this.contextMenuSelection === null) {\n            return false;\n        }\n        return this.contextMenuSelection.contains(node);\n    }\n\n    /**\n     * Called when the user right-clicks on a path.\n     * @param event\n     * @param pathItem\n     */\n    public showChannelContextMenu(event: MouseEvent, channelItem: AaiChannelItem): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(channelItem);\n        this.contextMenuType = \"channel\";\n    }\n\n    /**\n     * Called when the user right-clicks on a data type.\n     * @param event\n     * @param definition\n     */\n    public showDefinitionContextMenu(event: MouseEvent, definition: Aai20SchemaDefinition): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(definition);\n        this.contextMenuType = \"definition\";\n    }\n\n    /**\n     * Called when the user right-clicks on an operation trait definition.\n     * @param event\n     * @param opTraitDef\n     */\n    public showOperationTraitContextMenu(event: MouseEvent, opTraitDef: AaiOperationTraitDefinition): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(opTraitDef);\n        this.contextMenuType = \"operationTrait\";\n    }\n\n    /**\n     * Called when the user right-clicks on a message trait definition.\n     * @param event\n     * @param msgTraitDef\n     */\n    public showMessageTraitContextMenu(event: MouseEvent, msgTraitDef: AaiMessageTraitDefinition): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(msgTraitDef);\n        this.contextMenuType = \"messageTrait\";\n    }\n\n    /**\n     * Called when the user right-clicks on a message definition.\n     * @param event\n     * @param msgDef\n     */\n    public showMessageContextMenu(event: MouseEvent, msg: AaiMessage): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(msg);\n        this.contextMenuType = \"message\";\n    }\n\n    /**\n     * Called when the user clicks somewhere in the document.  Used to close the context\n     * menu if it is open.\n     */\n    @HostListener(\"document:click\", [\"$event\"])\n    public onDocumentClick(event: MouseEvent): void {\n        // For FireFox (especially macOS), suppress the right click event\n        // to prevent it immediately closing the context menu just activated.\n        if (event && event.which === 3) {\n            return;\n        }\n        this.closeContextMenu();\n    }\n\n    /**\n     * Closes the context menu.\n     */\n    private closeContextMenu(): void {\n        this.contextMenuType = null;\n        this.contextMenuSelection = null;\n    }\n\n    /**\n     * Called to determine whether there is a validation problem associated with the given\n     * node (either directly on the node or any descendant node).\n     * @param node\n     */\n    public hasValidationProblem(node: Node): boolean {\n        let viz: HasProblemVisitor = new HasProblemVisitor();\n        VisitorUtil.visitTree(node, viz, TraverserDirection.down);\n        return viz.problemsFound;\n    }\n\n    public entityClasses(node: Node): string {\n        let classes: string[] = [];\n        if (this.hasValidationProblem(node)) {\n            classes.push(\"problem-marker\");\n        }\n        if (this.isContexted(node)) {\n            classes.push(\"contexted\");\n        }\n        if (this.isSelected(node)) {\n            classes.push(\"selected\");\n        }\n        return classes.join(' ');\n    }\n\n    /**\n     * Returns the classes that should be applied to the channel item in the master view.\n     * @param node\n     * @return\n     */\n    public channelClasses(node: AaiChannelItem): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Returns the classes that should be applied to the schema definition in the master view.\n     * @param node\n     * @return\n     */\n    public definitionClasses(node: Node): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Returns the classes that should be applied to the operation trait definition in the master view.\n     * @param node\n     * @return\n     */\n    public operationTraitClasses(node: Node): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Returns the classes that should be applied to the message trait definition in the master view.\n     * @param node\n     * @return\n     */\n    public messageTraitClasses(node: Node): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Returns the classes that should be applied to the message definition in the master view.\n     * @param node\n     * @return\n     */\n    public messageClasses(node: Node): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Opens the Add Definition Editor (full screen editor for adding a data type).\n     */\n    public openAddDefinitionEditor(): void {\n        let dtEditor: DataTypeEditorComponent = this.editors.getDataTypeEditor();\n        let handler: IDataTypeEditorHandler = {\n            onSave: (event) => {\n                this.addDefinition(event.data);\n            },\n            onCancel: () => { /* Do nothing on cancel... */ }\n        };\n        dtEditor.open(handler, this.document);\n    }\n\n    /**\n     * Opens the Add Operator Trait Editor (full screen editor for adding a data type).\n     */\n    public openAddOperationTraitEditor(): void {\n        let dtEditor: OperationTraitEditorComponent = this.editors.getOperationTraitEditor();\n        let handler: IOperationTraitEditorHandler = {\n            onSave: (event) => {\n               this.addOperationTrait(event.data);\n            },\n            onCancel: () => { /* Do nothing on cancel... */ }\n        };\n        dtEditor.open(handler, this.document);\n    }\n\n    /**\n     * Opens the Add Message Trait Editor (full screen editor for adding a data type).\n     */\n    public openAddMessageTraitEditor(): void {\n        let dtEditor: MessageTraitEditorComponent = this.editors.getMessageTraitEditor();\n        let handler: IMessageTraitEditorHandler = {\n            onSave: (event) => {\n               this.addMessageTrait(event.data);\n            },\n            onCancel: () => { /* Do nothing on cancel... */ }\n        };\n        dtEditor.open(handler, this.document);\n    }\n\n    /**\n     * Opens the Add Message Editor (full screen editor for adding a data type).\n     */\n    public openAddMessageEditor(): void {\n        let dtEditor: MessageEditorComponent = this.editors.getMessageEditor();\n        let handler: IMessageEditorHandler = {\n            onSave: (event) => {\n                this.addMessage(event.data);\n            },\n            onCancel: () => { /* Do nothing on cancel... */ }\n        };\n        dtEditor.open(handler, this.document);\n    }\n\n    importsEnabled(): boolean {\n        return this.features.getFeatures().componentImports;\n    }\n\n    importDataTypes(): void {\n        this.onImportComponent.emit(ComponentType.schema);\n    }\n\n    importMessageTraits(): void {\n        this.onImportComponent.emit(ComponentType.messageTrait);\n    }\n\n    importMessages(): void {\n        this.onImportComponent.emit(ComponentType.message);\n    }\n}\n\n/**\n * Visitor used to search through the data model for validation problems.\n */\nclass HasProblemVisitor extends CombinedAllNodeVisitor {\n\n    public problemsFound: boolean = false;\n\n    visitNode(node: Node): void {\n        if (node._validationProblems.length > 0) {\n            this.problemsFound = true;\n        }\n    }\n\n}\n","<div class=\"editor-master\">\n    <!-- Channel Context Menu -->\n    <ul id=\"channel-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'channel'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renameChannel()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"cloneChannel()\">\n                <span class=\"fa fa-clone\"></span>\n                <span>Clone</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deleteChannel()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Data Type Context Menu -->\n    <ul id=\"definition-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'definition'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renameDefinition()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"cloneDefinition()\">\n                <span class=\"fa fa-clone\"></span>\n                <span>Clone</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deleteDefinition()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Operation Trait Context Menu -->\n    <ul id=\"operationtrait-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'operationTrait'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renameOperationTrait()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deleteOperationTrait()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Message Trait Context Menu -->\n    <ul id=\"messagetrait-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'messageTrait'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renameMessageTrait()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deleteMessageTrait()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Message Context Menu -->\n    <ul id=\"message-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'message'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renameMessage()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deleteMessage()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Search - Used to Filter Channels and Data Type -->\n    <div class=\"editor-search\">\n        <search [placeholder]=\"'Search everything...'\" [searchId]=\"'masterSearch'\" (onSearch)=\"filterAll($event)\"></search>\n    </div>\n\n    <!-- Outline - Channels, Data Types, Traits -->\n    <div class=\"editor-outline\">\n        <!-- Channels Section -->\n        <section type=\"channel\" label=\"Channels\" [counterItems]=\"channels()\" [inForm]=\"false\" \n                    collaborationNodePath=\"/channels\"\n                    contextHelp=\"The core of any Async API is the set of channesl it exposes. Each channels is of the form 'channel' and can support either Publish or Subscribe operations.\">\n            <span actions>\n                <icon-button (onClick)=\"addChannelDialog.open(document, getCurrentChannelSelection())\" [pullRight]=\"true\" type=\"add\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"channel-list master-entity-list\" (keydown)=\"onChannelsKeypress($event)\" #channelList>\n                <signpost *ngIf=\"!hasChannels()\">\n                    <span>No channels have been created.</span>\n                    <a (click)=\"addChannelDialog.open(document, '')\">Add a channel</a>\n                </signpost>\n\n                <div class=\"api-channel {{ channelClasses(channel) }}\" *ngFor=\"let channel of channels()\">\n                    <div class=\"api-channel-item\" path-item [path]=\"channel.getName()\" (click)=\"channelList.focus() ; selectChannel(channel)\"\n                        (contextmenu)=\"showChannelContextMenu($event, channel)\"></div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Data Types Section -->\n        <section type=\"definition\" label=\"Data Types\" [counterItems]=\"definitions()\" [inForm]=\"false\"\n                    [collaborationNodePath]=\"definitionsPath()\"\n                    contextHelp=\"It is often necessary for many operations to publish/consume the same type of data (or a list of that same data type).  Rather than define the same data type multiple times within each operation, you can create named Data Types in this section.\">\n            <span actions>\n                <icon-button (onClick)=\"openAddDefinitionEditor()\" [pullRight]=\"true\" type=\"add\" title=\"Create Data Type\"></icon-button>\n                <icon-button *ngIf=\"importsEnabled()\" (onClick)=\"importDataTypes()\" [pullRight]=\"true\" type=\"import\" title=\"Import Data Type\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"definition-list master-entity-list\" (keydown)=\"onDefinitionsKeypress($event)\" #defList>\n                <signpost *ngIf=\"!hasDefinitions()\">\n                    <span>No reusable types have been created.</span>\n                    <a (click)=\"openAddDefinitionEditor()\">Add a data type</a>\n                </signpost>\n\n                <div definition-item *ngFor=\"let def of definitions()\" class=\"api-definition {{ definitionClasses(def) }}\" [schema]=\"def\"\n                        (click)=\"defList.focus() ; selectDefinition(def)\" (contextmenu)=\"showDefinitionContextMenu($event, def)\"></div>\n            </div>\n        </section>\n\n        <!-- Messages Section -->\n        <section type=\"message\" label=\"Messages\" [counterItems]=\"messages()\" [inForm]=\"false\"\n                 collaborationNodePath=\"/components/messages\"\n                 contextHelp=\"Reusable message properties (headers, correlationId, contentType, ...) can be defined through Messages.\">\n            <span actions>\n                <icon-button (onClick)=\"openAddMessageEditor()\" [pullRight]=\"true\" type=\"add\" title=\"Create Message\"></icon-button>\n                <icon-button *ngIf=\"importsEnabled()\" (onClick)=\"importMessages()\" [pullRight]=\"true\" type=\"import\" title=\"Import Messages\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"message-list master-entity-list\" (keydown)=\"onDefinitionsKeypress($event)\" #msgList>\n                <signpost *ngIf=\"!hasMessages()\">\n                    <span>No messages have been created.</span>\n                    <a (click)=\"openAddMessageEditor()\">Add a message</a>\n                </signpost>\n\n                <div class=\"api-message {{ messageClasses(message) }}\" *ngFor=\"let message of messages()\">\n                    <div class=\"api-message-item\" message-item [message]=\"message\"\n                         (click)=\"msgList.focus() ; selectMessage(message)\"\n                         (contextmenu)=\"showMessageContextMenu($event, message)\"></div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Operation Traits Section -->\n        <section type=\"operationtrait\" label=\"Operation Traits\" [counterItems]=\"operationTraits()\" [inForm]=\"false\"\n                    collaborationNodePath=\"/components/operationTraits\"\n                    contextHelp=\"Reusable operation properties (tags, bindings, ...) can be defined through Operation Traits.\">\n            <span actions>\n                <icon-button (onClick)=\"openAddOperationTraitEditor()\" [pullRight]=\"true\" type=\"add\" title=\"Create Operation Trait\"></icon-button>\n                <icon-button *ngIf=\"importsEnabled()\" (onClick)=\"importMessageTraits()\" [pullRight]=\"true\" type=\"import\" title=\"Import Message Traits\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"operationtrait-list master-entity-list\" (keydown)=\"onDefinitionsKeypress($event)\" #opTraitList>\n                <signpost *ngIf=\"!hasOperationTraits()\">\n                    <span>No operation traits have been created.</span>\n                    <a (click)=\"openAddOperationTraitEditor()\">Add an operation trait</a>\n                </signpost>\n\n                <div class=\"api-operationtrait {{ operationTraitClasses(operationTrait) }}\" *ngFor=\"let operationTrait of operationTraits()\">\n                    <div class=\"api-operationtrait-item\" operationtrait-item [operationTrait]=\"operationTrait\"\n                        (click)=\"opTraitList.focus() ; selectOperationTrait(operationTrait)\"\n                        (contextmenu)=\"showOperationTraitContextMenu($event, operationTrait)\"></div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Message Traits Section -->\n        <section type=\"messagetrait\" label=\"Message Traits\" [counterItems]=\"messageTraits()\" [inForm]=\"false\"\n                    collaborationNodePath=\"/components/messageTraits\"\n                    contextHelp=\"Reusable message properties (headers, correlationId, contentType, ...) can be defined through Message Traits.\">\n            <span actions>\n                <icon-button (onClick)=\"openAddMessageTraitEditor()\" [pullRight]=\"true\" type=\"add\" title=\"Create Message Trait\"></icon-button>\n                <icon-button *ngIf=\"importsEnabled()\" (onClick)=\"importMessageTraits()\" [pullRight]=\"true\" type=\"import\" title=\"Import Message Traits\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"messagetrait-list master-entity-list\" (keydown)=\"onDefinitionsKeypress($event)\" #msgTraitList>\n                <signpost *ngIf=\"!hasMessageTraits()\">\n                    <span>No message traits have been created.</span>\n                    <a (click)=\"openAddMessageTraitEditor()\">Add a message trait</a>\n                </signpost>\n\n                <div class=\"api-messagetrait {{ messageTraitClasses(messageTrait) }}\" *ngFor=\"let messageTrait of messageTraits()\">\n                    <div class=\"api-messagetrait-item\" messagetrait-item [messageTrait]=\"messageTrait\"\n                        (click)=\"msgTraitList.focus() ; selectMessageTrait(messageTrait)\"\n                        (contextmenu)=\"showMessageTraitContextMenu($event, messageTrait)\"></div>\n                </div>\n            </div>\n        </section>\n    </div>\n\n    <!-- Dialogs -->\n    <add-channel-dialog #addChannelDialog (onAdd)=\"addChannel($event)\"></add-channel-dialog>\n    <rename-entity-dialog #renameChannelDialog\n                          type=\"Channel\"\n                          title=\"Rename Channel\"\n                          warning=\"Renaming a Channel will also update its parameters.\"\n                          validationPattern=\"{{ channelNameRegex }}\"\n                          validationError=\"Enter a valid name (Channel names need to be valid URIs).\"\n                          (onRename)=\"renameChannel($event)\"></rename-entity-dialog>\n    <clone-channel-dialog #cloneChannelDialog (onClone)=\"cloneChannel($event)\"></clone-channel-dialog>\n\n    <clone-definition-dialog #cloneDefinitionDialog (onClone)=\"cloneDefinition($event)\"></clone-definition-dialog>\n    <rename-entity-dialog #renameDefinitionDialog\n                          type=\"Data Type\"\n                          title=\"Rename Data Type\"\n                          warning=\"Renaming a Data Type will also update any references to the type elsewhere in the API (e.g. operation payload bodies).\"\n                          validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                          validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                          (onRename)=\"renameDefinition($event)\"></rename-entity-dialog>\n\n    <rename-entity-dialog #renameMessageTraitDialog\n                          type=\"Message Trait\"\n                          title=\"Rename Message Trait\"\n                          warning=\"Renaming a Message Trait Type will also update any references to the trait elsewhere in the API (e.g. operation payloads).\"\n                          validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                          validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                          (onRename)=\"renameMessageTrait($event)\"></rename-entity-dialog>\n\n    <rename-entity-dialog #renameMessageDialog\n                          type=\"Message\"\n                          title=\"Rename Message\"\n                          warning=\"Renaming a Message will also update any references to the message elsewhere in the API (e.g. operation payloads).\"\n                          validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                          validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                          (onRename)=\"renameMessage($event)\"></rename-entity-dialog>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Injectable} from \"@angular/core\";\n\n/**\n * A simple Logger service.\n */\n@Injectable()\nexport class LoggerService {\n\n  constructor() {\n  }\n\n  public debug(message: any, ...optionalParams: any[]): void {\n    // tslint:disable-next-line:no-console\n    console.debug(\"_editor_::\" + message, ...optionalParams);\n  }\n\n  public info(message: any, ...optionalParams: any[]): void {\n    // tslint:disable-next-line:no-console\n    console.info(\"_editor_::\" + message, ...optionalParams);\n  }\n\n  public warn(message: any, ...optionalParams: any[]): void {\n    // tslint:disable-next-line:no-console\n    console.warn(\"_editor_::\" + message, ...optionalParams);\n  }\n\n  public error(message: any, ...optionalParams: any[]): void {\n    // tslint:disable-next-line:no-console\n    console.error(\"_editor_::\" + message, ...optionalParams);\n  }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    IOasParameterParent,\n    Library,\n    Oas20Operation,\n    Oas20PathItem,\n    Oas30Operation,\n    Oas30PathItem,\n    OasOperation,\n    OasParameter,\n    OasPathItem\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {\n    IParameterEditorHandler,\n    ParameterData,\n    ParameterEditorComponent\n} from \"../../editors/parameter-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\n\n\n@Component({\n    selector: \"query-params-section\",\n    templateUrl: \"query-params-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QueryParamsSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: Oas20Operation | Oas30Operation | Oas20PathItem | Oas30PathItem;\n    @Input() path: OasPathItem;\n\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    private _queryParameters: OasParameter[] = null;\n\n    public showSectionBody: boolean;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param commandService\n     * @param documentService\n     * @param editors\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private commandService: CommandService,\n                private documentService: DocumentService, private editors: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        this._queryParameters = null;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showSectionBody = this.hasQueryParameters();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this._queryParameters = null;\n    }\n\n    public isPathItem(): boolean {\n        return this.parent === this.path;\n    }\n\n    public contextHelp(): string {\n        if (this.isPathItem()) {\n            return `\n                Use this section to define HTTP Query Parameters for all of the Operations in this\n                path.  These query parameters will apply to all operations and can be overridden\n                (though not removed) at the operation level.`;\n        } else {\n            return `\n                An operation may, optionally, allow additional options to be sent via URL query\n                parameters.  This section allows you to document what query parameters are\n                accepted/expected by this operation.`;\n        }\n    }\n\n    public hasParameters(type: string): boolean {\n        if (!this.parent.parameters) {\n            return false;\n        }\n        return this.parent.parameters.filter((value) => {\n            return value.in === type;\n        }).length > 0;\n    }\n\n    public hasQueryParameters(): boolean {\n        return this.parent.getParametersIn(\"query\").length > 0 || this.path.getParametersIn(\"query\").length > 0;\n    }\n\n    public parameters(paramType: string): OasParameter[] {\n        let params: OasParameter[] = this.parent.getParametersIn(paramType);\n        return params.sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n    }\n\n    public queryParameters(): OasParameter[] {\n        if (this.isPathItem()) {\n            return this.parameters(\"query\");\n        }\n\n        if (this._queryParameters !== null) {\n            return this._queryParameters;\n        }\n\n        let opParams: OasParameter[] = this.parameters(\"query\");\n        let piParams: OasParameter[] = this.path.getParametersIn(\"query\");\n        let hasOpParam = function(param: OasParameter): boolean {\n            var found: boolean = false;\n            opParams.forEach( opParam => {\n                if (opParam.name === param.name) {\n                    found = true;\n                }\n            });\n            return found;\n        };\n        piParams.forEach( param => {\n            if (!hasOpParam(param)) {\n                let missingParam: OasParameter = this.parent.createParameter();\n                Library.readNode(Library.writeNode(param), missingParam);\n                missingParam.setAttribute(\"missing\", true);\n                opParams.push(missingParam);\n            }\n        });\n        this._queryParameters = opParams.sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n        return this._queryParameters;\n    }\n\n    public queryParameterPaths(): string[] {\n        return this.parent.getParametersIn(\"query\").map( param => {\n            return ModelUtils.nodeToPath(param);\n        });\n    }\n\n    public openAddQueryParamEditor(): void {\n        let editor: ParameterEditorComponent = this.editors.getParameterEditor();\n        editor.setParamType(\"query\");\n        let handler: IParameterEditorHandler = {\n            onSave: (event) => {\n                this.addQueryParam(event.data);\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.parent);\n    }\n\n    public deleteAllQueryParams(): void {\n        let command: ICommand = CommandFactory.createDeleteAllParametersCommand(this.parent, \"query\");\n        this.commandService.emit(command);\n    }\n\n    public deleteParam(parameter: OasParameter): void {\n        let command: ICommand = CommandFactory.createDeleteParameterCommand(parameter);\n        this.commandService.emit(command);\n    }\n\n    public addQueryParam(data: ParameterData): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.parent, data.name,\n            \"query\", data.description, data.type, false);\n        this.commandService.emit(command);\n\n        let nodePath = Library.createNodePath(this.parent);\n        let index: number = (this.parent as any).parameters.findIndex(p => p.name === data.name); // TODO hackish\n        nodePath.appendSegment(\"parameters\", false);\n        nodePath.appendSegment(String(index), true);\n    }\n\n    /**\n     * Opens the rename parameter dialog.\n     * @param parameter\n     */\n    public openRenameDialog(parameter: OasParameter): void {\n        let parent: IOasParameterParent = <any>parameter.parent();\n        let paramNames: string[] = parent.getParametersIn(\"query\").map( param => { return param.name; });\n        this.renameDialog.open(parameter, parameter.name, newName => {\n            return paramNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the parameter.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        let parameter: OasParameter = <any>event.entity;\n        let parent: OasPathItem | OasOperation = <any>parameter.parent();\n        let command: ICommand = CommandFactory.createRenameParameterCommand(parent, parameter.name, event.newName, \"query\");\n        this.commandService.emit(command);\n    }\n\n}\n","<!-- Query Parameters Section -->\n<section type=\"query-parameters\" label=\"QUERY PARAMETERS\"\n         [counterItems]=\"queryParameters()\"\n         [contextHelp]=\"contextHelp()\" [expanded]=\"showSectionBody\"\n         [collaborationNodePath]=\"queryParameterPaths()\"\n         [validationModels]=\"queryParameters()\">\n    <span actions>\n        <icon-button (onClick)=\"openAddQueryParamEditor()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a new query parameter.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllQueryParams()\" [disabled]=\"!hasQueryParameters()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete all query parameters.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasQueryParameters()\">\n            <span>No query parameters have been defined.</span>\n            <a (click)=\"openAddQueryParamEditor()\">Add a query parameter</a>\n        </signpost>\n\n        <!-- The list of query parameters -->\n        <div class=\"container-fluid query-parameters typed-item-list\" *ngIf=\"hasQueryParameters()\">\n            <query-param-row *ngFor=\"let param of queryParameters()\" [item]=\"param\"\n                             (onRename)=\"openRenameDialog(param)\"\n                             (onDelete)=\"deleteParam(param)\"></query-param-row>\n        </div>\n    </div>\n</section>\n<rename-entity-dialog #renameDialog\n                      type=\"Query Parameter\"\n                      title=\"Rename Query Parameter\"\n                      warning=\"Renaming a Query Parameter may also update any query parameters with the same name depending on path and operation hierarchies.\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_\\$]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters, ., -, _ and $ are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2019 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class KeypressUtils {\n\n    /**\n     * Returns true if the given keyboard event is for pressing the Escape key on the keyboard.\n     * @param event\n     * @param allowModifiers\n     */\n    public static isEscapeKey(event: KeyboardEvent, allowModifiers: boolean = true): boolean {\n        if (event.key === \"Escape\" || event.keyCode === 27) {\n            return allowModifiers || (!event.metaKey && !event.altKey && !event.ctrlKey);\n        }\n        return false;\n    }\n\n    /**\n     * Returns true if the given keyboard event is from pressing the Enter key.\n     * @param event\n     */\n    public static isEnterKey(event: KeyboardEvent): boolean {\n        return event.key === \"Enter\" || event.keyCode === 10 || event.keyCode === 13;\n    }\n\n\n    /**\n     * Returns true if the given keyboard event is from pressing the Enter key.\n     * @param event\n     */\n    public static isCtrlEnterKey(event: KeyboardEvent): boolean {\n        return event.ctrlKey && KeypressUtils.isEnterKey(event);\n    }\n\n    /**\n     * Returns true if the given keyboard event is an UpArrow keypress.\n     * @param event\n     */\n    public static isUpArrow(event: KeyboardEvent): boolean {\n        return event.key === \"ArrowUp\" || event.keyCode === 38;\n    }\n\n    /**\n     * Returns true if the given keyboard event is a DownArrow keypress.\n     * @param event\n     */\n    public static isDownArrow(event: KeyboardEvent): boolean {\n        return event.key === \"ArrowDown\" || event.keyCode === 40;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    EventEmitter,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    AaiChannelItem,\n    AaiDocument,\n    CombinedVisitorAdapter, CommandFactory,\n    DocumentType,\n    ICommand,\n    IValidationSeverityRegistry,\n    Library,\n    Node,\n    NodePath,\n    Aai20SchemaDefinition,\n    AaiOperationTraitDefinition,\n    AaiMessageTraitDefinition,\n    OtCommand,\n    OtEngine,\n    ValidationProblem, AaiMessage, IDocumentValidatorExtension\n} from \"@apicurio/data-models\";\nimport {AsyncApiEditorMasterComponent} from \"./_components/aaimaster.component\";\nimport {SelectionService} from \"./_services/selection.service\";\nimport {CommandService} from \"./_services/command.service\";\nimport {DocumentService} from \"./_services/document.service\";\nimport {EditorsService, IEditorsProvider} from \"./_services/editors.service\";\nimport {ServerEditorComponent} from \"./_components/editors/server-editor.component\";\nimport {SecuritySchemeEditorComponent} from \"./_components/editors/security-scheme-editor.component\";\nimport {SecurityRequirementEditorComponent} from \"./_components/editors/security-requirement-editor.component\";\nimport {DataTypeEditorComponent} from \"./_components/editors/data-type-editor.component\";\nimport {ParameterEditorComponent} from \"./_components/editors/parameter-editor.component\";\nimport {PropertyEditorComponent} from \"./_components/editors/property-editor.component\";\nimport {ResponseEditorComponent} from \"./_components/editors/response-editor.component\";\nimport {OperationTraitEditorComponent} from \"./_components/editors/operationtrait-editor.component\";\nimport {MessageTraitEditorComponent} from \"./_components/editors/messagetrait-editor.component\";\nimport {ApiEditorComponentFeatures} from \"./_models/features.model\";\nimport {FeaturesService} from \"./_services/features.service\";\nimport {CollaboratorService} from \"./_services/collaborator.service\";\nimport {ApiCatalogService} from \"./_services/api-catalog.service\";\nimport {ArrayUtils, TopicSubscription} from \"apicurio-ts-core\";\nimport {AbstractApiEditorComponent} from \"./editor.base\";\nimport {ComponentType} from \"./_models/component-type.model\";\nimport {ImportedComponent} from \"./_models/imported-component.model\";\nimport * as YAML from 'js-yaml';\nimport {AaiServerEditorComponent} from \"./_components/editors/aaiserver-editor.component\";\nimport {MessageEditorComponent} from \"./_components/editors/message-editor.component\";\nimport {OneOfInMessageEditorComponent} from \"./_components/editors/oneof-in-message-editor.component\";\nimport {ApiDefinition} from \"./_models/api.model\";\nimport {CodeEditorMode, CodeEditorTheme} from \"./_components/common/code-editor.component\";\nimport {VersionedAck} from \"./_models/ack.model\";\nimport {ApiEditorUser} from \"./_models/editor-user.model\";\n\n\n@Component({\n    selector: \"aai-editor\",\n    templateUrl: \"aaieditor.component.html\",\n    styleUrls: [\"aaieditor.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AaiEditorComponent extends AbstractApiEditorComponent implements OnChanges, OnInit, OnDestroy, IEditorsProvider {\n\n    @Input() api: ApiDefinition;\n    @Input() embedded: boolean;\n    @Input() features: ApiEditorComponentFeatures;\n    @Input() validationRegistry: IValidationSeverityRegistry;\n    @Input() validationExtensions: IDocumentValidatorExtension[] = [];\n    @Input() contentFetcher: (externalReference: string) => Promise<any>;\n    @Input() componentImporter: (componentType: ComponentType) => Promise<ImportedComponent[]>;\n\n    @Output() onCommandExecuted: EventEmitter<OtCommand> = new EventEmitter<OtCommand>();\n    @Output() onSelectionChanged: EventEmitter<string> = new EventEmitter<string>();\n    @Output() onValidationChanged: EventEmitter<ValidationProblem[]> = new EventEmitter<ValidationProblem[]>();\n    @Output() onUndo: EventEmitter<OtCommand> = new EventEmitter<OtCommand>();\n    @Output() onRedo: EventEmitter<OtCommand> = new EventEmitter<OtCommand>();\n    @Output() onConfigureValidation: EventEmitter<void> = new EventEmitter<void>();\n\n    private _document: AaiDocument = null;\n    private _otEngine: OtEngine = null;\n    _undoableCommandCount: number = 0;\n    _redoableCommandCount: number = 0;\n\n    theme: string = \"light\";\n\n    sourceOriginal: string = \"\";\n    sourceValue: string = \"\";\n    sourceIsValid: boolean = true;\n\n    private currentSelection: NodePath;\n    private currentSelectionType: string;\n    private currentSelectionNode: Node;\n    public validationErrors: ValidationProblem[] = [];\n\n    private _selectionSubscription: TopicSubscription<string>;\n    private _commandSubscription: TopicSubscription<ICommand>;\n    private _catalogSubscription: TopicSubscription<any>;\n\n    @ViewChild(\"master\", { static: true }) master: AsyncApiEditorMasterComponent;\n    @ViewChild(\"aaiServerEditor\", { static: true }) aaiServerEditor: AaiServerEditorComponent;\n    @ViewChild(\"securitySchemeEditor\", { static: true }) securitySchemeEditor: SecuritySchemeEditorComponent;\n    @ViewChild(\"securityRequirementEditor\", { static: true }) securityRequirementEditor: SecurityRequirementEditorComponent;\n    @ViewChild(\"dataTypeEditor\", { static: true }) dataTypeEditor: DataTypeEditorComponent;\n    @ViewChild(\"operationTraitEditor\", { static: true }) operationTraitEditor: OperationTraitEditorComponent;\n    @ViewChild(\"messageTraitEditor\", { static: true }) messageTraitEditor: MessageTraitEditorComponent;\n    @ViewChild(\"messageEditor\", { static: true }) messageEditor: MessageEditorComponent;\n    @ViewChild(\"oneOfInMessageEditor\", { static: true }) oneOfInMessageEditor: OneOfInMessageEditorComponent;\n    @ViewChild(\"propertyEditor\", { static: true }) propertyEditor: PropertyEditorComponent;\n\n\n    formType: string;\n\n    /**\n     * Constructor.\n     * @param selectionService\n     * @param commandService\n     * @param documentService\n     * @param editorsService\n     * @param featuresService\n     * @param collaboratorService\n     */\n    constructor(private selectionService: SelectionService, private commandService: CommandService,\n                private documentService: DocumentService, private editorsService: EditorsService,\n                private featuresService: FeaturesService, private collaboratorService: CollaboratorService,\n                private catalog: ApiCatalogService) {\n        super();\n\n        console.debug(\"[AsyncApiEditorComponent] Subscribing to API Catalog changes.\");\n        this._catalogSubscription = this.catalog.changes().subscribe( () => {\n            console.debug(\"[AsyncApiEditorComponent] Re-validating model due to API Catalog change.\");\n            // Re-validate whenever the contents of the API catalog change\n            this.validateModel().then(() => {\n                // Make sure any validation widgets refresh themselves\n                this.documentService.emitChange();\n            });\n        });\n    }\n\n    /**\n     * Called when the editor is initialized by angular.\n     */\n    public ngOnInit(): void {\n        let me: AaiEditorComponent = this;\n        this._selectionSubscription = this.selectionService.selection().subscribe( selectedPath => {\n            if (selectedPath) {\n                console.info(\"[AsyncApiEditorComponent] Node selection detected (from the selection service)\")\n                me.onNodeSelected(selectedPath);\n            }\n        });\n        this._commandSubscription = this.commandService.commands().subscribe( command => {\n            if (command) {\n                console.info(\"[AsyncApiEditorComponent] Command execution detected (from the command service)\")\n                me.onCommand(command);\n            }\n        });\n    }\n\n    /**\n     * Called when angular destroys the editor component.\n     */\n    public ngOnDestroy(): void {\n        this._selectionSubscription.unsubscribe();\n        this._commandSubscription.unsubscribe();\n        this._catalogSubscription.unsubscribe();\n    }\n\n    /**\n     * Called when the @Input changes.\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes[\"contentFetcher\"]) {\n            this.catalog.setFetcher(this.contentFetcher);\n        }\n\n        if (changes[\"api\"]) {\n            this.selectionService.reset();\n            this.collaboratorService.reset();\n            this.commandService.reset();\n            this.documentService.reset();\n            this.editorsService.setProvider(this);\n\n            this._document = null;\n            this._otEngine = null;\n            this._undoableCommandCount = 0;\n            this._redoableCommandCount = 0;\n            this.formType = \"main_20\";\n\n            // Fire an event in the doc service indicating that there is a new document.\n            this.documentService.setDocument(this.document());\n            this.selectionService.selectRoot();\n\n            this.catalog.reset(this.document());\n        }\n\n        if (changes[\"features\"]) {\n            if (this.features) {\n                this.featuresService.setFeatures(this.features);\n            } else {\n                this.featuresService.setFeatures(new ApiEditorComponentFeatures());\n            }\n        }\n\n        if (changes[\"validationRegistry\"]) {\n            this.validateModel().then(() => this.documentService.emitChange());\n        }\n    }\n\n    sourceTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    sourceMode(): CodeEditorMode {\n        return CodeEditorMode.YAML;\n    }\n\n    isDirty(): boolean {\n        return this.sourceOriginal != this.sourceValue;\n    }\n\n    /**\n     * Gets the spec as a document.\n     */\n    public document(): AaiDocument {\n        if (this._document === null && this.api) {\n            try {\n                if (typeof this.api.spec == \"object\") {\n                    this._document = <AaiDocument> Library.readDocument(this.api.spec);\n                } else {\n                    this._document = <AaiDocument> Library.readDocumentFromJSONString(<string>this.api.spec);\n                }\n                console.info(\"[AsyncApiEditorComponent] Loaded AAI content: \", this._document);\n            } catch (e) {\n                console.error(e);\n                // If we can't process the document, then just create a new one\n                this._document = <AaiDocument> Library.createDocument(DocumentType.asyncapi2);\n            }\n            this.validateModel();\n            let sourceJs: any = Library.writeNode(this._document);\n            this.sourceValue = YAML.safeDump(sourceJs, {\n                indent: 4,\n                lineWidth: 110,\n                noRefs: true\n            });\n            this.sourceOriginal = this.sourceValue;\n            this.sourceIsValid = true;\n        }\n        return this._document;\n    }\n\n    /**\n     * Lazy getter for the OtEngine.\n     */\n    public otEngine(): OtEngine {\n        if (this._otEngine === null) {\n            this._otEngine = new OtEngine(this.document());\n            this._undoableCommandCount = 0;\n            this._redoableCommandCount = 0;\n        }\n        return this._otEngine;\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n    }\n\n    /**\n     * Called when the user clicks the Undo button or uses the Ctrl-z hotkey.\n     */\n    public undoLastCommand(): void {\n        if (this._undoableCommandCount === 0) {\n            return;\n        }\n        console.info(\"[AsyncApiEditorComponent] User wants to 'undo' the last command.\");\n        this.preDocumentChange();\n        let cmd: OtCommand = this.otEngine().undoLastLocalCommand();\n        // TODO if the command is \"pending\" we need to hold on to the \"undo\" event until we get the ACK for the command - then we can send the \"undo\" with the updated contentVersion\n        if (cmd !== null) {\n            this.postDocumentChange();\n\n            this.onUndo.emit(cmd);\n            this._undoableCommandCount--;\n            this._redoableCommandCount++;\n        }\n    }\n\n    /**\n     * Called when the user clicks the Redo button or uses the Ctrl-y hotkey.\n     */\n    public redoLastCommand(): void {\n        if (this._redoableCommandCount === 0) {\n            return;\n        }\n        console.info(\"[AsyncApiEditorComponent] User wants to 'redo' the last command.\");\n        this.preDocumentChange();\n        let cmd: OtCommand = this.otEngine().redoLastLocalCommand();\n        // TODO if the command is \"pending\" we need to hold on to the \"undo\" event until we get the ACK for the command - then we can send the \"undo\" with the updated contentVersion\n        if (cmd !== null) {\n            this.postDocumentChange();\n\n            this.onRedo.emit(cmd);\n            this._undoableCommandCount++;\n            this._redoableCommandCount--;\n        }\n    }\n\n    /**\n     * Called when an editor component creates a command that should be executed.\n     * @param command\n     */\n    protected onCommand(command: ICommand): void {\n        let otCmd: OtCommand = new OtCommand();\n        otCmd.command = command;\n        otCmd.contentVersion = Date.now();\n\n        this.preDocumentChange();\n        this.otEngine().executeCommand(otCmd, true);\n\n        this.onCommandExecuted.emit(otCmd);\n        this.postDocumentChange();\n\n        // If we're in embedded mode, immediately finalize the command (no collaboration server is present)\n        if (this.embedded) {\n            this.finalizeCommand({\n                commandId: otCmd.contentVersion,\n                contentVersion: otCmd.contentVersion,\n                ackType: \"command\"\n            });\n        }\n\n        this._undoableCommandCount++;\n        this._redoableCommandCount = 0;\n    }\n\n    /**\n     * Executes a command.  Called by the parent of this component when detecting that\n     * another user has executed a command.  In other words, this command is *not*\n     * performed by the local user.\n     * @param command\n     */\n    public executeCommand(command: OtCommand): void {\n        this.preDocumentChange();\n        this.otEngine().executeCommand(command, false);\n        this.postDocumentChange();\n    }\n\n    /**\n     * Call this to undo a command.  Typically this is used to undo commands from\n     * remote collaborators after receiving an async message from the server.\n     * @param command\n     */\n    public undoCommand(command: OtCommand | number | string): void {\n        if (command) {\n            this.preDocumentChange();\n            if (typeof command === \"number\") {\n                this.otEngine().undo(command as number);\n            } else if (typeof command === \"string\") {\n                this.otEngine().undo(Number(command as string));\n            } else {\n                this.otEngine().undo(command.contentVersion);\n            }\n            this.postDocumentChange();\n        }\n    }\n\n    /**\n     * Call this to redo a command.  Typically this is used to undo commands from\n     * remote collaborators after receiving an async message from the server.\n     * @param command\n     */\n    public redoCommand(command: OtCommand | number): void {\n        if (command) {\n            this.preDocumentChange();\n            if (typeof command === \"number\") {\n                this.otEngine().redo(command as number);\n            } else if (typeof command === \"string\") {\n                this.otEngine().redo(Number(command as string));\n            } else {\n                this.otEngine().redo(command.contentVersion);\n            }\n            this.postDocumentChange();\n        }\n    }\n\n    /**\n     * Finalizes a command.\n     * @param ack\n     */\n    public finalizeCommand(ack: VersionedAck): void {\n        this.otEngine().finalizeCommand(ack.commandId, ack.contentVersion);\n    }\n\n    /**\n     * Called to update the selection state of the given remote API editor (i.e. an active collaborator).\n     * @param user\n     * @param selection\n     */\n    public updateCollaboratorSelection(user: ApiEditorUser, selection: string): void {\n        this.collaboratorService.setCollaboratorSelection(user, selection);\n    }\n\n    /**\n     * Called when the user selects a node in some way.\n     * @param path\n     */\n    public onNodeSelected(path: string): void {\n        console.info(\"[AsyncApiEditorComponent] Selection changed to path: %s\", path);\n\n        this.updateFormDisplay(path);\n\n        this.onSelectionChanged.emit(path);\n    }\n\n    /**\n     * Called to update which form is displayed (the details view).\n     * @param path\n     */\n    private updateFormDisplay(path: string): void {\n        let npath: NodePath = new NodePath(path);\n\n        let visitor: FormSelectionVisitor = new FormSelectionVisitor(\"20\");\n        npath.resolveWithVisitor(this.document(), visitor);\n\n        this.currentSelection = npath;\n        this.formType = visitor.formType();\n        this.currentSelectionNode = visitor.selection();\n        this.currentSelectionType = visitor.selectionType();\n    }\n\n    /**\n     * Called to validate the model.\n     */\n    public async validateModel(): Promise<void> {\n        try {\n            let doc: AaiDocument = this.document();\n            let oldValidationErrors: ValidationProblem[] = this.validationErrors;\n            this.validationErrors = await Library.validateDocument(doc, this.validationRegistry, this.validationExtensions);\n            if (!ArrayUtils.equals(oldValidationErrors, this.validationErrors)) {\n                this.onValidationChanged.emit(this.validationErrors);\n            }\n        } catch (e) {\n            console.info(\"[AsyncApiEditorComponent] Error validating model: \", e);\n        }\n    }\n\n    /**\n     * Returns the currently selected channel item.\n     * @return\n     */\n    public selectedChannel(): AaiChannelItem {\n        if (this.currentSelectionType === \"channel\") {\n            return this.currentSelectionNode as AaiChannelItem;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the currently selected definition.\n     * @return\n     */\n    public selectedDefinition(): Aai20SchemaDefinition {\n        if (this.currentSelectionType === \"definition\") {\n            return this.currentSelectionNode as Aai20SchemaDefinition;\n        } else {\n            return null;\n        }\n    }\n\n    public deselectDefinition(): void {\n        this.master.deselectDefinition();\n    }\n\n    public selectedOperationTrait(): AaiOperationTraitDefinition {\n        if (this.currentSelectionType === \"operationTrait\") {\n            return this.currentSelectionNode as AaiOperationTraitDefinition;\n        } else {\n            return null;\n        }\n    }\n\n    public selectedMessageTrait(): AaiMessageTraitDefinition {\n        if (this.currentSelectionType === \"messageTrait\") {\n            return this.currentSelectionNode as AaiMessageTraitDefinition;\n        } else {\n            return null;\n        }\n    }\n\n    public selectedMessage(): AaiMessage {\n        if (this.currentSelectionType === \"message\") {\n            return this.currentSelectionNode as AaiMessage;\n        } else {\n            return null;\n        }\n    }\n\n    public preDocumentChange(): void {\n        // Before changing the document, let's clear/reset the current selection\n        this.selectionService.clearAllSelections();\n    }\n\n    public postDocumentChange(): void {\n        // After changing the model, we need to ensure all selections are still valid\n        this.selectionService.reselectAll();\n\n        // After changing the model, we should re-validate it\n        this.validateModel().then(() => {\n            // Update the form being displayed (this might change if the thing currently selected was deleted)\n            this.updateFormDisplay(this.selectionService.currentSelection());\n\n            // Potentially update the API catalog\n            this.catalog.update(this.documentService.currentDocument());\n\n            // Set the current state\n            this.sourceOriginal = this.sourceValue;\n            this.sourceIsValid = true;\n\n            // Fire a change event in the document service\n            this.documentService.emitChange();\n        });\n    }\n\n    /**\n     * Called to get the current value in the editor.\n     * @return\n     */\n    public getValue(): ApiDefinition {\n        let apiDef: ApiDefinition = new ApiDefinition();\n        apiDef.id = this.api.id;\n        apiDef.createdBy = this.api.createdBy;\n        apiDef.createdOn = this.api.createdOn;\n        apiDef.description = this.api.description;\n        apiDef.name = this.api.name;\n        apiDef.tags = this.api.tags;\n        let doc: AaiDocument = this.document();\n        apiDef.spec = Library.writeNode(doc);\n        return apiDef;\n    }\n\n    /**\n     * Call this to select some content in the open document by the content's node path.  If highlight\n     * is true then the appropriate content section is also highlighted and scrolled into view.\n     * @param path\n     * @param highlight\n     */\n    public select(path: string, highlight: boolean = true): void {\n        // TODO what to do here?  ignore for now\n    }\n\n    /**\n     * Called when the user clicks save.\n     */\n    public saveSource(): void {\n        console.info(\"[AsyncApiEditorComponent] Saving source code changes\");\n        try {\n            let doc: AaiDocument = this.document();\n            let newJs: any = YAML.safeLoad(this.sourceValue);\n            let newDoc: AaiDocument = Library.readDocument(newJs) as AaiDocument;\n            let command: ICommand = CommandFactory.createReplaceDocumentCommand(doc, newDoc);\n            this.commandService.emit(command);\n        } catch (e) {\n            console.warn(\"[AsyncApiEditorComponent] Error saving source changes: \", e);\n        }\n    }\n\n    /**\n     * Called when the user clicks revert.\n     */\n    public revertSource(): void {\n        console.info(\"[AsyncApiEditorComponent] Reverting source code changes\");\n        this.sourceValue = this.sourceOriginal;\n    }\n\n    /**\n     * Validates that the current source text is valid.\n     */\n    public validate(): void {\n        try {\n            YAML.safeLoad(this.sourceValue);\n            this.sourceIsValid = true;\n        } catch (e) {\n            this.sourceIsValid = false;\n        }\n    }\n\n    // Implementation of IEditorsProvider ----------------------------------\n\n    public getServerEditor(): ServerEditorComponent {\n        return null;\n    }\n\n    public getAaiServerEditor(): AaiServerEditorComponent {\n        return this.aaiServerEditor;\n    }\n\n    public getSecuritySchemeEditor(): SecuritySchemeEditorComponent {\n        return this.securitySchemeEditor;\n    }\n\n    public getSecurityRequirementEditor(): SecurityRequirementEditorComponent {\n        return this.securityRequirementEditor;\n    }\n\n    public getDataTypeEditor(): DataTypeEditorComponent {\n        return this.dataTypeEditor;\n    }\n\n    public getResponseEditor(): ResponseEditorComponent {\n        return null;\n    }\n\n    public getParameterEditor(): ParameterEditorComponent {\n        return null;\n    }\n\n    public getPropertyEditor(): PropertyEditorComponent {\n        return this.propertyEditor;\n    }\n\n    public getOperationTraitEditor(): OperationTraitEditorComponent {\n        return this.operationTraitEditor;\n    }\n\n    public getMessageTraitEditor(): MessageTraitEditorComponent {\n        return this.messageTraitEditor;\n    }\n\n    public getMessageEditor(): MessageEditorComponent {\n        return this.messageEditor;\n    }\n\n    public getOneOfInMessageEditor(): OneOfInMessageEditorComponent {\n        return this.oneOfInMessageEditor;\n    }\n\n    importComponent(type: ComponentType) {\n        if (this.componentImporter) {\n            this.componentImporter(type).then(imports => {\n                let commands: ICommand[] = [];\n\n                imports.forEach(imp => {\n                    console.info(\"[AsyncApiEditorComponent] Importing component: \", imp.name);\n                    // TODO check for name collisions\n                    let name: string = imp.name;\n                    let fromRef: any = {$ref: imp.$ref};\n                    if (imp.type === ComponentType.schema) {\n                        commands.push(CommandFactory.createAddSchemaDefinitionCommand(this.document().getDocumentType(), name, fromRef));\n                    } else if (type === ComponentType.messageTrait) {\n                        //commands.push(CommandFactory.createAddResponseDefinitionCommand(this.document().getDocumentType(), name, fromRef));\n                    } else if (type === ComponentType.message) {\n                        // commands.push(CommandFactory.createNewMessageDefinitionCommand(imp.name, fromRef));\n                    }\n                });\n\n                if (commands != null && commands.length == 1) {\n                    console.info(\"[AsyncApiEditorComponent] Importing a single component.\");\n                    this.commandService.emit(commands[0]);\n                } else if (commands != null && commands.length > 1) {\n                    console.info(\"[AsyncApiEditorComponent] Importing multiple components. :: \", commands.length);\n                    let aggregateInfo: any = {\n                        type: type,\n                        numComponents: commands.length\n                    };\n                    this.commandService.emit(CommandFactory.createAggregateCommand(\"ImportedComponents\", aggregateInfo, commands));\n                }\n            }).catch(error => {\n                // FIXME what to do if we get an error???\n            });\n        }\n    }\n\n}\n\n/**\n * Visitor used to determine what form should be displayed based on the selected node.\n */\nexport class FormSelectionVisitor extends CombinedVisitorAdapter {\n\n    public _selectionType: string = \"main\";\n    public _selectedNode: Node = null;\n\n    constructor(private version: string) {\n        super();\n    }\n\n    public selectionType(): string {\n        return this._selectionType;\n    }\n\n    public formType(): string {\n        return this._selectionType + \"_\" + this.version;\n    }\n\n    public selection(): Node {\n        return this._selectedNode;\n    }\n\n    public visitChannelItem(node: AaiChannelItem): void {\n        this._selectedNode = node;\n        this._selectionType = \"channel\";\n    }\n\n    public visitSchemaDefinition(node: Aai20SchemaDefinition): void {\n        this._selectedNode = node;\n        this._selectionType = \"definition\";\n    }\n\n    public visitOperationTraitDefinition(node: AaiOperationTraitDefinition): void {\n        this._selectedNode = node;\n        this._selectionType = \"operationTrait\";\n    }\n\n    public visitMessageTraitDefinition(node: AaiMessageTraitDefinition): void {\n        this._selectedNode = node;\n        this._selectionType = \"messageTrait\";\n    }\n\n    public visitMessage(node: AaiMessage): void {\n        this._selectedNode = node;\n        this._selectionType = \"message\";\n    }\n}\n","<div (window:keydown)=\"onGlobalKeyDown($event)\" class=\"aai-editor\" [class.light]=\"theme === 'light'\" [class.dark]=\"theme === 'dark'\">\n\n    <title-bar [document]=\"document()\" \n               [validationErrors]=\"validationErrors\" \n               [undoableCommandCount]=\"_undoableCommandCount\" \n               [redoableCommandCount]=\"_redoableCommandCount\" \n               (onUndoClick)=\"undoLastCommand()\" \n               (onRedoClick)=\"redoLastCommand()\" \n               (onConfigureValidation)=\"onConfigureValidation.emit()\"></title-bar>\n\n    <aaimaster [document]=\"document()\" (onImportComponent)=\"importComponent($event)\" #master></aaimaster>\n    <div class=\"editor-detail\" [ngSwitch]=\"formType\">\n        <aaimain-form [document]=\"document()\" class=\"editor-detail-form\" \n                         *ngSwitchCase=\"'main_20'\"></aaimain-form>\n        <channel-form [channel]=\"selectedChannel()\" class=\"editor-detail-form\"\n                         *ngSwitchCase=\"'channel_20'\"></channel-form>\n        <definition-form [definition]=\"selectedDefinition()\" class=\"editor-detail-form\"\n                         *ngSwitchCase=\"'definition_20'\"></definition-form>\n        <operationtrait-form [operationTrait]=\"selectedOperationTrait()\" class=\"editor-detail-form\"\n                         *ngSwitchCase=\"'operationTrait_20'\"></operationtrait-form>\n        <messagetrait-form [messageTrait]=\"selectedMessageTrait()\" class=\"editor-detail-form\"\n                            *ngSwitchCase=\"'messageTrait_20'\"></messagetrait-form>\n        <message-form [message]=\"selectedMessage()\" class=\"editor-detail-form\"\n                           *ngSwitchCase=\"'message_20'\"></message-form>\n    </div>\n\n    <data-type-editor #dataTypeEditor></data-type-editor>\n    <aaiserver-editor #aaiServerEditor></aaiserver-editor>\n    <security-scheme-editor #securitySchemeEditor></security-scheme-editor>\n    <security-requirement-editor #securityRequirementEditor></security-requirement-editor>\n    <operationtrait-editor #operationTraitEditor></operationtrait-editor>\n    <messagetrait-editor #messageTraitEditor></messagetrait-editor>\n    <message-editor #messageEditor></message-editor>\n    <property-editor #propertyEditor></property-editor>\n\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {ObjectUtils, StringUtils} from \"apicurio-ts-core\";\nimport {CodeEditorComponent, CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\nimport * as YAML from 'js-yaml';\nimport {Oas20Schema, Oas30Example} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\nexport interface EditExample20Event {\n    contentType: string;\n    value: any;\n}\n\n@Component({\n    selector: \"edit-example-20-dialog\",\n    templateUrl: \"edit-example-20.component.html\",\n    styleUrls: [ \"edit-example.component.css\" ]\n})\nexport class EditExample20DialogComponent {\n\n    @Input() schema: Oas20Schema;\n    @Output() onEdit: EventEmitter<EditExample20Event> = new EventEmitter<EditExample20Event>();\n\n    @ViewChildren(\"editExampleModal\") editExampleModal: QueryList<ModalDirective>;\n    @ViewChildren(\"codeEditor\") codeEditor: QueryList<CodeEditorComponent>;\n\n    private example: Oas30Example;\n    private _isOpen: boolean = false;\n\n    model: any = {\n        contentType: null,\n        value: null,\n        format: CodeEditorMode.JSON,\n        valid: true\n    };\n\n    get value() {\n        return this.model.value;\n    }\n    set value(value: string) {\n        this.setValueFormatFromValue(value);\n        this.model.value = value;\n    }\n\n    /**\n     * Called to open the dialog.\n     * @param contentType\n     * @param value\n     */\n    public open(contentType: string, value: any): void {\n        this._isOpen = true;\n        this.model = {\n            contentType: contentType,\n            value: null,\n            format: CodeEditorMode.JSON,\n            valid: true\n        };\n\n        let val: any = value;\n        if (typeof val === \"object\" || Array.isArray(val)) {\n            val = JSON.stringify(val, null, 4);\n        }\n\n        this.model.value = val;\n        this.setValueFormatFromValue(val);\n\n        this.editExampleModal.changes.subscribe( () => {\n            if (this.editExampleModal.first) {\n                this.editExampleModal.first.show();\n            }\n        });\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"edit\".\n     */\n    edit(): void {\n        let event: EditExample20Event = {\n            contentType: this.model.contentType,\n            value: this.model.value\n        };\n\n        // Convert to jsobject if the data is JSON and is valid\n        if (this.model.valid && this.model.format === CodeEditorMode.JSON) {\n            try {\n                event.value = JSON.parse(this.model.value);\n            } catch (e) {\n                console.error(\"[EditExample20DialogComponent] Failed to parse example.\");\n            }\n        }\n        this.onEdit.emit(event);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.editExampleModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     *\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    valueEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    valueEditorMode(): CodeEditorMode {\n        return this.model.format;\n    }\n\n    hasValue(): boolean {\n        return !ObjectUtils.isNullOrUndefined(this.model.value);\n    }\n\n    /**\n     * @param value\n     */\n    private setValueFormatFromValue(value: string): void {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {}\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {}\n        }\n    }\n\n    canGenerateExample(): boolean {\n        return this.schema !== null && this.schema !== undefined;\n    }\n\n    generate(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.schema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.codeEditor.first.setText(exampleStr);\n    }\n\n}\n","<!-- Edit Example Dialog -->\n<div>\n    <div bsModal #editExampleModal=\"bs-modal\" class=\"modal fade\" id=\"editExampleModal\" tabindex=\"-1\" role=\"dialog\" [config]=\"{ backdrop: true }\"\n         aria-labelledby=\"editExampleModalLabel\" role=\"dialog\" aria-hidden=\"true\" *ngIf=\"isOpen()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"editExampleModalLabel\">Edit Example</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter the new example value below and then click Edit.</p>\n                    <form id=\"editexample-form\" class=\"form-horizontal\" #editExampleForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"example\">\n                            <code-editor [theme]=\"valueEditorTheme()\" #codeEditor\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"200\"\n                                         [(text)]=\"value\"\n                                         [editorStyle]=\"{ position: 'relative', height: '300px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button type=\"button\" title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generate()\"\n                                    *ngIf=\"canGenerateExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"edit()\"\n                            [disabled]=\"!editExampleForm.form.valid || !hasValue()\">Edit</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    ICommand,\n    Library,\n    OasDocument,\n    OasTag,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\n\n\n@Component({\n    selector: \"tags-section\",\n    templateUrl: \"tags-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagsSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument;\n\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns the list of tags defined in the document.\n     * @return\n     */\n    public tags(): OasTag[] {\n        let tags: OasTag[] = this.document.tags;\n        if (ObjectUtils.isNullOrUndefined(tags)) {\n            tags = [];\n        }\n        // Clone the array\n        tags = tags.slice(0);\n        // Sort it\n        tags.sort( (obj1, obj2) => {\n            return obj1.name.toLowerCase().localeCompare(obj2.name.toLowerCase());\n        });\n        return tags;\n    }\n\n    /**\n     * Called when the user changes the description of a tag.\n     * @param tag\n     * @param description\n     */\n    public changeTagDescription(tag: OasTag, description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(tag, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user chooses to delete a tag.\n     * @param tag\n     */\n    public deleteTag(tag: OasTag): void {\n        let command: ICommand = CommandFactory.createDeleteTagCommand(tag.name);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user clicks 'Add' on the Add Tag modal dialog.\n     * @param tag\n     */\n    public addTag(tag: any): void {\n        let command: ICommand = CommandFactory.createNewTagCommand(tag.name, tag.description);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(this.document);\n        path.appendSegment(\"tags\", false);\n        this.selectionService.select(path.toString());\n    }\n\n    /**\n     * Returns true if the document has at least one tag defined.\n     */\n    public hasTags(): boolean {\n        return this.document.tags && this.document.tags.length > 0;\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the tags.\n     */\n    public deleteAllTags(): void {\n        let command: ICommand = CommandFactory.createDeleteAllTagsCommand();\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the rename tag dialog.\n     * @param tag\n     */\n    public openRenameDialog(tag: OasTag): void {\n        let tagNames: string[] = [];\n        VisitorUtil.visitTree(tag.ownerDocument(), new class extends CombinedVisitorAdapter {\n            public visitTag(node: OasTag): void {\n                tagNames.push(node.name);\n            }\n        }, TraverserDirection.down);\n        this.renameDialog.open(tag, tag.name, newName => {\n            return tagNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the tag.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        let tag: OasTag = <any>event.entity;\n        let command: ICommand = CommandFactory.createRenameTagDefinitionCommand(tag.name, event.newName);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"tags\" label=\"TAG DEFINITIONS\" [counterItems]=\"tags()\"\n         contextHelp=\"Configure tags for your API in this section.  Once defined, tags can be used to organize your API's operations by arbitrary criteria.\"\n         collaborationNodePath=\"/tags\"\n         [validationModels]=\"tags()\">\n    <span actions>\n        <icon-button (onClick)=\"addTagDialog.open(document)\" [pullRight]=\"true\" type=\"add\"\n                     title=\"Add a tag to the API.\"></icon-button>\n        <icon-button (onClick)=\"deleteAllTags()\" [disabled]=\"!hasTags()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     title=\"Delete all tag definitions.\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"tags().length === 0\">\n            <span>No tags have been configured.</span>\n            <a (click)=\"addTagDialog.open(document)\">Add a tag</a>\n        </signpost>\n\n        <!-- The list of tags -->\n        <div class=\"tags\" *ngIf=\"tags().length > 0\">\n            <tag-row *ngFor=\"let tag of tags()\" [item]=\"tag\"\n                     (onRename)=\"openRenameDialog(tag)\"\n                     (onDelete)=\"deleteTag(tag)\"></tag-row>\n        </div>\n    </div>\n</section>\n<add-tag-dialog #addTagDialog (onAdd)=\"addTag($event)\"></add-tag-dialog>\n<rename-entity-dialog #renameDialog\n                      type=\"Tag\"\n                      title=\"Rename Tag\"\n                      warning=\"Renaming a Tag will also update any references to that tag elsewhere in the API (e.g. tagging on operations).\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, QueryList, ViewChildren, ViewEncapsulation} from \"@angular/core\";\nimport {\n    Aai20SecurityScheme, AaiDocument,\n    CombinedVisitorAdapter,\n    DocumentType,\n    Oas20Scopes,\n    Oas20SecurityScheme,\n    Oas30SecurityScheme,\n    OasDocument, OAuthFlow,\n    SecurityScheme,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {Scope} from \"../../_models/scope.model\";\nimport {NgModel} from \"@angular/forms\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\n\nexport interface Flow {\n    enabled: boolean;\n    authorizationUrl: string;\n    tokenUrl: string;\n    refreshUrl: string;\n    scopes: Scope[];\n}\n\nexport interface Flows {\n    implicit: Flow;\n    password: Flow;\n    clientCredentials: Flow;\n    authorizationCode: Flow;\n}\n\nexport interface SecuritySchemeData {\n    schemeName: string;\n    description: string;\n    type: string;\n    name: string;\n    in: string;\n    flow: string;\n    authorizationUrl: string;\n    tokenUrl: string;\n    scopes: Scope[];\n}\n\nexport interface SecurityScheme20Data extends SecuritySchemeData {\n    flow: string;\n    authorizationUrl: string;\n    tokenUrl: string;\n    scopes: Scope[];\n}\n\nexport interface SecurityScheme30Data extends SecuritySchemeData {\n    // *http* - Basic, Bearer, Digest\n    scheme: string;\n    // *http* - JWT, OAuth\n    bearerFormat: string;\n    // *openIdConnect*\n    openIdConnectUrl: string;\n    // *oauth2* - implicit, password, clientCredentials, authorizationCode\n    flows: Flows;\n}\n\nexport interface SecuritySchemeAai20Data extends SecuritySchemeData {\n    // *http* - Basic, Bearer, Digest\n    scheme: string;\n    // *http* - JWT, OAuth\n    bearerFormat: string;\n    // *openIdConnect*\n    openIdConnectUrl: string;\n    // *oauth2* - implicit, password, clientCredentials, authorizationCode\n    flows: Flows;\n}\n\nexport interface SecuritySchemeEditorEvent extends EntityEditorEvent<SecurityScheme> {\n    data: SecurityScheme20Data | SecurityScheme30Data | SecuritySchemeAai20Data;\n}\n\nexport interface ISecuritySchemeEditorHandler extends IEntityEditorHandler<SecurityScheme, SecuritySchemeEditorEvent> {\n    onSave(event: SecuritySchemeEditorEvent): void;\n    onCancel(event: SecuritySchemeEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"security-scheme-editor\",\n    templateUrl: \"security-scheme-editor.component.html\",\n    styleUrls: [\"security-scheme-editor.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class SecuritySchemeEditorComponent extends EntityEditor<SecurityScheme, SecuritySchemeEditorEvent> {\n\n    @ViewChildren(\"nameInput\") nameInput: QueryList<NgModel>;\n\n    public oauthTab: string = \"implicit\";\n    public model: SecuritySchemeData;\n\n    schemeNames: string[];\n    schemeExists: boolean;\n\n    /**\n     * Called to open the editor.\n     * @param handler\n     * @param context\n     * @param server\n     */\n    public open(handler: ISecuritySchemeEditorHandler, context: OasDocument | AaiDocument, scheme?: SecurityScheme): void {\n        super.open(handler, context, scheme);\n    }\n\n    public is2x(): boolean {\n        return this.context.ownerDocument().getDocumentType() == DocumentType.openapi2;\n    }\n\n    public is3x(): boolean {\n        return this.context.ownerDocument().getDocumentType() == DocumentType.openapi3;\n    }\n\n    public isAai2x(): boolean {\n        return this.context.ownerDocument().getDocumentType() == DocumentType.asyncapi2;\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity.\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: SecurityScheme): void {\n        this.initModel(entity);\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.initModel();\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        let hasSchemeName: boolean = !ObjectUtils.isNullOrUndefined(this.model.schemeName);\n        let hasType: boolean = !ObjectUtils.isNullOrUndefined(this.model.type);\n        let validNameInput: boolean = true;\n        if (this.nameInput && this.nameInput.first) {\n            validNameInput = this.nameInput.first.valid;\n        }\n        return hasSchemeName && hasType && validNameInput;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): SecuritySchemeEditorEvent {\n        let event: SecuritySchemeEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    protected initModel(scheme?: SecurityScheme): void {\n        this.schemeExists = false;\n        let schemeNames: string[] = [];\n        VisitorUtil.visitTree(this.context.ownerDocument(), new class extends CombinedVisitorAdapter {\n            public visitSecurityScheme(node: SecurityScheme): void {\n                schemeNames.push(node.getName());\n            }\n        }, TraverserDirection.down);\n        this.schemeNames = schemeNames;\n\n        if (this.context.ownerDocument().getDocumentType() == DocumentType.openapi2) {\n            this.model = {\n                schemeName: null,\n                description: null,\n                type: null,\n                name: null,\n                in: null,\n                flow: null,\n                authorizationUrl: null,\n                tokenUrl: null,\n                scopes: []\n            } as SecurityScheme20Data;\n        } else {\n            this.model = {\n                schemeName: null,\n                type: null,\n                description: null,\n                name: null,\n                in: null,\n                scheme: null,\n                bearerFormat: null,\n                openIdConnectUrl: null,\n                flows: {\n                    implicit: {\n                        enabled: false,\n                        authorizationUrl: null,\n                        tokenUrl: null,\n                        refreshUrl: null,\n                        scopes: []\n                    },\n                    password: {\n                        enabled: false,\n                        authorizationUrl: null,\n                        tokenUrl: null,\n                        refreshUrl: null,\n                        scopes: []\n                    },\n                    clientCredentials: {\n                        enabled: false,\n                        authorizationUrl: null,\n                        tokenUrl: null,\n                        refreshUrl: null,\n                        scopes: []\n                    },\n                    authorizationCode: {\n                        enabled: false,\n                        authorizationUrl: null,\n                        tokenUrl: null,\n                        refreshUrl: null,\n                        scopes: []\n                    }\n                }\n            } as SecurityScheme30Data | SecuritySchemeAai20Data;\n        }\n\n        if (scheme) {\n            if (this.context.ownerDocument().getDocumentType() == DocumentType.openapi2) {\n                let scheme20: Oas20SecurityScheme = scheme as Oas20SecurityScheme;\n                this.model.schemeName = scheme20.getSchemeName();\n                this.model.description = scheme20.description;\n                this.model.type = scheme20.type;\n                this.model.in = scheme20.in;\n                this.model.name = scheme20.name;\n                this.model.flow = scheme20.flow;\n                this.model.authorizationUrl = scheme20.authorizationUrl;\n                this.model.tokenUrl = scheme20.tokenUrl;\n                this.model.scopes = this.toScopesArray(scheme20.scopes);\n            } else if (this.context.ownerDocument().getDocumentType() == DocumentType.openapi3) {\n                let scheme30: Oas30SecurityScheme = scheme as Oas30SecurityScheme;\n                let model: SecurityScheme30Data = this.model as SecurityScheme30Data;\n                model.schemeName = scheme30.getSchemeName();\n                model.description = scheme30.description;\n                model.type = scheme30.type;\n                model.in = scheme30.in;\n                model.name = scheme30.name;\n                model.scheme = scheme30.scheme;\n                model.bearerFormat = scheme30.bearerFormat;\n                model.openIdConnectUrl = scheme30.openIdConnectUrl;\n                this.readFlows(scheme30);\n                if (!ObjectUtils.isNullOrUndefined(scheme30.flows)) {\n                    if (!ObjectUtils.isNullOrUndefined(scheme30.flows.authorizationCode)) {\n                        this.oauthTab = \"authorizationCode\";\n                    }\n                    if (!ObjectUtils.isNullOrUndefined(scheme30.flows.clientCredentials)) {\n                        this.oauthTab = \"clientCredentials\";\n                    }\n                    if (!ObjectUtils.isNullOrUndefined(scheme30.flows.password)) {\n                        this.oauthTab = \"password\";\n                    }\n                    if (!ObjectUtils.isNullOrUndefined(scheme30.flows.implicit)) {\n                        this.oauthTab = \"implicit\";\n                    }\n                }\n            } else {\n                let aai20SecurityScheme: Aai20SecurityScheme = scheme as Aai20SecurityScheme;\n                let model: SecuritySchemeAai20Data = this.model as SecuritySchemeAai20Data;\n                model.schemeName = aai20SecurityScheme.getSchemeName();\n                model.description = aai20SecurityScheme.description;\n                model.type = aai20SecurityScheme.type;\n                model.in = aai20SecurityScheme.in;\n                model.name = aai20SecurityScheme.name;\n                model.scheme = aai20SecurityScheme.scheme;\n                model.bearerFormat = aai20SecurityScheme.bearerFormat;\n                model.openIdConnectUrl = aai20SecurityScheme.openIdConnectUrl;\n                this.readFlows(aai20SecurityScheme);\n                if (!ObjectUtils.isNullOrUndefined(aai20SecurityScheme.flows)) {\n                    if (!ObjectUtils.isNullOrUndefined(aai20SecurityScheme.flows.authorizationCode)) {\n                        this.oauthTab = \"authorizationCode\";\n                    }\n                    if (!ObjectUtils.isNullOrUndefined(aai20SecurityScheme.flows.clientCredentials)) {\n                        this.oauthTab = \"clientCredentials\";\n                    }\n                    if (!ObjectUtils.isNullOrUndefined(aai20SecurityScheme.flows.password)) {\n                        this.oauthTab = \"password\";\n                    }\n                    if (!ObjectUtils.isNullOrUndefined(aai20SecurityScheme.flows.implicit)) {\n                        this.oauthTab = \"implicit\";\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Reads the flow information from the security scheme and copies it to the model.\n     * @param scheme\n     */\n    private readFlows(scheme: Oas30SecurityScheme | Aai20SecurityScheme) {\n        if (!ObjectUtils.isNullOrUndefined(scheme.flows)) {\n            if (!ObjectUtils.isNullOrUndefined(scheme.flows.implicit)) {\n                this.readFlowInto(scheme.flows.implicit, (this.model as SecurityScheme30Data | SecuritySchemeAai20Data).flows.implicit);\n            }\n            if (!ObjectUtils.isNullOrUndefined(scheme.flows.password)) {\n                this.readFlowInto(scheme.flows.password, (this.model as SecurityScheme30Data | SecuritySchemeAai20Data).flows.password);\n            }\n            if (!ObjectUtils.isNullOrUndefined(scheme.flows.authorizationCode)) {\n                this.readFlowInto(scheme.flows.authorizationCode, (this.model as SecurityScheme30Data | SecuritySchemeAai20Data).flows.authorizationCode);\n            }\n            if (!ObjectUtils.isNullOrUndefined(scheme.flows.clientCredentials)) {\n                this.readFlowInto(scheme.flows.clientCredentials, (this.model as SecurityScheme30Data | SecuritySchemeAai20Data).flows.clientCredentials);\n            }\n        }\n    }\n\n    /**\n     * Reads flow information from the data model into the local UI model.\n     * @param flowModel\n     * @param flow\n     */\n    private readFlowInto(flowModel: OAuthFlow, flow: Flow) {\n        flow.enabled = true;\n        flow.authorizationUrl = flowModel.authorizationUrl;\n        flow.tokenUrl = flowModel.tokenUrl;\n        flow.refreshUrl = flowModel.refreshUrl;\n        flow.scopes = this.toScopesArray(flowModel.scopes);\n    }\n\n    /**\n     * Converts from OAS30 scopes to an array of scope objects.\n     * @param scopes\n     */\n    private toScopesArray(scopes: any): Scope[] {\n        if (scopes && (this.is3x() || this.isAai2x())) {\n            let rval: Scope[] = [];\n            for (let sk in scopes) {\n                let sd: string = scopes[sk]\n                rval.push({\n                    name: sk,\n                    description: sd\n                });\n            }\n            return rval;\n        } else if (scopes && this.is2x()) {\n            let scopes20: Oas20Scopes = scopes as Oas20Scopes;\n            return scopes20.getScopeNames().map( sname => {\n                return {\n                    name: sname,\n                    description: scopes20.getScopeDescription(sname)\n                }\n            });\n        }\n    }\n\n    /**\n     * Sets the flow.\n     * @param flow\n     */\n    public setFlow(flow: string): void {\n        this.model.flow = flow;\n        if (flow === \"implicit\") {\n            this.model.tokenUrl = null;\n        }\n        if (flow === \"password\") {\n            this.model.authorizationUrl = null;\n        }\n        if (flow === \"accessCode\") {\n        }\n        if (flow === \"application\") {\n            this.model.authorizationUrl = null;\n        }\n    }\n\n    /**\n     * Returns true only if all the defined scopes are valid (have names).\n     * @return\n     */\n    public scopesAreValid(): boolean {\n        if (this.model.type === \"oauth2\") {\n            for (let scope of this.model.scopes) {\n                if (ObjectUtils.isNullOrUndefined(scope.name) || scope.name.length === 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Sets the type.\n     * @param type\n     */\n    public setType(type: string): void {\n        this.model.type = type;\n    }\n\n    /**\n     * Gets the 2.0 version of the data model.\n     */\n    public model20(): SecurityScheme20Data {\n        return this.model as SecurityScheme20Data;\n    }\n\n    /**\n     * Gets the 3.0 version of the data model.\n     */\n    public model30(): SecurityScheme30Data {\n        return this.model as SecurityScheme30Data;\n    }\n\n    /**\n     * Gets the Aai 2.0 version of the data model.\n     */\n    public modelAai20(): SecuritySchemeAai20Data {\n        return this.model as SecuritySchemeAai20Data;\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"security-scheme\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define the Security Scheme\" [valid]=\"isValid()\">\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Security Scheme Info</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter the name, description, and type of the security scheme.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"securitySchemeName\">Name</label>\n                <div *ngIf=\"_mode === 'create'\">\n                    <input name=\"schemeName\" type=\"text\" id=\"securitySchemeName\" class=\"form-control short\" #nameInput=\"ngModel\"\n                           placeholder=\"Enter Security Scheme Name\" (ngModelChange)=\"schemeExists = schemeNames.indexOf($event) != -1\"\n                           required [(ngModel)]=\"model.schemeName\" pattern=\"[a-zA-Z0-9\\.\\-_]+\">\n                    <div class=\"form-error-message error\" *ngIf=\"schemeExists\">Security Scheme already exists.</div>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'required'\">Security Scheme name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                </div>\n                <div *ngIf=\"_mode === 'edit'\">\n                    <input title=\"To change a security scheme name, choose the 'Rename' option from the previous screen.\"\n                           name=\"schemeName\" type=\"text\" id=\"name_ro\" class=\"form-control\" required [(ngModel)]=\"model.schemeName\" readonly>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <textarea name=\"description\" id=\"description\" class=\"form-control\" autosize #descriptionInput\n                              placeholder=\"Server description\" [(ngModel)]=\"model.description\"></textarea>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label required\">Security Type</label>\n                <div>\n                    <div class=\"dropdown\" *ngIf=\"is2x()\">\n                        <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            <span *ngIf=\"!model.type\"><i>Choose Type</i></span>\n                            <span *ngIf=\"model.type === 'basic'\">BASIC</span>\n                            <span *ngIf=\"model.type === 'apiKey'\">API Key</span>\n                            <span *ngIf=\"model.type === 'oauth2'\">OAuth 2</span>\n                            <span class=\"caret\"></span>\n                        </button>\n                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('basic')\">BASIC</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('apiKey')\">API Key</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('oauth2')\">OAuth 2</a></li>\n                        </ul>\n                    </div>\n                    <div class=\"dropdown\" *ngIf=\"is3x()\">\n                        <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            <span *ngIf=\"!model.type\"><i>Choose Type</i></span>\n                            <span *ngIf=\"model.type === 'http'\">HTTP</span>\n                            <span *ngIf=\"model.type === 'apiKey'\">API Key</span>\n                            <span *ngIf=\"model.type === 'oauth2'\">OAuth 2</span>\n                            <span *ngIf=\"model.type === 'openIdConnect'\">OpenID Connect</span>\n                            <span class=\"caret\"></span>\n                        </button>\n                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('http')\">HTTP</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('apiKey')\">API Key</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('oauth2')\">OAuth 2</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('openIdConnect')\">OpenID Connect</a></li>\n                        </ul>\n                    </div>\n                    <div class=\"dropdown\" *ngIf=\"isAai2x()\">\n                        <button class=\"btn btn-default dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\">\n                            <span *ngIf=\"!model.type\"><i>Choose Type</i></span>\n                            <span *ngIf=\"model.type === 'http'\">HTTP</span>\n                            <span *ngIf=\"model.type === 'httpApiKey'\">HTTP API Key</span>\n                            <span *ngIf=\"model.type === 'apiKey'\">API Key</span>\n                            <span *ngIf=\"model.type === 'oauth2'\">OAuth 2</span>\n                            <span *ngIf=\"model.type === 'openIdConnect'\">OpenID Connect</span>\n                            <span *ngIf=\"model.type === 'userPassword'\">User Password</span>\n                            <span *ngIf=\"model.type === 'X509'\">X509 Certificate</span>\n                            <span *ngIf=\"model.type === 'symmetricEncryption'\">Symmetric Encryption</span>\n                            <span *ngIf=\"model.type === 'asymmetricEncryption'\">Asymmetric Encryption</span>\n                            <span class=\"caret\"></span>\n                        </button>\n                        <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('http')\">HTTP</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().in = ''; setType('httpApiKey')\">HTTP API Key</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().in = ''; setType('apiKey')\">API Key</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('oauth2')\">OAuth 2</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('openIdConnect')\">OpenID Connect</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('userPassword')\">User Password</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('X509')\">X509 Certificate</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('symmetricEncryption')\">Symmetric Encryption</a></li>\n                            <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setType('asymmetricEncryption')\">Asymmetric Encryption</a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row-fluid divider-section\">\n        <div class=\"col-md-12\">\n            <hr />\n        </div>\n    </div>\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>2. Configure Security Scheme Details</h3>\n            <p class=\"explanation\">\n                <span>\n                    Configure the type-specific details for the security scheme.  You must first configure the scheme type above.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <p class=\"empty-state\" *ngIf=\"!model.type\">\n                No security type has been configured for this security scheme.  A type must first be selected prior to configuring\n                the scheme's type-specific details.\n            </p>\n\n            <div class=\"scheme-details\" *ngIf=\"model.type\">\n\n                <div *ngIf=\"is2x()\">\n                    <!-- BASIC Auth -->\n                    <div class=\"basic-auth\" *ngIf=\"model20().type === 'basic'\">\n                        <div class=\"alert alert-success\">\n                            <span class=\"pficon pficon-ok\"></span>\n                            <strong>All Set!</strong> No additional configuration options are needed for BASIC authentication.\n                        </div>\n                    </div>\n                    <!-- API Key Auth Config -->\n                    <div class=\"apiKey-auth\" *ngIf=\"model20().type === 'apiKey'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"in20\">Key Location</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"in20\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"!model20().in\"><i>Choose Location</i></span>\n                                        <span *ngIf=\"model20().in === 'header'\">HTTP header</span>\n                                        <span *ngIf=\"model20().in === 'query'\">Query Parameter</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model20().in = 'header'\">HTTP header</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model20().in = 'query'\">Query Parameter</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"name20\">Header/Parameter Name</label>\n                            <div>\n                                <input name=\"name\" type=\"text\" id=\"name20\" class=\"form-control short\" [(ngModel)]=\"model20().name\"\n                                       placeholder=\"Enter a {{ model20().in == 'header' ? 'header' : 'query parameter' }} name\">\n                            </div>\n                        </div>\n                    </div>\n                    <!-- OAuth2 Auth Config -->\n                    <div class=\"oauth2-auth\" *ngIf=\"model20().type === 'oauth2'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"flow\">OAuth Flow</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"flow\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"!model20().flow\"><i>Choose Flow</i></span>\n                                        <span *ngIf=\"model20().flow === 'implicit'\">Implicit</span>\n                                        <span *ngIf=\"model20().flow === 'password'\">Password</span>\n                                        <span *ngIf=\"model20().flow === 'application'\">Application</span>\n                                        <span *ngIf=\"model20().flow === 'accessCode'\">Access Code</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setFlow('implicit')\">Implicit</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setFlow('password')\">Password</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setFlow('application')\">Application</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"setFlow('accessCode')\">Access Code</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"model20().flow === 'implicit' || model20().flow === 'accessCode'\">\n                            <label class=\"control-label\" for=\"authorizationUrl\">Auth URL</label>\n                            <div>\n                                <input name=\"authorizationUrl\" type=\"text\" id=\"authorizationUrl\" class=\"form-control\"\n                                       placeholder=\"Enter the authorization URL\" [(ngModel)]=\"model20().authorizationUrl\">\n                            </div>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"model20().flow === 'password' || model20().flow === 'application' || model20().flow === 'accessCode'\">\n                            <label class=\"control-label\" for=\"tokenUrl\">Token URL</label>\n                            <div>\n                                <input name=\"tokenUrl\" type=\"text\" id=\"tokenUrl\" class=\"form-control\"\n                                       placeholder=\"Enter the token URL\" [(ngModel)]=\"model20().tokenUrl\">\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"scopes20\">Scopes</label>\n                            <scopes-input id=\"scopes20\" [scopes]=\"model20().scopes\" (onChange)=\"model20().scopes = $event\"></scopes-input>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"is3x()\">\n                    <!-- HTTP Auth Config -->\n                    <div class=\"http-auth\" *ngIf=\"model30().type === 'http'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"scheme\">Scheme</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"scheme\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"!model30().scheme\"><i>Choose Scheme</i></span>\n                                        <span *ngIf=\"model30().scheme === 'basic'\">BASIC</span>\n                                        <span *ngIf=\"model30().scheme === 'bearer'\">Bearer</span>\n                                        <span *ngIf=\"model30().scheme === 'digest'\">Digest</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().scheme = 'basic'\">BASIC</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().scheme = 'bearer'\">Bearer</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().scheme = 'digest'\">Digest</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"model30().scheme === 'bearer'\">\n                            <label class=\"control-label\" for=\"bearerFormat\">Format</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"bearerFormat\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"model30().bearerFormat === '' || !model30().bearerFormat\"><i>Choose Format</i></span>\n                                        <span *ngIf=\"model30().bearerFormat === 'jwt'\">JWT</span>\n                                        <span *ngIf=\"model30().bearerFormat === 'oauth'\">OAuth</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().bearerFormat = 'jwt'\">JWT</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().bearerFormat = 'oauth'\">OAuth</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().bearerFormat = null\"><i>None</i></a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- OpenID Connect Config -->\n                    <div class=\"openIdConnect-auth\" *ngIf=\"model30().type === 'openIdConnect'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"openIdConnectUrl\">OpenID Connect URL</label>\n                            <div>\n                                <input name=\"name\" type=\"text\" id=\"openIdConnectUrl\" class=\"form-control\" pattern=\"https?://.+\"\n                                       placeholder=\"Enter a valid OpenID Connect URL\" [(ngModel)]=\"model30().openIdConnectUrl\" #oidConnectUrl=\"ngModel\">\n                                <form-error-message [inputModel]=\"oidConnectUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- API Key Auth Config -->\n                    <div class=\"apiKey-auth\" *ngIf=\"model30().type === 'apiKey'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"in\">Key Location</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"in\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"!model30().in\"><i>Choose Location</i></span>\n                                        <span *ngIf=\"model30().in === 'header'\">HTTP header</span>\n                                        <span *ngIf=\"model30().in === 'query'\">Query Parameter</span>\n                                        <span *ngIf=\"model30().in === 'cookie'\">Cookie</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().in = 'header'\">HTTP header</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().in = 'query'\">Query Parameter</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"model30().in = 'cookie'\">Cookie</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"name\">Name</label>\n                            <div>\n                                <input name=\"name\" type=\"text\" id=\"name\" class=\"form-control short\"\n                                       placeholder=\"Name of {{ model30().in === 'query' ? 'query parameter' : (!model30().in ? 'parameter' : model30().in) }}\"\n                                       [(ngModel)]=\"model30().name\">\n                            </div>\n                        </div>\n                    </div>\n                    <!-- OAuth2 Auth Config -->\n                    <div class=\"oauth2-auth\" *ngIf=\"model30().type === 'oauth2'\">\n                        <ul class=\"nav nav-tabs\">\n                            <li [class.enabled]=\"model30().flows.implicit.enabled\" [class.active]=\"oauthTab === 'implicit'\"><a (click)=\"oauthTab = 'implicit'\">Implicit</a></li>\n                            <li [class.enabled]=\"model30().flows.password.enabled\" [class.active]=\"oauthTab === 'password'\"><a (click)=\"oauthTab = 'password'\">Password</a></li>\n                            <li [class.enabled]=\"model30().flows.clientCredentials.enabled\" [class.active]=\"oauthTab === 'clientCredentials'\"><a (click)=\"oauthTab = 'clientCredentials'\">Client Credentials</a></li>\n                            <li [class.enabled]=\"model30().flows.authorizationCode.enabled\" [class.active]=\"oauthTab === 'authorizationCode'\"><a (click)=\"oauthTab = 'authorizationCode'\">Authorization Code</a></li>\n                        </ul>\n                        <div class=\"panel panel-default tab-panel\">\n                            <!-- Implicit Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'implicit'\">\n                                <div>\n                                    <input name=\"implicit_enabled\" id=\"implicit_enabled\" type=\"checkbox\" [(ngModel)]=\"model30().flows.implicit.enabled\">\n                                    <label for=\"implicit_enabled\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"implicit_authorizationUrl\">Auth URL</label>\n                                    <div>\n                                        <input name=\"implicit_authorizationUrl\" type=\"text\" id=\"implicit_authorizationUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Authorization URL\" [(ngModel)]=\"model30().flows.implicit.authorizationUrl\"\n                                               pattern=\"https?://.+\" #implicitAuthUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"implicitAuthUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"implicit_refreshUrl\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"implicit_refreshUrl\" type=\"text\" id=\"implicit_refreshUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"model30().flows.implicit.refreshUrl\"\n                                               pattern=\"https?://.+\" #implicitRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"implicitRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"implicit-scopes\">Scopes</label>\n                                    <scopes-input id=\"implicit-scopes\" [scopes]=\"model30().flows.implicit.scopes\"\n                                                  (onChange)=\"model30().flows.implicit.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                            <!-- Password Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'password'\">\n                                <div>\n                                    <input name=\"password_enabled\" id=\"password_enabled\" type=\"checkbox\" [(ngModel)]=\"model30().flows.password.enabled\">\n                                    <label for=\"password_enabled\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"password_tokenUrl\">Token URL</label>\n                                    <div>\n                                        <input name=\"password_tokenUrl\" type=\"text\" id=\"password_tokenUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Token URL\" [(ngModel)]=\"model30().flows.password.tokenUrl\"\n                                               pattern=\"https?://.+\" #passwordTokenUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"passwordTokenUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"password_refreshUrl\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"password_refreshUrl\" type=\"text\" id=\"password_refreshUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"model30().flows.password.refreshUrl\"\n                                               pattern=\"https?://.+\" #passwordRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"passwordRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"password-scopes\">Scopes</label>\n                                    <scopes-input id=\"password-scopes\" [scopes]=\"model30().flows.password.scopes\"\n                                                  (onChange)=\"model30().flows.password.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                            <!-- Client Credentials Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'clientCredentials'\">\n                                <div>\n                                    <input name=\"clientCredentials_enabled\" id=\"clientCredentials_enabled\" type=\"checkbox\" [(ngModel)]=\"model30().flows.clientCredentials.enabled\">\n                                    <label for=\"clientCredentials_enabled\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"clientCredentials_tokenUrl\">Token URL</label>\n                                    <div>\n                                        <input name=\"clientCredentials_tokenUrl\" type=\"text\" id=\"clientCredentials_tokenUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Token URL\" [(ngModel)]=\"model30().flows.clientCredentials.tokenUrl\"\n                                               pattern=\"https?://.+\" #clientCredsTokenUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"clientCredsTokenUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"clientCredentials_refreshUrl\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"clientCredentials_refreshUrl\" type=\"text\" id=\"clientCredentials_refreshUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"model30().flows.clientCredentials.refreshUrl\"\n                                               pattern=\"https?://.+\" #clientCredsRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"clientCredsRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"cc-scopes\">Scopes</label>\n                                    <scopes-input id=\"cc-scopes\" [scopes]=\"model30().flows.clientCredentials.scopes\"\n                                                  (onChange)=\"model30().flows.clientCredentials.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                            <!-- Authorization Code Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'authorizationCode'\">\n                                <div>\n                                    <input name=\"authorizationCode_enabled\" id=\"authorizationCode_enabled\" type=\"checkbox\" [(ngModel)]=\"model30().flows.authorizationCode.enabled\">\n                                    <label for=\"authorizationCode_enabled\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authorizationCode_authorizationUrl\">Auth URL</label>\n                                    <div>\n                                        <input name=\"authorizationCode_authorizationUrl\" type=\"text\" id=\"authorizationCode_authorizationUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Authorization URL\" [(ngModel)]=\"model30().flows.authorizationCode.authorizationUrl\"\n                                               pattern=\"https?://.+\" #authCodeAuthUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"authCodeAuthUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authorizationCode_tokenUrl\">Token URL</label>\n                                    <div>\n                                        <input name=\"authorizationCode_tokenUrl\" type=\"text\" id=\"authorizationCode_tokenUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Token URL\" [(ngModel)]=\"model30().flows.authorizationCode.tokenUrl\"\n                                               pattern=\"https?://.+\" #authCodeTokenUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"authCodeTokenUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authorizationCode_refreshUrl\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"authorizationCode_refreshUrl\" type=\"text\" id=\"authorizationCode_refreshUrl\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"model30().flows.authorizationCode.refreshUrl\"\n                                               pattern=\"https?://.+\" #authCodeRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"authCodeRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authcode-scopes\">Scopes</label>\n                                    <scopes-input id=\"authcode-scopes\" [scopes]=\"model30().flows.authorizationCode.scopes\"\n                                                  (onChange)=\"model30().flows.authorizationCode.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div *ngIf=\"isAai2x()\">\n                <!-- HTTP Auth Config -->\n                    <div class=\"http-auth\" *ngIf=\"modelAai20().type === 'http'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"schemeAai20\">Scheme</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"schemeAai20\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"!modelAai20().scheme\"><i>Choose Scheme</i></span>\n                                        <span *ngIf=\"modelAai20().scheme === 'basic'\">BASIC</span>\n                                        <span *ngIf=\"modelAai20().scheme === 'bearer'\">Bearer</span>\n                                        <span *ngIf=\"modelAai20().scheme === 'digest'\">Digest</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().scheme = 'basic'\">BASIC</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().scheme = 'bearer'\">Bearer</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().scheme = 'digest'\">Digest</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"modelAai20().scheme === 'bearer'\">\n                            <label class=\"control-label\" for=\"bearerFormatAai20\">Format</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"bearerFormatAai20\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"modelAai20().bearerFormat === '' || !modelAai20().bearerFormat\"><i>Choose Format</i></span>\n                                        <span *ngIf=\"modelAai20().bearerFormat === 'jwt'\">JWT</span>\n                                        <span *ngIf=\"modelAai20().bearerFormat === 'oauth'\">OAuth</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().bearerFormat = 'jwt'\">JWT</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().bearerFormat = 'oauth'\">OAuth</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().bearerFormat = null\"><i>None</i></a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- OpenID Connect Config -->\n                    <div class=\"openIdConnect-auth\" *ngIf=\"modelAai20().type === 'openIdConnect'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"openIdConnectUrlAai20\">OpenID Connect URL</label>\n                            <div>\n                                <input name=\"name\" type=\"text\" id=\"openIdConnectUrlAai20\" class=\"form-control\" pattern=\"https?://.+\"\n                                       placeholder=\"Enter a valid OpenID Connect URL\" [(ngModel)]=\"modelAai20().openIdConnectUrl\" #oidConnectUrl=\"ngModel\">\n                                <form-error-message [inputModel]=\"oidConnectUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- API Key Auth Config -->\n                    <div class=\"apiKey-auth\" *ngIf=\"modelAai20().type === 'apiKey'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"inApiKeyAai20\">Key Location</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"inApiKeyAai20\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"!modelAai20().in\"><i>Choose Location</i></span>\n                                        <span *ngIf=\"modelAai20().in === 'user'\">User</span>\n                                        <span *ngIf=\"modelAai20().in === 'password'\">Password</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().in = 'user'\">User</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().in = 'password'\">Password</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- HTTP API Key Auth Config -->\n                    <div class=\"apiKey-auth\" *ngIf=\"modelAai20().type === 'httpApiKey'\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"inHttpApiKeyAai20\">Key Location</label>\n                            <div>\n                                <div class=\"dropdown\">\n                                    <button class=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"inHttpApiKeyAai20\" data-toggle=\"dropdown\">\n                                        <span *ngIf=\"!modelAai20().in\"><i>Choose Location</i></span>\n                                        <span *ngIf=\"modelAai20().in === 'header'\">HTTP header</span>\n                                        <span *ngIf=\"modelAai20().in === 'query'\">Query Parameter</span>\n                                        <span *ngIf=\"modelAai20().in === 'cookie'\">Cookie</span>\n                                        <span class=\"caret\"></span>\n                                    </button>\n                                    <ul class=\"dropdown-menu\" role=\"menu\" aria-labelledby=\"statusCodeMenu\">\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().in = 'header'\">HTTP header</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().in = 'query'\">Query Parameter</a></li>\n                                        <li role=\"presentation\"><a role=\"menuitem\" (click)=\"modelAai20().in = 'cookie'\">Cookie</a></li>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"control-label\" for=\"nameAai20\">Name</label>\n                            <div>\n                                <input name=\"name\" type=\"text\" id=\"nameAai20\" class=\"form-control short\"\n                                       placeholder=\"Name of {{ modelAai20().in === 'query' ? 'query parameter' : (!modelAai20().in ? 'parameter' : modelAai20().in) }}\"\n                                       [(ngModel)]=\"modelAai20().name\">\n                            </div>\n                        </div>\n                    </div>\n                    <!-- OAuth2 Auth Config -->\n                    <div class=\"oauth2-auth\" *ngIf=\"modelAai20().type === 'oauth2'\">\n                        <ul class=\"nav nav-tabs\">\n                            <li [class.enabled]=\"modelAai20().flows.implicit.enabled\" [class.active]=\"oauthTab === 'implicit'\"><a (click)=\"oauthTab = 'implicit'\">Implicit</a></li>\n                            <li [class.enabled]=\"modelAai20().flows.password.enabled\" [class.active]=\"oauthTab === 'password'\"><a (click)=\"oauthTab = 'password'\">Password</a></li>\n                            <li [class.enabled]=\"modelAai20().flows.clientCredentials.enabled\" [class.active]=\"oauthTab === 'clientCredentials'\"><a (click)=\"oauthTab = 'clientCredentials'\">Client Credentials</a></li>\n                            <li [class.enabled]=\"modelAai20().flows.authorizationCode.enabled\" [class.active]=\"oauthTab === 'authorizationCode'\"><a (click)=\"oauthTab = 'authorizationCode'\">Authorization Code</a></li>\n                        </ul>\n                        <div class=\"panel panel-default tab-panel\">\n                            <!-- Implicit Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'implicit'\">\n                                <div>\n                                    <input name=\"implicit_enabledAai20\" id=\"implicit_enabledAai20\" type=\"checkbox\" [(ngModel)]=\"modelAai20().flows.implicit.enabled\">\n                                    <label for=\"implicit_enabledAai20\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"implicit_authorizationUrlAai20\">Auth URL</label>\n                                    <div>\n                                        <input name=\"implicit_authorizationUrlAai20\" type=\"text\" id=\"implicit_authorizationUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Authorization URL\" [(ngModel)]=\"modelAai20().flows.implicit.authorizationUrl\"\n                                               pattern=\"https?://.+\" #implicitAuthUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"implicitAuthUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"implicit_refreshUrlAai20\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"implicit_refreshUrlAai20\" type=\"text\" id=\"implicit_refreshUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"modelAai20().flows.implicit.refreshUrl\"\n                                               pattern=\"https?://.+\" #implicitRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"implicitRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"implicit-scopesAai20\">Scopes</label>\n                                    <scopes-input id=\"implicit-scopesAai20\" [scopes]=\"modelAai20().flows.implicit.scopes\"\n                                                  (onChange)=\"modelAai20().flows.implicit.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                            <!-- Password Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'password'\">\n                                <div>\n                                    <input name=\"password_enabledAai20\" id=\"password_enabledAai20\" type=\"checkbox\" [(ngModel)]=\"modelAai20().flows.password.enabled\">\n                                    <label for=\"password_enabledAai20\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"password_tokenUrlAai20\">Token URL</label>\n                                    <div>\n                                        <input name=\"password_tokenUrlAai20\" type=\"text\" id=\"password_tokenUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Token URL\" [(ngModel)]=\"modelAai20().flows.password.tokenUrl\"\n                                               pattern=\"https?://.+\" #passwordTokenUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"passwordTokenUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"password_refreshUrlAai20\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"password_refreshUrlAai20\" type=\"text\" id=\"password_refreshUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"modelAai20().flows.password.refreshUrl\"\n                                               pattern=\"https?://.+\" #passwordRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"passwordRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"password-scopesAai20\">Scopes</label>\n                                    <scopes-input id=\"password-scopesAai20\" [scopes]=\"modelAai20().flows.password.scopes\"\n                                                  (onChange)=\"modelAai20().flows.password.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                            <!-- Client Credentials Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'clientCredentials'\">\n                                <div>\n                                    <input name=\"clientCredentials_enabledAai20\" id=\"clientCredentials_enabledAai20\" type=\"checkbox\" [(ngModel)]=\"modelAai20().flows.clientCredentials.enabled\">\n                                    <label for=\"clientCredentials_enabledAai20\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"clientCredentials_tokenUrlAai20\">Token URL</label>\n                                    <div>\n                                        <input name=\"clientCredentials_tokenUrlAai20\" type=\"text\" id=\"clientCredentials_tokenUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Token URL\" [(ngModel)]=\"modelAai20().flows.clientCredentials.tokenUrl\"\n                                               pattern=\"https?://.+\" #clientCredsTokenUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"clientCredsTokenUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"clientCredentials_refreshUrlAai20\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"clientCredentials_refreshUrlAai20\" type=\"text\" id=\"clientCredentials_refreshUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"modelAai20().flows.clientCredentials.refreshUrl\"\n                                               pattern=\"https?://.+\" #clientCredsRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"clientCredsRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"cc-scopesAai20\">Scopes</label>\n                                    <scopes-input id=\"cc-scopesAai20\" [scopes]=\"modelAai20().flows.clientCredentials.scopes\"\n                                                  (onChange)=\"modelAai20().flows.clientCredentials.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                            <!-- Authorization Code Flow -->\n                            <div class=\"panel-body\" *ngIf=\"oauthTab === 'authorizationCode'\">\n                                <div>\n                                    <input name=\"authorizationCode_enabledAai20\" id=\"authorizationCode_enabledAai20\" type=\"checkbox\" [(ngModel)]=\"modelAai20().flows.authorizationCode.enabled\">\n                                    <label for=\"authorizationCode_enabledAai20\">Enable this OAuth flow</label>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authorizationCode_authorizationUrlAai20\">Auth URL</label>\n                                    <div>\n                                        <input name=\"authorizationCode_authorizationUrlAai20\" type=\"text\" id=\"authorizationCode_authorizationUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Authorization URL\" [(ngModel)]=\"modelAai20().flows.authorizationCode.authorizationUrl\"\n                                               pattern=\"https?://.+\" #authCodeAuthUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"authCodeAuthUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authorizationCode_tokenUrlAai20\">Token URL</label>\n                                    <div>\n                                        <input name=\"authorizationCode_tokenUrlAai20\" type=\"text\" id=\"authorizationCode_tokenUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Token URL\" [(ngModel)]=\"modelAai20().flows.authorizationCode.tokenUrl\"\n                                               pattern=\"https?://.+\" #authCodeTokenUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"authCodeTokenUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authorizationCode_refreshUrlAai20\">Refresh URL</label>\n                                    <div>\n                                        <input name=\"authorizationCode_refreshUrlAai20\" type=\"text\" id=\"authorizationCode_refreshUrlAai20\" class=\"form-control\"\n                                               placeholder=\"OAuth Refresh URL\" [(ngModel)]=\"modelAai20().flows.authorizationCode.refreshUrl\"\n                                               pattern=\"https?://.+\" #authCodeRefreshUrl=\"ngModel\">\n                                        <form-error-message [inputModel]=\"authCodeRefreshUrl\" [type]=\"'pattern'\">Please enter a valid URL.</form-error-message>\n                                    </div>\n                                </div>\n                                <!-- Scopes -->\n                                <div class=\"form-group\">\n                                    <label class=\"control-label\" for=\"authcode-scopesAai20\">Scopes</label>\n                                    <scopes-input id=\"authcode-scopesAai20\" [scopes]=\"modelAai20().flows.authorizationCode.scopes\"\n                                                  (onChange)=\"modelAai20().flows.authorizationCode.scopes = $event\"></scopes-input>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, HostListener, Input} from \"@angular/core\";\nimport {\n    CombinedAllNodeVisitor,\n    Node,\n    TraverserDirection,\n    ValidationProblem,\n    ValidationProblemSeverity,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {ProblemsService} from \"../../_services/problems.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ArrayUtils} from \"apicurio-ts-core\";\nimport {KeypressUtils} from \"../../_util/keypress.util\";\n\n@Component({\n    selector: \"validation-aggregate\",\n    templateUrl: \"validation-aggregate.component.html\",\n    styleUrls: [ \"validation-aggregate.component.css\" ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidationAggregateComponent extends AbstractBaseComponent {\n\n    protected _models: Node[];\n    @Input()\n    set models(models: Node[]) {\n        if (!ArrayUtils.equals(models, this._models)) {\n            this._problems = undefined;\n            this._models = models;\n        }\n    }\n    get models(): Node[] {\n        return this._models;\n    }\n    @Input() properties: string[];\n    @Input() codes: string[];\n    @Input() shallow: boolean;\n    @Input() debug: boolean;\n\n    private _open: boolean = false;\n    public left: string;\n    public top: string;\n\n    private _problems: ValidationProblem[] = undefined;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private problemsService: ProblemsService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        this.log(\"Invalidating cache.\");\n        this._problems = undefined;\n    }\n\n    @HostListener(\"document:click\", [\"$event\"])\n    public onDocumentClick(event: MouseEvent): void {\n        if (this._open) {\n            this.close();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n\n    @HostListener(\"document:scroll\", [\"$event\"])\n    public onDocumentScroll(event: MouseEvent): void {\n        this.onDocumentClick(event);\n    }\n\n    @HostListener(\"window:resize\", [\"$event\"])\n    public onWindowResize(event: MouseEvent): void {\n        this.onDocumentClick(event);\n    }\n\n    public open(event: MouseEvent): void {\n        this.left = event.clientX + \"px\";\n        this.top = event.clientY + \"px\";\n        event.preventDefault();\n        event.stopPropagation();\n        this._open = true;\n    }\n\n    public close(): void {\n        this._open = false;\n    }\n\n    public isOpen(): boolean {\n        return this._open;\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.close();\n        }\n    }\n\n    public hasProblems(): boolean {\n        if (!this.models) {\n            return false;\n        }\n        return this.matchingProblems().length > 0;\n    }\n\n    public matchingProblems(): ValidationProblem[] {\n        if (!this.models) {\n            return [];\n        }\n\n        // Find the relevant problems if not cached.\n        if (this._problems === undefined) {\n            this.log(\"Cache empty, finding matching problems.\");\n            let finder: ProblemFinder = new ProblemFinder(this.properties, this.codes);\n            for (let model of this.models) {\n                if (model !== null && model !== undefined) {\n                    if (this.shallow) {\n                        VisitorUtil.visitNode(model, finder);\n                    } else {\n                        VisitorUtil.visitTree(model, finder, TraverserDirection.down);\n                    }\n                }\n            }\n            this._problems = finder.getProblems();\n        }\n\n        return this._problems;\n    }\n\n    public iconFor(problem: ValidationProblem): string {\n        switch (problem.severity) {\n            case ValidationProblemSeverity.low:\n                return \"pficon-info\";\n            case ValidationProblemSeverity.medium:\n                return \"pficon-warning-triangle-o\";\n            case ValidationProblemSeverity.high:\n                return \"pficon-error-circle-o\";\n            default:\n                return \"\";\n        }\n    }\n\n    public summaryFor(problem: ValidationProblem): string {\n        return this.problemsService.summary(problem);\n    }\n\n    public goTo(problem: ValidationProblem, event: MouseEvent): void {\n        this.close();\n        let goToPath: string = problem.nodePath.toString();\n        if (problem.property) {\n            goToPath += \"/\" + problem.property;\n        }\n        this.__selectionService.select(goToPath);\n        // Delay the highlighting of the path so that the UI has a chance to display\n        // the correct components for the new selection (see above).\n        setTimeout( () => {\n            this.__selectionService.highlightPath(goToPath);\n        }, 50);\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    protected log(message: string): void {\n        if (this.debug) {\n            console.info(\"[ValidationAggregateComponent] \" + message);\n        }\n    }\n}\n\nexport class ProblemFinder extends CombinedAllNodeVisitor {\n\n    private problems: ValidationProblem[] = [];\n\n    constructor(private properties: string[], private codes: string[]) {\n        super();\n    }\n\n    public getProblems(): ValidationProblem[] {\n        return this.problems;\n    }\n\n    visitNode(node: Node): void {\n        node.getValidationProblems().forEach( problem => {\n            if (this.accepts(problem)) {\n                this.problems.push(problem);\n            }\n        });\n    }\n\n    private accepts(problem: ValidationProblem): boolean {\n        let accept: boolean = true;\n\n        if (this.properties !== null && this.properties !== undefined && this.properties.length > 0) {\n            accept = accept && this.properties.indexOf(problem.property) != -1;\n        }\n\n        if (this.codes !== null && this.codes !== undefined && this.codes.length > 0) {\n            accept = accept && this.codes.indexOf(problem.errorCode) != -1;\n        }\n\n        return accept;\n    }\n\n}\n","<span (window:keydown)=\"onGlobalKeyDown($event)\" class=\"validation-aggregate\" *ngIf=\"hasProblems()\">\n    <a (click)=\"open($event)\"><span class=\"fa fa-exclamation-circle\"> </span></a>\n    <div *ngIf=\"isOpen()\" class=\"validation-aggregate-panel\" [style.left]=\"left\" [style.top]=\"top\">\n        <div class=\"problem\" *ngFor=\"let problem of matchingProblems()\" title=\"{{ problem.message }}\">\n            <span class=\"pficon {{ iconFor(problem) }}\"></span>\n            <a (click)=\"goTo(problem, $event)\">{{ summaryFor(problem) }}</a>\n            </div>\n    </div>\n</span>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    Oas30Example, OasHeader,\n    Oas30Response,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {CommandService} from \"../../../../_services/command.service\";\n\nexport interface HttpHeaderChangeEvent {\n    name: string;\n    header: SimplifiedType;\n}\n\nexport interface AddExampleEvent {\n    header: OasHeader;\n    name: string;\n    value: any;\n}\n\nexport interface DeleteExampleEvent {\n    example: Oas30Example;\n}\n\nexport interface ExamplePropertyChangeEvent {\n    example: Oas30Example;\n    value: string;\n}\n\n\n@Component({\n    selector: \"httpHeaders\",\n    templateUrl: \"http-headers.component.html\",\n    styleUrls: [ \"http-headers.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HttpHeadersComponent extends AbstractBaseComponent {\n\n    @Input() parent: Oas30Response;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService, private commandService: CommandService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public hasHttpHeaders(): boolean {\n        return this.parent.getHeaders().length > 0;\n    }\n\n    public httpHeaderNames(): string[] {\n        if (this.parent.headers) {\n            return Object.keys(this.parent.headers);\n        }\n        return [];\n    }\n\n    public httpHeaders(): string[]{\n        if(this.parent.headers){\n            return Object.keys(this.parent.headers);\n        }\n        return [];\n    }\n\n    public httpHeaderByName(name: string): OasHeader {\n        return this.parent.getHeader(name);\n    }\n\n    public addHttpHeader(httpHeader: string): void {\n        let command: ICommand = CommandFactory.createNewHeaderCommand(this.parent, httpHeader);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.parent);\n        nodePath.appendSegment(\"header\", false);\n        nodePath.appendSegment(httpHeader, true);\n        this.selectionService.select(nodePath.toString());\n    }\n\n}\n","<div class=\"httpHeaders\" *ngIf=\"hasHttpHeaders()\">\n    <div class=\"container-fluid media-types typed-item-list\">\n        <header-row *ngFor=\"let header of httpHeaders()\" [item]=\"httpHeaderByName(header)\"></header-row>\n    </div>\n    <div class=\"actions\">\n        <a (click)=\"addHttpHeaderDialog.open(httpHeaderNames())\">Add a http header</a>\n    </div>\n</div>\n\n<div class=\"httpHeaders\" *ngIf=\"!hasHttpHeaders()\">\n    <signpost>\n        <span>No http headers have been defined.</span>\n        <a (click)=\"addHttpHeaderDialog.open(httpHeaderNames())\">Add a http header</a>\n    </signpost>\n</div>\n\n<add-header-dialog #addHttpHeaderDialog (onAdd)=\"addHttpHeader($event)\"></add-header-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    ICommand,\n    Library,\n    OasOperation,\n    OasParameter,\n    OasPathItem,\n    SimplifiedParameterType,\n    SimplifiedType,\n    OasDocument,\n    Oas30Parameter,\n    Oas30Example,\n    Schema, DocumentType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport { EditExampleEvent } from \"../../dialogs/edit-example.component\";\nimport {DropDownOption, DropDownOptionValue} from \"../../common/drop-down.component\";\n\n@Component({\n    selector: \"header-param-row\",\n    templateUrl: \"header-param-row.component.html\",\n    styleUrls: [ \"header-param-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderParamRowComponent extends AbstractRowComponent<OasParameter, SimplifiedParameterType> {\n\n    private _overriddenParam: OasParameter;\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onRename: EventEmitter<void> = new EventEmitter<void>();\n\n    private _parentType: string;\n\n    private overrideFlag: boolean;\n    private missingFlag: boolean;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Update the internal model.\n     */\n    protected updateModel(): void {\n        this._model = SimplifiedParameterType.fromParameter(this.item as any);\n        this.missingFlag = this.item.getAttribute(\"missing\") === true;\n        this._overriddenParam = this.getOverriddenParam(this.item);\n        this.overrideFlag = this._overriddenParam !== null;\n        this._parentType = this.detectParentType();\n    }\n\n    public isParentOperation(): boolean {\n        return this._parentType === \"operation\";\n    }\n\n    public isParentPath(): boolean {\n        return this._parentType === \"pathItem\";\n    }\n\n    public isParameter(): boolean {\n        return true;\n    }\n\n    public hasDescription(): boolean {\n        if (this.item.description) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public is3xDocument(): boolean {\n        return (<OasDocument> this.item.ownerDocument()).is3xDocument();\n    }\n\n    public hasExamples(): boolean {\n        if (this.item instanceof Oas30Parameter) {\n            return this.paramExamples().length > 0;\n        }\n        return false;\n    }\n\n    public paramExamples(): Oas30Example[] {\n        return <any>(<Oas30Parameter> this.item).getExamples();\n    }\n\n    public exampleValue(example: Oas30Example): string {\n        let evalue: any = example.value;\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public isRequired(): boolean {\n        return this.item.required;\n    }\n\n    public required(): string {\n        return this.isRequired() ? \"required\" : \"not-required\";\n    }\n\n    public requiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public isEditingDescription(): boolean {\n        return this.isEditingTab(\"description\");\n    }\n\n    public isEditingSummary(): boolean {\n        return this.isEditingTab(\"summary\");\n    }\n\n    public isEditingExamples(): boolean {\n        return this.isEditingTab(\"examples\");\n    }\n\n    public toggleDescription(): void {\n        if (this.isOverridable()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"description\");\n    }\n\n    public toggleSummary(): void {\n        if (this.isOverridable()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"summary\");\n    }\n\n    public toggleExamples(): void {\n        if (this.isOverridable() || this.isMissing()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"examples\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public displayType(): SimplifiedParameterType {\n        return SimplifiedParameterType.fromParameter(this.item as any);\n    }\n\n    public displayExamples(): string {\n        if (this.hasExamples()) {\n            return `${this.paramExamples().length} example(s) defined.`;\n        } else {\n            return \"No examples defined.\"\n        }\n    }\n\n    public rename(): void {\n        this.onRename.emit();\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model().required = newValue === \"required\";\n        let command: ICommand = CommandFactory.createChangePropertyCommand<boolean>(this.item, \"required\", this.model().required);\n        this.commandService.emit(command);\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedParameterType = new SimplifiedParameterType();\n        nt.required = this.model().required;\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeParameterTypeCommand(this.item.ownerDocument().getDocumentType(),\n            this.item as any, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n    public addExample(exampleData: any): void {\n        const param = <Oas30Parameter> this.item;\n        let command: ICommand = CommandFactory.createAddParameterExampleCommand(param,\n            exampleData.value, exampleData.name, null, null);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.item);\n        nodePath.appendSegment(\"examples\", false);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public deleteExample(example: Oas30Example): void {\n        console.info(\"[HeaderParamRowComponent] Deleting an example of a header parameter.\");\n        let command: ICommand = CommandFactory.createDeleteParameterExampleCommand(example);\n        this.commandService.emit(command);\n    }\n\n    public deleteAllExamples(): void {\n        const param = <Oas30Parameter> this.item;\n        let command: ICommand = CommandFactory.createDeleteAllParameterExamplesCommand(param);\n        this.commandService.emit(command);\n    }\n\n    public editExample(event: EditExampleEvent): void {\n        console.info(\"[HeaderParamRowComponent] Changing the value of a Parameter example.\");\n        if (this.item.ownerDocument().ownerDocument().getDocumentType() === DocumentType.openapi3) {\n            let command: ICommand = CommandFactory.createSetParameterExampleCommand(<Oas30Parameter>this.item,\n                event.value, event.example.getName());\n            this.commandService.emit(command);\n        }\n    }\n\n    public schemaForExample(): Schema {\n        var param = <Oas30Parameter> this.item;\n        return param.schema;\n    }\n\n    public override(): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.item.parent() as any, this.item.name,\n            \"header\", null, null, true);\n        this.commandService.emit(command);\n\n        let nodePath = Library.createNodePath(this.item.parent());\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public isMissing(): boolean {\n        return this.missingFlag && !this.overrideFlag;\n    }\n\n    public isExists(): boolean {\n        return !this.missingFlag;\n    }\n\n    public isOverride(): boolean {\n        return !this.missingFlag && this.overrideFlag;\n    }\n\n    public isOverridable(): boolean {\n        return this.missingFlag && this.overrideFlag;\n    }\n\n    public isLocalOnly(): boolean {\n        return !this.overrideFlag && !this.missingFlag;\n    }\n\n    public getOverriddenParam(param: OasParameter): OasParameter {\n        let viz: DetectOverrideVisitor = new DetectOverrideVisitor(param);\n        param.parent().accept(viz);\n        return viz.overriddenParam;\n    }\n\n    private detectParentType(): string {\n        let viz: DetectParentTypeVisitor = new DetectParentTypeVisitor();\n        this.item.parent().accept(viz);\n        return viz.parentType;\n    }\n\n}\n\n\nclass DetectOverrideVisitor extends CombinedVisitorAdapter {\n\n    public overriddenParam: OasParameter = null;\n\n    constructor(private param: OasParameter) {\n        super();\n    }\n\n    public visitOperation(node: OasOperation): void {\n        this.overriddenParam = (<OasPathItem>node.parent()).getParameter(this.param.in, this.param.name) as OasParameter;\n    }\n\n}\n\n\nclass DetectParentTypeVisitor extends CombinedVisitorAdapter {\n\n    public parentType: string = null;\n\n    public visitOperation(node: OasOperation): void {\n        this.parentType = \"operation\";\n    }\n\n    public visitPathItem(node: OasPathItem): void {\n        this.parentType = \"pathItem\";\n    }\n\n}\n","<div class=\"header-param\" [class.expanded]=\"isEditing()\" [class.required]=\"isRequired()\" [class.overridable]=\"isOverridable()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"apicurio-icon-override icon-override\" *ngIf=\"isParentOperation() && isOverride()\"\n                  title=\"Overrides a parameter defined at the Path level.\"></span>\n            <span class=\"apicurio-icon-inherit-d icon-override\" *ngIf=\"isParentOperation() && isOverridable()\"\n                  title=\"Header parameter inherited from the Path level.\"></span>\n            <span class=\"apicurio-icon-local-d icon-override\" *ngIf=\"isParentOperation() && isLocalOnly()\"\n                  title=\"Header parameter defined for this operation only.\"></span>\n            <span title=\"{{ item.name }}\">{{ item.name }}</span>\n        </div>\n        <div class=\"description\" (click)=\"toggleDescription()\" [class.selected]=\"isEditingDescription()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingDescription()\"></span>\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"summary\" (click)=\"toggleSummary()\" [class.selected]=\"isEditingSummary()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingSummary()\"></span>\n            <span class=\"parameter-required\" *ngIf=\"isRequired()\" title=\"This header parameter is required.\">[required]</span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"examples\" (click)=\"toggleExamples()\" [class.selected]=\"isEditingExamples()\" *ngIf=\"is3xDocument()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingExamples()\"></span>\n            <span [class.empty]=\"!hasExamples()\"> {{ displayExamples() }}</span>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\" *ngIf=\"!isOverridable()\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"rename()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n            <button *ngIf=\"isOverridable()\" (click)=\"override()\" title=\"Override the header parameter.\"\n                    class=\"btn btn-default btn-xs btn-override\">Override</button>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"param-description\" *ngIf=\"isEditingDescription()\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'No description.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                    <div class=\"param-content\" *ngIf=\"isEditingSummary()\">\n                        <div class=\"param-required\">\n                            <span class=\"dropdown-label\">Parameter is</span>\n                            <drop-down [id]=\"'api-param-required'\"\n                                       [value]=\"required()\"\n                                       [options]=\"requiredOptions()\"\n                                       (onValueChange)=\"changeRequired($event)\"\n                                       [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                        </div>\n                        <div class=\"param-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"isParameter()\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                    <div class=\"param-examples\" *ngIf=\"isEditingExamples()\">\n                        <div class=\"form-label\">Examples</div>\n                        <signpost *ngIf=\"!hasExamples()\">\n                            <span>No examples have been defined.</span>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </signpost>\n                        <div *ngIf=\"hasExamples()\">\n                            <table class=\"table table-striped table-bordered table-examples\">\n                                <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th class=\"pre-actions\">Example</th>\n                                    <th class=\"actions\"></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let example of paramExamples()\">\n                                    <td class=\"name\">\n                                        <validation-problem [model]=\"example\"></validation-problem>\n                                        <span>{{ example.getName() }}</span>\n                                    </td>\n                                    <td class=\"value pre-actions\">\n                                        <span>{{ exampleValue(example) }}</span>\n                                    </td>\n                                    <td class=\"actions\">\n                                        <div>\n                                            <icon-button (onClick)=\"deleteExample(example)\" [pullRight]=\"true\" type=\"delete\"\n                                                            [title]=\"'Delete example.'\"></icon-button>\n                                            <icon-button (onClick)=\"editExampleDialog.open(example)\" [pullRight]=\"true\" type=\"edit\"\n                                                            [title]=\"'Edit example.'\"></icon-button>\n                                        </div>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <add-example-dialog #addExampleDialog (onAdd)=\"addExample($event)\" [schema]=\"schemaForExample()\"></add-example-dialog>\n    <edit-example-dialog #editExampleDialog (onEdit)=\"editExample($event)\" [schema]=\"schemaForExample()\"></edit-example-dialog>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {\n    Aai20Schema,\n    Aai20SchemaDefinition,\n    AaiDocument,\n    DocumentType,\n    Oas20Schema,\n    Oas20SchemaDefinition,\n    Oas30Schema,\n    Oas30SchemaDefinition,\n    OasDocument,\n    SimplifiedPropertyType,\n    SimplifiedType,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {\n    FindAaiSchemaDefinitionsVisitor,\n    FindSchemaDefinitionsVisitor\n} from \"../../_visitors/schema-definitions.visitor\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport Oas20PropertySchema = Oas20Schema.Oas20PropertySchema;\nimport Oas30PropertySchema = Oas30Schema.Oas30PropertySchema;\nimport Aai20PropertySchema = Aai20Schema.Aai20PropertySchema;\nimport {DIVIDER, DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\nexport interface PropertyData {\n    name: string;\n    description: string;\n    type: SimplifiedPropertyType;\n}\n\nexport interface PropertyEditorEvent extends EntityEditorEvent<Oas20PropertySchema | Oas30PropertySchema | Aai20PropertySchema> {\n    data: PropertyData;\n}\n\nexport interface IPropertyEditorHandler extends IEntityEditorHandler<Oas20PropertySchema | Oas30PropertySchema | Aai20PropertySchema, PropertyEditorEvent> {\n    onSave(event: PropertyEditorEvent): void;\n    onCancel(event: PropertyEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"property-editor\",\n    templateUrl: \"property-editor.component.html\",\n    styleUrls: [\"property-editor.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class PropertyEditorComponent extends EntityEditor<Oas20PropertySchema | Oas30PropertySchema | Aai20PropertySchema, PropertyEditorEvent> {\n\n    props: string[] = [];\n    propExists: boolean = false;\n\n    public model: PropertyData;\n\n    public doAfterOpen(): void {\n        this.props = [];\n        this.propExists = false;\n        let properties: (Oas20PropertySchema | Oas30PropertySchema | Aai20PropertySchema)[] = this.getProps();\n        this.props = properties.map(p => p.getPropertyName());\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @prop entity\n     */\n    public initializeModelFromEntity(entity: Oas20PropertySchema | Oas30PropertySchema | Aai20PropertySchema): void {\n        // Note: nothing to do here because properties aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\",\n            type: new SimplifiedPropertyType()\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.propExists;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): PropertyEditorEvent {\n        let event: PropertyEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    /**\n     * Gets the array of properties for the current context.\n     */\n    private getProps(): (Oas20PropertySchema | Oas30PropertySchema | Aai20PropertySchema)[] {\n        let parent: Oas20SchemaDefinition | Oas30SchemaDefinition |  Aai20SchemaDefinition = this.context as Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition;\n        if (parent.properties) {\n            let props: (Oas20PropertySchema | Oas30PropertySchema |  Aai20PropertySchema)[] = [];\n            Object.keys(parent.properties).forEach( pkey => {\n                props.push(parent.properties[pkey] as Oas20PropertySchema | Oas30PropertySchema |  Aai20PropertySchema);\n            });\n            return props;\n        }\n        return [];\n    }\n\n    public isRequired(): boolean {\n        return this.model.type.required;\n    }\n\n    public required(): string {\n        return this.isRequired() ? \"required\" : \"not-required\";\n    }\n\n    public requiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public type(): string {\n        if (!ObjectUtils.isNullOrUndefined(this.model.type)) {\n            if (this.model.type.isEnum()) {\n                return \"enum\";\n            }\n            return ObjectUtils.undefinedAsNull(this.model.type.type);\n        }\n        return null;\n    }\n\n    public typeOptions(): DropDownOption[] {\n        let options: DropDownOption[] = [\n            new DropDownOptionValue(\"Array\", \"array\"),\n            new DropDownOptionValue(\"Enum\", \"enum\"),\n            DIVIDER,\n            new DropDownOptionValue(\"String\", \"string\"),\n            new DropDownOptionValue(\"Integer\", \"integer\"),\n            new DropDownOptionValue(\"Boolean\", \"boolean\"),\n            new DropDownOptionValue(\"Number\", \"number\")\n        ];\n        this.addRefTypes(options);\n        return options;\n    }\n\n    public typeOf(): string {\n        if (this.model.type && this.model.type.of) {\n            return ObjectUtils.undefinedAsNull(this.model.type.of.type);\n        }\n        return null;\n    }\n\n    public typeOfOptions(): DropDownOption[] {\n        let options: DropDownOption[] = [\n            new DropDownOptionValue(\"String\", \"string\"),\n            new DropDownOptionValue(\"Integer\", \"integer\"),\n            new DropDownOptionValue(\"Boolean\", \"boolean\"),\n            new DropDownOptionValue(\"Number\", \"number\")\n        ];\n        this.addRefTypes(options);\n        return options;\n    }\n\n    public typeAs(): string {\n        if (ObjectUtils.isNullOrUndefined(this.model.type)) {\n            return null;\n        }\n        if (this.model.type.isArray() && this.model.type.of && this.model.type.of.isSimpleType()) {\n            return ObjectUtils.undefinedAsNull(this.model.type.of.as);\n        }\n        if (this.model.type.isSimpleType()) {\n            return ObjectUtils.undefinedAsNull(this.model.type.as);\n        }\n        return null;\n    }\n\n    public typeAsOptions(): DropDownOption[] {\n        let options: DropDownOption[];\n        let st: SimplifiedType = this.model.type;\n        if (this.model.type && this.model.type.isArray() && this.model.type.of && this.model.type.of.isSimpleType()) {\n            st = this.model.type.of;\n        }\n        if (st.type === \"string\") {\n            options = [\n                new DropDownOptionValue(\"String\", null),\n                new DropDownOptionValue(\"Byte\", \"byte\"),\n                new DropDownOptionValue(\"Binary\", \"binary\"),\n                new DropDownOptionValue(\"Date\", \"date\"),\n                new DropDownOptionValue(\"DateTime\", \"date-time\"),\n                new DropDownOptionValue(\"Password\", \"password\")\n            ];\n        } else if (st.type === \"integer\") {\n            options = [\n                new DropDownOptionValue(\"Integer\", null),\n                new DropDownOptionValue(\"32-Bit Integer\", \"int32\"),\n                new DropDownOptionValue(\"64-Bit Integer\", \"int64\")\n            ];\n        } else if (st.type === \"number\") {\n            options = [\n                new DropDownOptionValue(\"Number\", null),\n                new DropDownOptionValue(\"Float\", \"float\"),\n                new DropDownOptionValue(\"Double\", \"double\")\n            ];\n        }\n        return options;\n    }\n\n    public shouldShowEnumEditor(): boolean {\n        return this.model.type && this.model.type.isEnum();\n    }\n\n    public shouldShowFormattedAs(): boolean {\n        let st: SimplifiedType = this.model.type;\n        if (this.model.type && this.model.type.isArray() && this.model.type.of && this.model.type.of.isSimpleType()) {\n            st = this.model.type.of;\n        }\n        return st && st.isSimpleType() && !st.isEnum() && (st.type !== \"boolean\");\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model.type.required = newValue === \"required\";\n    }\n\n    public changeType(type: string): void {\n        if (type === \"enum\") {\n            this.model.type.type = \"string\";\n            this.model.type.enum_ = [];\n        } else {\n            this.model.type.type = type;\n            this.model.type.enum_ = null;\n            this.model.type.of = null;\n            this.model.type.as = null;\n        }\n    }\n\n    public changeTypeEnum(value: string[]): void {\n        this.model.type.enum_ = value;\n    }\n\n    public changeTypeOf(typeOf: string): void {\n        this.model.type.of = new SimplifiedType();\n        this.model.type.of.type = typeOf;\n        this.model.type.as = null;\n    }\n\n    public changeTypeAs(typeAs: string): void {\n        if (this.model.type.isSimpleType()) {\n            this.model.type.as = typeAs;\n        }\n        if (this.model.type.isArray() && this.model.type.of) {\n            this.model.type.of.as = typeAs;\n        }\n    }\n\n    private addRefTypes(options: DropDownOption[]): void {\n        let refPrefix: string = \"#/components/schemas/\";\n        let defs: (Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition)[]\n\n        if (this.context.ownerDocument().getDocumentType() == DocumentType.asyncapi2) {\n            let doc: AaiDocument = <AaiDocument> this.context.ownerDocument();\n            let viz: FindAaiSchemaDefinitionsVisitor = new FindAaiSchemaDefinitionsVisitor(null);\n            VisitorUtil.visitTree(doc, viz, TraverserDirection.down);\n            defs = viz.getSortedSchemaDefinitions();\n\n        } else {\n            let doc: OasDocument = <OasDocument> this.context.ownerDocument();\n            if (doc.is2xDocument()) {\n                refPrefix = \"#/definitions/\";\n            }\n            let viz: FindSchemaDefinitionsVisitor = new FindSchemaDefinitionsVisitor(null);\n            VisitorUtil.visitTree(doc, viz, TraverserDirection.down);\n            defs = viz.getSortedSchemaDefinitions();\n        }\n        if (defs.length > 0) {\n            options.push(DIVIDER);\n            defs.forEach(def => {\n                let defName: string = def.getName();\n                options.push(new DropDownOptionValue(defName, refPrefix + defName));\n            });\n        }\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"schemaProperty\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define a new Data Type Property.\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span>Enter a name and description for the new property.</span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"qp_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"qp_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique property name.\" pattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                           (ngModelChange)=\"propExists = props.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"propExists\">Property named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row-fluid divider-section\">\n        <div class=\"col-md-12\">\n            <hr />\n        </div>\n    </div>\n    <div class=\"row-fluid body-section type-section\">\n        <div class=\"col-md-12\">\n            <h3>2. Enter Type Information <span class=\"optional empty\">(optional)</span></h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter information about the property's type (and whether it is required).\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <div>\n                    <div class=\"prop-type\">\n                        <span class=\"propIs-label dropdown-label\">Property is</span>\n                        <drop-down [id]=\"'api-prop-required'\"\n                                   [value]=\"required()\"\n                                   [options]=\"requiredOptions()\"\n                                   (onValueChange)=\"changeRequired($event)\"\n                                   [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                        <span class=\"strong type-label dropdowns-label\">and has type</span>\n                        <drop-down [id]=\"'api-prop-type'\"\n                                   [value]=\"type()\"\n                                   [options]=\"typeOptions()\"\n                                   (onValueChange)=\"changeType($event)\"\n                                   [noSelectionLabel]=\"'Choose Type'\"></drop-down>\n                        <span class=\"of-label dropdowns-label\" *ngIf=\"type() === 'array'\">of</span>\n                        <drop-down *ngIf=\"type() === 'array'\"\n                                   [id]=\"'api-prop-type-of'\"\n                                   [value]=\"typeOf()\"\n                                   [options]=\"typeOfOptions()\"\n                                   (onValueChange)=\"changeTypeOf($event)\"\n                                   [noSelectionLabel]=\"'Choose Type'\"></drop-down>\n                        <span class=\"as-label dropdowns-label\" *ngIf=\"shouldShowFormattedAs()\">as</span>\n                        <drop-down *ngIf=\"shouldShowFormattedAs()\"\n                                   [id]=\"'api-prop-type-as'\"\n                                   [value]=\"typeAs()\"\n                                   [options]=\"typeAsOptions()\"\n                                   (onValueChange)=\"changeTypeAs($event)\"\n                                   [noSelectionLabel]=\"'Format'\"></drop-down>\n                    </div>\n                    <div class=\"prop-enum\" id=\"prop-enum\" *ngIf=\"shouldShowEnumEditor()\">\n                        <span class=\"enum-label\">Enum Values: </span>\n                        <inline-array-editor *ngIf=\"shouldShowEnumEditor()\" [value]=\"model.type.enum_\" (onChange)=\"changeTypeEnum($event)\"\n                                             noValueMessage=\"Click to define enum values.\"></inline-array-editor>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component} from \"@angular/core\";\nimport {\n    AaiMessage,\n    AaiDocument,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {FindMessageDefinitionsVisitor} from \"../../_visitors/message-definitions.visitor\";\n\n\nexport interface MessageData {\n    name: string;\n    description: string;\n}\n\nexport interface MessageEditorEvent extends EntityEditorEvent<AaiMessage> {\n    data: MessageData;\n}\n\nexport interface IMessageEditorHandler extends IEntityEditorHandler<AaiMessage, MessageEditorEvent> {\n    onSave(event: MessageEditorEvent): void;\n    onCancel(event: MessageEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"message-editor\",\n    templateUrl: \"message-editor.component.html\",\n    styleUrls: [\"message-editor.component.css\"]\n})\nexport class MessageEditorComponent extends EntityEditor<AaiMessage, MessageEditorEvent> {\n\n    messages: string[] = [];\n    messageExists: boolean = false;\n\n    public model: MessageData = {\n        name: \"\",\n        description: \"\"\n    };\n\n    public doAfterOpen(): void {\n        this.messages = [];\n        this.messageExists = false;\n        let mess: AaiMessage[] = this.getMessages(<AaiDocument> this.context.ownerDocument());\n        this.messages = mess.map(definition => FindMessageDefinitionsVisitor.definitionName(definition));\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: AaiMessage): void {\n        // Note: nothing to do here because data types aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\"\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.messageExists;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): MessageEditorEvent {\n        let event: MessageEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    private getMessages(document: AaiDocument): AaiMessage[] {\n        let vizzy: FindMessageDefinitionsVisitor = new FindMessageDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedMessageDefinitions()\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"message\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define a New Message\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter a name and description for the new message.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"rsp_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"rsp_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique message name.\" pattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                           (ngModelChange)=\"messageExists = messages.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"messageExists\">Message named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AfterViewInit, Component, QueryList, ViewChildren, ViewEncapsulation} from \"@angular/core\";\nimport {TextAreaEditorComponent} from \"./inline-editor.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CodeEditorComponent, CodeEditorMode} from \"./code-editor.component\";\n\n@Component({\n    selector: \"inline-json-editor\",\n    templateUrl: \"inline-json-editor.component.html\",\n    styleUrls: [ \"inline-json-editor.component.css\" ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class InlineJsonEditorComponent extends TextAreaEditorComponent implements AfterViewInit {\n\n    @ViewChildren(\"codeEditor\") codeEditor: QueryList<CodeEditorComponent>;\n\n    _mode: CodeEditorMode = CodeEditorMode.JSON;\n\n    constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    ngAfterViewInit(): void {\n        this.codeEditor.changes.subscribe(changes => {\n            if (changes.last) {\n                changes.last.focus();\n            }\n        });\n    }\n\n    displayValue(): string {\n        if (this.isEmpty()) {\n            return this.noValueMessage;\n        }\n        return this.formatValue(this.value);\n    }\n\n    protected formatValue(value: string): string {\n        return value;\n    }\n\n    public codeEditorMode(): CodeEditorMode {\n        return this._mode;\n    }\n\n}\n","<div class=\"inline-json-editor-label\" *ngIf=\"!editing\" (click)=\"onStartEditing()\" title=\"Click to edit.\">\n    <pre *ngIf=\"!isEmpty()\">{{ displayValue() }}</pre>\n    <div class=\"no-value\" *ngIf=\"isEmpty()\">\n        <span class=\"empty\">{{ noValueMessage }}</span>\n        <i class=\"glyphicon glyphicon-pencil\"></i>\n    </div>\n</div>\n<div class=\"inline-editor inline-json-editor\" *ngIf=\"editing\" (keyup)=\"onInputKeypress($event)\">\n    <code-editor [mode]=\"codeEditorMode()\" #codeEditor\n                 [debounceTime]=\"150\"\n                 [(text)]=\"evalue\"\n                 wordWrap=\"true\"\n                 [editorStyle]=\"{ position: 'relative', height: '220px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n    <button title=\"Save changes.\" class=\"btn btn-xs btn-primary btn-save\" (click)=\"onSave()\"><span class=\"fa fa-fw fa-check\"></span></button>\n    <button title=\"Cancel changes.\" class=\"btn btn-xs btn-default btn-cancel\" (click)=\"onCancel()\"><span class=\"fa fa-fw fa-close\"></span></button>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Injectable} from \"@angular/core\";\nimport * as pluralize from \"pluralize\";\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    Oas20Parameter,\n    Oas20Response,\n    Oas30MediaType,\n    Oas30Operation,\n    Oas30Parameter,\n    Oas30PathItem,\n    Oas30Response,\n    Oas30Schema,\n    OasDocument,\n    OasOperation,\n    OasPathItem,\n    OasResponse,\n    OasResponses\n} from \"@apicurio/data-models\";\n\n/**\n * A service providing functionality related to managing standard REST resources.\n */\n@Injectable()\nexport class RestResourceService {\n\n    constructor() {\n    }\n\n    public generateRESTResourceCommands(dataTypeName: string, document: OasDocument): ICommand[] {\n        let commands: ICommand[] = [];\n\n        console.info(\"[RestResourceService] Creating REST resource from: \", dataTypeName);\n        let lcName: string = dataTypeName.toLocaleLowerCase();\n        let pluralName: string = pluralize.plural(lcName);\n        let pluralCapitalized: string = pluralize.plural(dataTypeName);\n\n        if (!this.canPluralize(lcName)) {\n            pluralName = lcName;\n            pluralCapitalized = dataTypeName;\n        }\n\n        let basePath: string = `/${pluralName}`;\n        let subPath: string = `/${pluralName}/{${lcName}Id}`;\n\n        console.info(`[RestResourceService] Paths to create:\\n\\t${basePath}\\n\\t${subPath}`);\n\n        // Create the base path item e.g. /widgets with a GET and POST operation\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // The path item\n        let basePathItem: OasPathItem = document.createPaths().createPathItem(basePath);\n\n        // The GET operation\n        let baseGetOp: OasOperation = basePathItem.createOperation(\"get\");\n        basePathItem.get = baseGetOp;\n        baseGetOp.summary = `List All ${pluralCapitalized}`;\n        baseGetOp.operationId = `get${pluralCapitalized}`;\n        baseGetOp.description = `Gets a list of all \\`${dataTypeName}\\` entities.`;\n        let baseGetOpResponses: OasResponses = baseGetOp.createResponses();\n        baseGetOp.responses = baseGetOpResponses;\n        let baseGetOp200Response: OasResponse = baseGetOpResponses.createResponse(\"200\");\n        baseGetOp200Response.description = `Successful response - returns an array of \\`${dataTypeName}\\` entities.`;\n        baseGetOpResponses.addResponse(\"200\", baseGetOp200Response);\n\n        // The POST operation\n        let basePostOp: OasOperation = basePathItem.createOperation(\"post\");\n        basePathItem.post = basePostOp;\n        basePostOp.summary = `Create a ${dataTypeName}`;\n        basePostOp.operationId = `create${dataTypeName}`;\n        basePostOp.description = `Creates a new instance of a \\`${dataTypeName}\\`.`;\n        let basePostOpResponses: OasResponses = basePostOp.createResponses();\n        basePostOp.responses = basePostOpResponses;\n        let basePostOp201Response: OasResponse = basePostOpResponses.createResponse(\"201\");\n        basePostOp201Response.description = `Successful response.`;\n        basePostOpResponses.addResponse(\"201\", basePostOp201Response);\n\n        // OAI 3.0 specific\n        if (document.is3xDocument()) {\n            // Path Item name + description\n            let pi: Oas30PathItem = basePathItem as Oas30PathItem;\n            pi.summary = `Path used to manage the list of ${pluralName}.`;\n            pi.description = `The REST endpoint/path used to list and create zero or more \\`${dataTypeName}\\` entities.  This path contains a \\`GET\\` and \\`POST\\` operation to perform the list and create tasks, respectively.`;\n\n            // GET operation response\n            let getOp200Response: Oas30Response = baseGetOp200Response as Oas30Response;\n            let getOp200ResponseMT: Oas30MediaType = getOp200Response.createMediaType(\"application/json\");\n            getOp200Response.addMediaType(\"application/json\", getOp200ResponseMT);\n            getOp200ResponseMT.schema = getOp200ResponseMT.createSchema();\n            getOp200ResponseMT.schema.type = \"array\";\n            getOp200ResponseMT.schema.items = getOp200ResponseMT.schema.createItemsSchema();\n            getOp200ResponseMT.schema.items.$ref = `#/components/schemas/${dataTypeName}`;\n\n            // POST operation request body\n            let basePostOp30: Oas30Operation = basePostOp as Oas30Operation;\n            basePostOp30.requestBody = basePostOp30.createRequestBody();\n            basePostOp30.requestBody.required = true;\n            basePostOp30.requestBody.description = `A new \\`${dataTypeName}\\` to be created.`;\n            let putOpMT: Oas30MediaType = basePostOp30.requestBody.createMediaType(\"application/json\");\n            basePostOp30.requestBody.addMediaType(\"application/json\", putOpMT);\n            putOpMT.schema = putOpMT.createSchema();\n            putOpMT.schema.$ref = `#/components/schemas/${dataTypeName}`;\n        }\n        // OAI 2.0 specific\n        if (document.is2xDocument()) {\n            // GET operation response\n            let getOp200Response: Oas20Response = baseGetOp200Response as Oas20Response;\n            getOp200Response.schema = getOp200Response.createSchema();\n            getOp200Response.schema.type = \"array\";\n            getOp200Response.schema.items = getOp200Response.schema.createItemsSchema();\n            getOp200Response.schema.items.$ref = `#/definitions/${dataTypeName}`;\n\n            // PUT operation request body\n            let bodyParam: Oas20Parameter = basePostOp.createParameter() as Oas20Parameter;\n            bodyParam.name = \"body\";\n            bodyParam.in = \"body\";\n            bodyParam.description = `A new \\`${dataTypeName}\\` to be created.`;\n            bodyParam.required = true;\n            bodyParam.schema = bodyParam.createSchema();\n            bodyParam.schema.$ref = `#/definitions/${dataTypeName}`;\n            basePostOp.addParameter(bodyParam);\n        }\n\n        // The command to create it\n        let basePathCmd: ICommand = CommandFactory.createAddPathItemCommand(basePath, Library.writeNode(basePathItem));\n        commands.push(basePathCmd);\n\n        // Create the sub-path item e.g. \"/widgets/{widgetId}\" with GET, PUT, and DELETE operations\n        //////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n        // The path item\n        let subPathItem: OasPathItem = document.createPaths().createPathItem(subPath);\n\n        // The path parameter\n        let subPathParam: Oas30Parameter | Oas20Parameter = subPathItem.createParameter() as Oas30Parameter | Oas20Parameter;\n        subPathParam.description = `A unique identifier for a \\`${dataTypeName}\\`.`;\n        subPathParam.name = lcName + \"Id\";\n        subPathParam.in = \"path\";\n        subPathParam.required = true;\n        subPathItem.addParameter(subPathParam);\n\n        // The GET operation\n        let subGetOp: OasOperation = subPathItem.createOperation(\"get\");\n        subPathItem.get = subGetOp;\n        subGetOp.summary = `Get a ${dataTypeName}`;\n        subGetOp.operationId = `get${dataTypeName}`;\n        subGetOp.description = `Gets the details of a single instance of a \\`${dataTypeName}\\`.`;\n        let subGetOpResponses: OasResponses = subGetOp.createResponses();\n        subGetOp.responses = subGetOpResponses;\n        let subGetOp200Response: OasResponse = subGetOpResponses.createResponse(\"200\");\n        subGetOp200Response.description = `Successful response - returns a single \\`${dataTypeName}\\`.`;\n        subGetOpResponses.addResponse(\"200\", subGetOp200Response);\n\n        // The PUT operation\n        let subPutOp: OasOperation = subPathItem.createOperation(\"put\");\n        subPathItem.put = subPutOp;\n        subPutOp.summary = `Update a ${dataTypeName}`;\n        subPutOp.operationId = `update${dataTypeName}`;\n        subPutOp.description = `Updates an existing \\`${dataTypeName}\\`.`;\n        let subPutOpResponses: OasResponses = subPutOp.createResponses();\n        subPutOp.responses = subPutOpResponses;\n        let subPutOp202Response: OasResponse = subPutOpResponses.createResponse(\"202\");\n        subPutOp202Response.description = `Successful response.`;\n        subPutOpResponses.addResponse(\"202\", subPutOp202Response);\n\n        // The DELETE operation\n        let subDeleteOp: OasOperation = subPathItem.createOperation(\"delete\");\n        subPathItem.delete = subDeleteOp;\n        subDeleteOp.summary = `Delete a ${dataTypeName}`;\n        subDeleteOp.operationId = `delete${dataTypeName}`;\n        subDeleteOp.description = `Deletes an existing \\`${dataTypeName}\\`.`;\n        let subDeleteOpResponses: OasResponses = subDeleteOp.createResponses();\n        subDeleteOp.responses = subDeleteOpResponses;\n        let subDeleteOp204Response: OasResponse = subDeleteOpResponses.createResponse(\"204\");\n        subDeleteOp204Response.description = `Successful response.`;\n        subDeleteOpResponses.addResponse(\"204\", subDeleteOp204Response);\n\n        // OAI 3.0 specific\n        if (document.is3xDocument()) {\n            let pi: Oas30PathItem = subPathItem as Oas30PathItem;\n            pi.summary = `Path used to manage a single ${dataTypeName}.`;\n            pi.description = `The REST endpoint/path used to get, update, and delete single instances of an \\`${dataTypeName}\\`.  This path contains \\`GET\\`, \\`PUT\\`, and \\`DELETE\\` operations used to perform the get, update, and delete tasks, respectively.`;\n\n            // GET operation response type\n            let getOp200Response: Oas30Response = subGetOp200Response as Oas30Response;\n            let getOp200ResponseMT: Oas30MediaType = getOp200Response.createMediaType(\"application/json\");\n            getOp200Response.addMediaType(\"application/json\", getOp200ResponseMT);\n            getOp200ResponseMT.schema = getOp200ResponseMT.createSchema();\n            getOp200ResponseMT.schema.$ref = `#/components/schemas/${dataTypeName}`;\n\n            // PUT operation request body\n            let subPutOp30: Oas30Operation = subPutOp as Oas30Operation;\n            subPutOp30.requestBody = subPutOp30.createRequestBody();\n            subPutOp30.requestBody.required = true;\n            subPutOp30.requestBody.description = `Updated \\`${dataTypeName}\\` information.`;\n            let putOpMT: Oas30MediaType = subPutOp30.requestBody.createMediaType(\"application/json\");\n            subPutOp30.requestBody.addMediaType(\"application/json\", putOpMT);\n            putOpMT.schema = putOpMT.createSchema();\n            putOpMT.schema.$ref = `#/components/schemas/${dataTypeName}`;\n\n            // Path parameter type\n            let subPathParam30: Oas30Parameter = subPathParam as Oas30Parameter;\n            subPathParam30.schema = subPathParam30.createSchema();\n            (<Oas30Schema>subPathParam30.schema).type = \"string\";\n        }\n        // OAI 2.0 specific\n        if (document.is2xDocument()) {\n            // GET operation type\n            let getOp200Response: Oas20Response = subGetOp200Response as Oas20Response;\n            getOp200Response.schema = getOp200Response.createSchema();\n            getOp200Response.schema.$ref = `#/definitions/${dataTypeName}`;\n\n            // PUT operation request body\n            let bodyParam: Oas20Parameter = subPutOp.createParameter() as Oas20Parameter;\n            bodyParam.name = \"body\";\n            bodyParam.in = \"body\";\n            bodyParam.description = `Updated \\`${dataTypeName}\\` information.`;\n            bodyParam.required = true;\n            bodyParam.schema = bodyParam.createSchema();\n            bodyParam.schema.$ref = `#/definitions/${dataTypeName}`;\n            subPutOp.addParameter(bodyParam);\n\n            // Path parameter type\n            let subPathParam20: Oas20Parameter = subPathParam as Oas20Parameter;\n            subPathParam20.type = \"string\";\n        }\n\n        // The command to create it\n        let subPathCmd: ICommand = CommandFactory.createAddPathItemCommand(subPath, Library.writeNode(subPathItem));\n        commands.push(subPathCmd);\n\n        return commands;\n    }\n\n    private canPluralize(name: string): boolean {\n        let regexp: RegExp = /^.+[a-zA-Z]$/;\n        return regexp.test(name);\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AaiChannelItem, CommandFactory, ICommand} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\n\n\n@Component({\n    selector: \"channel-info-section\",\n    templateUrl: \"info-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChannelInfoSectionComponent extends AbstractBaseComponent {\n\n    @Input() channel: AaiChannelItem;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public channelInfoPaths(): string[] {\n        let basePath: string = ModelUtils.nodeToPath(this.channel);\n        return [\n            basePath + \"/description\"\n        ];\n    }\n\n    /**\n     * Called when the user changes the description.\n     * @param newDescription\n     */\n    public changeDescription(newDescription: string): void {\n        console.info(\"[ChannelInfoSectionComponent] User changed the data type description.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.channel,\"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"info\" label=\"INFO\"\n         contextHelp=\"In this section you can easily edit the Summary and Description of the Channel Item.\"\n         [collaborationNodePath]=\"channelInfoPaths()\"\n         [validationModels]=\"[channel]\" [validationProperties]=\"['description']\" [validationShallow]=\"true\">\n    <span actions></span>\n    <div body>\n        <!-- Description -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"channel\" property=\"description\" [shallow]=\"true\"></validation-problem>\n            <span>Description</span>\n        </div>\n        <div class=\"section-field description\">\n            <inline-markdown-editor [value]=\"channel.description\"\n                                    [labelClass]=\"'api-path-description api-item-description'\"\n                                    [formClass]=\"'api-path-description-editor-form'\"\n                                    [inputClass]=\"'api-item-editor api-description-editor api-path-description api-item-description'\"\n                                    [baseNode]=\"channel\" nodePath=\"description\"\n                                    [noValueMessage]=\"'No description.'\" (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AaiSchema, Library, Node, OasSchema, ReferenceUtil} from \"@apicurio/data-models\";\nimport {ApiEditorUser} from \"../_models/editor-user.model\";\n\nexport class ModelUtils {\n\n    /**\n     * Converts a node into a nodepath.\n     * @param node\n     */\n    public static nodeToPath(node: Node): string {\n        if (node) {\n            return Library.createNodePath(node).toString();\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Clears any possible selection that may exist on the given node for the local user.\n     * @param node\n     */\n    public static clearSelection(node: Node): void {\n        node.setAttribute(\"local-selection\", false);\n    }\n\n    /**\n     * Sets the local selection on the node.  Essentially this marks the node as \"selected\"\n     * for the local user.\n     * @param node\n     */\n    public static setSelection(node: Node): void {\n        node.setAttribute(\"local-selection\", true);\n    }\n\n    /**\n     * Checks whether the given item is selected by the local user.\n     * @param node\n     * @return\n     */\n    public static isSelected(node: Node): boolean {\n        let rval: boolean = node.getAttribute(\"local-selection\");\n        if (rval === undefined || rval === null) {\n            return false;\n        }\n        return rval;\n    }\n\n    /**\n     * Clears any possible selection that may exist on the given node for the given user.\n     * @param user\n     * @param node\n     */\n    public static clearCollaboratorSelection(user: ApiEditorUser, node: Node): void {\n        let selections: any = node.getAttribute(\"collaborator-selections\");\n        if (selections) {\n            delete selections[user.userId];\n        }\n    }\n\n    /**\n     * Sets the collaborator selection for the given user on the node.  Essentially this marks\n     * the node as \"selected\" by the external (active) collaborator.\n     * @param user\n     * @param node\n     */\n    public static setCollaboratorSelection(user: ApiEditorUser, node: Node): void {\n        let selections: any = node.getAttribute(\"collaborator-selections\");\n        if (!selections) {\n            selections = {};\n            node.setAttribute(\"collaborator-selections\", selections);\n        }\n        selections[user.userId] = user;\n    }\n\n    /**\n     * Checks whether the given item is selected by an external collaborator.  Returns the collaborator\n     * information if the item is selected or else null.\n     * @param node\n     * @return\n     */\n    public static isSelectedByCollaborator(node: Node): ApiEditorUser {\n        let selections: any = node.getAttribute(\"collaborator-selections\");\n        if (selections) {\n            let rval: ApiEditorUser = null;\n            for (let key in selections) {\n                if (selections.hasOwnProperty(key)) {\n                    rval = selections[key];\n                }\n            }\n            return rval;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Generates an example from the given schema.\n     * @param schema\n     */\n    public static generateExampleFromSchema(schema: OasSchema | AaiSchema): any {\n        let generator: ExampleGenerator = new ExampleGenerator();\n        return generator.generate(schema);\n    }\n\n}\n\n\nexport class ExampleGenerator {\n\n    private refStack: any[] = [];\n\n    public generate(schema: OasSchema | AaiSchema): any {\n        console.info(\"[ExampleGenerator] Generating example from schema of type: \", schema.type);\n        let object: any;\n        if (schema.$ref) {\n            object = this.generateFromRef(schema);\n        } else if (this.isEnum(schema)) {\n            console.info(\"[ExampleGenerator] Schema is enum.\");\n            object = this.generateEnumValue(schema);\n        } else if (this.isSimpleType(schema.type)) {\n            console.info(\"[ExampleGenerator] Schema is a simple type.\");\n            object = this.generateSimpleType(schema.type, schema.format);\n        } else if (schema.type === \"object\" || !schema.type) {\n            console.info(\"[ExampleGenerator] Schema is type 'object'\");\n            object = this.generateObject(schema);\n        } else if (schema.type === \"array\") {\n            console.info(\"[ExampleGenerator] Schema is type 'array'\");\n            object = this.generateArray(schema);\n        }\n        return object;\n    }\n\n    private generateFromRef(schema: OasSchema | AaiSchema): any {\n        if (this.refStack.indexOf(schema.$ref) !== -1) {\n            return {};\n        }\n        let refSchema: OasSchema = ReferenceUtil.resolveRef(schema.$ref, schema) as OasSchema;\n        if (refSchema) {\n            console.info(\"[ExampleGenerator] Successfully resolved $ref: \", schema.$ref);\n            this.refStack.push(schema.$ref);\n            let rval: any = this.generate(refSchema);\n            this.refStack.pop();\n            return rval;\n        } else {\n            return {};\n        }\n    }\n\n    private generateObject(schema: OasSchema | AaiSchema): any {\n        let object: any = {};\n        if (schema.properties) {\n            console.info(\"[ExampleGenerator] Schema has properties.\");\n            Object.keys(schema.properties).forEach( propertyName => {\n                console.info(\"[ExampleGenerator] Processing schema property named: \", propertyName);\n                let propertyExample: any = this.generate(schema.properties[propertyName] as OasSchema);\n                object[propertyName] = propertyExample;\n            });\n        }\n        return object;\n    }\n\n    private generateArray(schema: OasSchema | AaiSchema): any {\n        let object: any[] = [];\n        if (schema.items) {\n            // Push two objects into the array...\n            object.push(this.generate(schema.items as OasSchema));\n            object.push(this.generate(schema.items as OasSchema));\n        }\n        return object;\n    }\n\n    private isSimpleType(type: string): boolean {\n        const simpleTypes: string[] = [\n            \"string\", \"boolean\", \"integer\", \"number\"\n        ]\n        return simpleTypes.indexOf(type) !== -1;\n    }\n\n    private isEnum(schema: OasSchema | AaiSchema ): boolean {\n        return schema.enum_ && schema.enum_.length > 0;\n    }\n\n    private generateEnumValue(schema: OasSchema | AaiSchema): any {\n        if (schema.enum_.length > 0) {\n            return schema.enum_[Math.floor(Math.random()*schema.enum_.length)];\n        }\n        return \"??\";\n    }\n\n    private generateSimpleType(type: string, format: string): any {\n        let key: string = type;\n        if (format) {\n            key = type + \"_\" + format;\n        }\n        switch (key) {\n            case \"string\":\n                return \"some text\";\n            case \"string_date\":\n                return \"2018-01-17\";\n            case \"string_date-time\":\n                return \"2018-02-10T09:30Z\";\n            case \"string_password\":\n                return \"**********\";\n            case \"string_byte\":\n                return \"R28gUGF0cyE=\";\n            case \"string_binary\":\n                return \"<FILE>\";\n            case \"integer\":\n            case \"integer_int32\":\n            case \"integer_int64\":\n                return Math.floor(Math.random() * Math.floor(100));\n            case \"number\":\n            case \"number_float\":\n            case \"number_double\":\n                return Math.floor((Math.random() * 100) * 100) / 100;\n            case \"boolean\":\n                return true;\n            default:\n                return \"\";\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {\n    CommandFactory,\n    DocumentType,\n    ICommand, Oas20Document,\n    Oas20SchemaDefinition, Oas30Document,\n    Oas30SchemaDefinition\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\n\n\n@Component({\n    selector: \"definition-info-section\",\n    templateUrl: \"info-section.component.html\",\n    styleUrls: [ \"info-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefinitionInfoSectionComponent extends AbstractBaseComponent {\n\n    @Input() definition: Oas20SchemaDefinition | Oas30SchemaDefinition;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public definitionInfoPaths(): string[] {\n        return [\n            ModelUtils.nodeToPath(this.definition) + \"/description\"\n        ];\n    }\n\n\n    /**\n     * returns the description.\n     */\n    public description(): string {\n        return this.definition.description;\n    }\n\n    /**\n     * Called when the user changes the description.\n     * @param newDescription\n     */\n    public onDescriptionChange(newDescription: string): void {\n        console.info(\"[DefinitionInfoSectionComponent] User changed the data type description.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.definition, \"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n    isObject(): boolean {\n        return this.definition.type === \"object\" || this.definition === null || this.definition === undefined;\n    }\n\n    switchToSimpleType(): void {\n        let newDefinition: Oas20SchemaDefinition | Oas30SchemaDefinition = this.createSchemaDefinition(this.definition.description);\n        newDefinition.type = \"string\";\n        let command: ICommand = CommandFactory.createReplaceSchemaDefinitionCommand(\n            this.definition.ownerDocument().getDocumentType(), this.definition, newDefinition);\n        this.commandService.emit(command);\n    }\n\n    switchToObject(): void {\n        let newDefinition: Oas20SchemaDefinition | Oas30SchemaDefinition = this.createSchemaDefinition(this.definition.description);\n        newDefinition.type = \"object\";\n        let command: ICommand = CommandFactory.createReplaceSchemaDefinitionCommand(\n            this.definition.ownerDocument().getDocumentType(), this.definition, newDefinition);\n        this.commandService.emit(command);\n    }\n\n    createSchemaDefinition(description: string): Oas30SchemaDefinition | Oas20SchemaDefinition {\n        let newDefinition: Oas20SchemaDefinition | Oas30SchemaDefinition;\n        if (this.definition.ownerDocument().getDocumentType() == DocumentType.openapi2) {\n            let doc20: Oas20Document = <Oas20Document> this.definition.ownerDocument();\n            newDefinition = doc20.definitions.createSchemaDefinition(this.definition.getName());\n        } else {\n            let doc30: Oas30Document = <Oas30Document> this.definition.ownerDocument();\n            newDefinition = doc30.components.createSchemaDefinition(this.definition.getName());\n        }\n        newDefinition.description = description;\n        return newDefinition;\n    }\n\n}\n","<section type=\"info\" label=\"INFO\"\n         contextHelp=\"This section allows you to modify the Description of the Data Type.\"\n         [collaborationNodePath]=\"definitionInfoPaths()\"\n         [validationModels]=\"[definition]\" [validationProperties]=\"['description']\" [validationShallow]=\"true\">\n    <span actions></span>\n    <div body>\n        <!-- Description -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"definition\" property=\"description\" [shallow]=\"true\"></validation-problem>\n            <span>Description</span>\n        </div>\n        <div class=\"section-field description\">\n            <inline-markdown-editor [value]=\"description()\"\n                                    [labelClass]=\"'api-definition-description api-item-description'\"\n                                    [formClass]=\"'api-definition-description-editor-form'\"\n                                    [inputClass]=\"'api-item-editor api-description-editor api-definition-description api-item-description'\"\n                                    [baseNode]=\"definition\" nodePath=\"description\"\n                                    [noValueMessage]=\"'No description.'\" (onChange)=\"onDescriptionChange($event)\"></inline-markdown-editor>\n        </div>\n\n        <!-- Type -->\n        <div class=\"section-field type\" *ngIf=\"isObject()\">\n            <div>This data type is currently a complex object.</div>\n            <a (click)=\"switchToSimpleType()\">Switch to simple type</a>\n        </div>\n        <div class=\"section-field type\" *ngIf=\"!isObject()\">\n            <div>This data type is currently a simple type.</div>\n            <a (click)=\"switchToObject()\">Switch to complex (object) type</a>\n        </div>\n\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Injectable} from \"@angular/core\";\nimport {ApiEditorComponentFeatures} from \"../_models/features.model\";\n\n/**\n * A service providing document related functionality, including the ability to\n * easily access the current document being edited and document related notifications\n * such as when it is changed.\n */\n@Injectable()\nexport class FeaturesService {\n\n    private features: ApiEditorComponentFeatures;\n\n    constructor() {\n        this.features = new ApiEditorComponentFeatures();\n    }\n\n    public setFeatures(features: ApiEditorComponentFeatures): void {\n        this.features = features;\n    }\n\n    public getFeatures(): ApiEditorComponentFeatures {\n        return this.features;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ViewChildren, QueryList} from \"@angular/core\";\nimport {Aai20Server, AaiSecurityRequirement, AaiServerBindings} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {NgModel} from \"@angular/forms\";\n\nexport interface ServerVariableData {\n    default: string;\n    description: string;\n    enum: string[];\n}\n\nexport interface AaiServerData {\n    url: string;\n    description: string;\n    variables: any; // map of string to ServerVariableData\n    name: string;\n    protocol: string;\n    protocolVersion: string;\n    security: AaiSecurityRequirement[];\n    bindings: AaiServerBindings;\n}\n\nexport interface AaiServerEditorEvent extends EntityEditorEvent<Aai20Server> {\n    data: AaiServerData;\n}\n\nexport interface IAaiServerEditorHandler extends IEntityEditorHandler<Aai20Server, AaiServerEditorEvent> {\n    onSave(event: AaiServerEditorEvent): void;\n    onCancel(event: AaiServerEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"aaiserver-editor\",\n    templateUrl: \"aaiserver-editor.component.html\",\n    styleUrls: [\"server-editor.component.css\", \"aaiserver-editor.component.css\"]\n})\nexport class AaiServerEditorComponent extends EntityEditor<Aai20Server, AaiServerEditorEvent> {\n\n    @ViewChildren(\"urlInput\") urlInput: QueryList<NgModel>;\n\n    public model: AaiServerData = {\n        url: \"\",\n        description: \"\",\n        variables: {},\n        name: \"\",\n        protocol: \"\",\n        protocolVersion: \"\",\n        security: [],\n        bindings: null\n    };\n    public url: string;\n    _varSelected: string = null;\n\n    serverExists: boolean;\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: Aai20Server): void {\n        this.model.url = entity.url;\n        this.model.name = entity.getName();\n        this.model.protocol = entity.protocol;\n        this.model.protocolVersion = entity.protocolVersion;\n        this.model.description = entity.description;\n        this.model.variables = {};\n        entity.getServerVariables().forEach( variable => {\n            this.model.variables[variable.getName()] = {\n                \"default\": variable.default_,\n                \"description\": variable.description,\n                \"enum\": variable.enum_\n            };\n        });\n        this.model.security = entity.security;\n        this.model.bindings = entity.bindings;\n        this.url = this.model.url;\n        this.updateVariables();\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            url: \"\",\n            description: \"\",\n            variables: {},\n            name: \"\",\n            protocol: \"\",\n            protocolVersion: \"\",\n            security: [],\n            bindings: null\n        };\n        this.url = \"\";\n        this.serverExists = false;\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        let hasUrl: boolean = !!this.model.url;\n        let hasName: boolean = !!this.model.name;\n        let hasProtocol: boolean = !!this.model.protocol;\n        return hasUrl && hasName && hasProtocol && !this.canApply();\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): AaiServerEditorEvent {\n        let event: AaiServerEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    /**\n     * Called when the URL changes.  The URL will be parsed to find any variable substitutions\n     * present in the URL spec.  The map of variables is then updated to reflect whatever is found.\n     */\n    public updateVariables(): void {\n        console.info(\"[AaiServerEditorComponent] Updating variables for URL: %s\", this.model.url);\n\n        let url = this.model.url;\n        if (!url) {\n            this.model.variables = {};\n        }\n\n        console.info(\"                           Executing regex against: %s\", url);\n        let regex:RegExp = /{([^}]+)}/gi;\n        let result: RegExpExecArray;\n        let varNames: string[] = [];\n        while ( (result = regex.exec(url)) ) {\n            varNames.push(result[1]);\n        }\n        console.info(\"                           Variable names found: %o\", varNames);\n\n        let newVariables: any = {};\n\n        varNames.forEach( varName => {\n            if (this.model.variables[varName]) {\n                newVariables[varName] = this.model.variables[varName];\n            } else {\n                newVariables[varName] = {};\n            }\n        });\n\n        this.model.variables = newVariables;\n\n        this._varSelected = null;\n        if (varNames.length > 0) {\n            this._varSelected = varNames[0];\n        }\n    }\n\n    /**\n     * Returns true if there are any variables to be configured.\n     * @return\n     */\n    public hasVariables(): boolean {\n        let rval: boolean = false;\n        if (this.model.variables) {\n            for (let v in this.model.variables) {\n                rval = true;\n            }\n        }\n        return rval;\n    }\n\n    /**\n     * Returns the names of the variables.\n     * @return\n     */\n    public variableNames(): string[] {\n        let rval: string[] = [];\n        if (this.model.variables) {\n            for (let v in this.model.variables) {\n                rval.push(v);\n            }\n        }\n        return rval;\n    }\n\n    public securityRequirementSummary(): string {\n        if (!this.model.security) {\n            return \"No requirements defined.\";\n        }\n        return this.model.security\n            .map(requirement => {\n                let names = requirement.getSecurityRequirementNames();\n                return names.length > 0 ? `(${names.join(\", \")})` : \"Anonymous\";\n            })\n            .join(\", \");\n    }\n\n    /**\n     * @param event\n     */\n    public onServerUrlKeypress(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            this.apply();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * Returns true if there are URL changes.\n     */\n    public canApply(): boolean {\n        return this.model.url !== this.url;\n    }\n\n    /**\n     * Called when the user clicks the \"apply\" button.\n     */\n    public apply(): void {\n        this.model.url = this.url;\n        this.updateVariables();\n    }\n\n    /**\n     * Called when the user clicks the \"reset\" button.\n     */\n    public reset(): void {\n        this.url = this.model.url;\n    }\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"server\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define the Server\" [valid]=\"isValid()\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Server Info</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter the name, URL template, protocol, protocol version, security requirements, server bindings, and description of the server.\n                    <br />\n                    Include server variables in the URL template using the following syntax:\n                </span>\n                <br />\n                <code>\n                    http://<span class=\"server-variable\">&#123;domain&#125;</span>.example.com:<span class=\"server-variable\">&#123;port&#125;</span>/api\n                </code>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"serverName\">Name</label>\n                <div *ngIf=\"_mode === 'create'\">\n                    <input #nameInput=\"ngModel\" name=\"name\" type=\"text\" id=\"serverName\" class=\"form-control\"\n                           placeholder=\"Enter Server Name (must be unique)\"\n                           required [(ngModel)]=\"model.name\" pattern=\"[a-zA-Z0-9\\-_]+\">\n                    <div class=\"form-error-message error\" *ngIf=\"serverExists\">Server already exists.</div>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'required'\">Server name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                </div>\n                <div *ngIf=\"_mode === 'edit'\">\n                    <input title=\"To change a server name, choose the 'Rename' option from the previous screen.\"\n                           name=\"serverName\" type=\"text\" class=\"form-control readonly\" required [(ngModel)]=\"model.name\" readonly>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"serverUrl\">Server URL</label>\n                <div *ngIf=\"_mode === 'create'\">\n                    <table class=\"server-url-wrapper\">\n                        <tr>\n                            <td width=\"100%\">\n                                <input #urlInput=\"ngModel\" name=\"server\" type=\"text\" id=\"serverUrl\" class=\"form-control\"\n                                       placeholder=\"Enter Server URL\" (keypress)=\"onServerUrlKeypress($event)\"\n                                       required [(ngModel)]=\"url\">\n                            </td>\n                            <td>\n                                <button class=\"btn btn-primary url-action\" (click)=\"apply()\" [disabled]=\"!canApply()\">Apply</button>\n                            </td>\n                            <td>\n                                <button class=\"btn btn-default url-action\" (click)=\"reset()\" [disabled]=\"!canApply()\">Reset</button>\n                            </td>\n                        </tr>\n                    </table>\n                    <form-error-message [inputModel]=\"urlInput\" [type]=\"'required'\">Server URL is required.</form-error-message>\n                    <div *ngIf=\"canApply()\" class=\"form-error-message error\">URL has been changed.  Press enter or click \"Apply\" to accept.</div>\n                </div>\n                <div *ngIf=\"_mode === 'edit'\">\n                    <input name=\"server\" type=\"text\" id=\"server_ro\" class=\"form-control\" required\n                           [(ngModel)]=\"model.url\" readonly>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"protocol\">Protocol</label>\n                <div>\n                    <input name=\"protocol\" id=\"protocol\" class=\"form-control required\" required #protocolInput\n                           placeholder=\"Server protocol (amqp, http, jms, kafka, mqtt, stomp, ws, ...)\" [(ngModel)]=\"model.protocol\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"protocolVersion\">Protocol Version</label>\n                <div>\n                    <input name=\"protocolVersion\" id=\"protocolVersion\" class=\"form-control\" #protocolVersionInput\n                           placeholder=\"Server protocol version\" [(ngModel)]=\"model.protocolVersion\">\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\">Security Requirements</label>\n                <div>\n                    <input class=\"form-control readonly\" [ngModel]=\"securityRequirementSummary()\" readonly>\n                </div>\n            </div>\n            <!-- TODO Server Bindings -->\n            <div class=\"form-group\">\n                <label class=\"control-label\">Server Bindings</label>\n                <div>\n                    <input placeholder=\"TODO\" class=\"form-control readonly\" [(ngModel)]=\"model.bindings\" readonly>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                        <textarea name=\"description\" id=\"description\" class=\"form-control\" autosize #descriptionInput\n                                  placeholder=\"Server description\" [(ngModel)]=\"model.description\"></textarea>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row-fluid divider-section\">\n        <div class=\"col-md-12\">\n            <hr />\n        </div>\n    </div>\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>2. Configure Server Variables</h3>\n            <p class=\"explanation\">\n                    <span>\n                        Configure the server variables found in the server URL template.\n                    </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <p class=\"empty-state\" *ngIf=\"!hasVariables()\">\n                This server URL does not contain variables.  Server variables are defined in the server URL template.\n            </p>\n\n            <div class=\"server-variables\" *ngIf=\"hasVariables()\">\n                <ul class=\"nav nav-tabs\">\n                    <li *ngFor=\"let varName of variableNames()\" [class.active]=\"varName == _varSelected\"><a (click)=\"_varSelected = varName\">{{ varName }}</a></li>\n                </ul>\n                <div class=\"panel panel-default tab-panel\">\n                    <div *ngFor=\"let varName of variableNames()\" class=\"panel-body\" [class.hidden]=\"varName != _varSelected\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\">Default Value</label>\n                            <div class=\"\">\n                                <input name=\"defval_{{ varName }}\" type=\"text\" class=\"form-control short\"\n                                       (keypress)=\"onKeypress($event)\"\n                                       placeholder=\"Default value\" [(ngModel)]=\"model.variables[varName].default\">\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"control-label\">Description</label>\n                            <div class=\"\">\n                                    <textarea name=\"description_{{ varName }}\" class=\"form-control\" autosize\n                                              placeholder=\"Variable description\" [(ngModel)]=\"model.variables[varName].description\"></textarea>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ViewChild} from \"@angular/core\";\nimport {LoggerService} from \"./services/logger.service\";\nimport {ConfigService} from \"./services/config.service\";\nimport {EditingInfo} from \"./models/editingInfo.model\";\nimport {EditorComponent} from \"./components/editors/editor.component\";\nimport {ApiDefinition} from \"./editor/_models/api.model\";\n\n@Component({\n    selector: \"app-root\",\n    templateUrl: \"./app.component.html\",\n    styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n    title = \"studio-editor\";\n    api: ApiDefinition;\n\n    isShowLoading: boolean = true;\n    isShowEditor: boolean = false;\n    isShowError: boolean = false;\n\n    config: EditingInfo;\n\n    @ViewChild(\"openapiEditor\") openapiEditor: EditorComponent | undefined;\n    @ViewChild(\"asyncapiEditor\") asyncapiEditor: EditorComponent | undefined;\n\n    constructor(private logger: LoggerService, private configService: ConfigService) {\n        configService.get().then(cfg => {\n            this.config = cfg;\n            this.initContent();\n        }).catch(error => {\n            this.logger.error(\"Failed to get editor configuration: %o\", error);\n        });\n    }\n\n    private initContent(): void {\n        try {\n            const content: any = JSON.parse(this.config.content.value);\n            this.logger.info(\"[AppComponent] JSON content successfully parsed.\");\n\n            this.api = new ApiDefinition();\n            this.api.createdBy = \"user\";\n            this.api.createdOn = new Date();\n            this.api.tags = [];\n            this.api.description = \"\";\n            this.api.id = \"api-1\";\n            this.api.spec = content;\n            this.api.type = \"OpenAPI30\";\n            if (content && content.swagger && content.swagger === \"2.0\") {\n                this.api.type = \"OpenAPI20\";\n            }\n\n            this.isShowLoading = false;\n            this.isShowEditor = true;\n        } catch (error) {\n            this.logger.error(\"Error loading HTTP content: %o\", error);\n        }\n    }\n\n    private editor(): EditorComponent {\n        return this.config.content.type === \"OPENAPI\" ? this.openapiEditor : this.asyncapiEditor;\n    }\n\n}\n","<div *ngIf=\"isShowLoading\" class=\"editor-loading\">\n    <div>\n        <div class=\"spinner spinner-lg\"></div>\n        <span class=\"loading-label\">Loading</span>\n    </div>\n</div>\n<div *ngIf=\"isShowEditor\" class=\"studio-editor\">\n    <div class=\"content-editor\">\n        <openapi-editor #openapiEditor *ngIf=\"config.content.type === 'OPENAPI'\" [api]=\"api\"></openapi-editor>\n        <asyncapi-editor #asyncapiEditor *ngIf=\"config.content.type === 'ASYNCAPI'\" [api]=\"api\"></asyncapi-editor>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    Oas30Example,\n    Oas30MediaType,\n    Oas30RequestBody,\n    Oas30Response,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {CommandService} from \"../../../../_services/command.service\";\n\nexport interface MediaTypeChangeEvent {\n    name: string;\n    type: SimplifiedType;\n}\n\nexport interface AddExampleEvent {\n    mediaType: Oas30MediaType;\n    name: string;\n    value: any;\n}\n\nexport interface DeleteExampleEvent {\n    example: Oas30Example;\n}\n\nexport interface ExamplePropertyChangeEvent {\n    example: Oas30Example;\n    value: string;\n}\n\n\n@Component({\n    selector: \"content\",\n    templateUrl: \"content.component.html\",\n    styleUrls: [ \"content.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent extends AbstractBaseComponent {\n\n    @Input() parent: Oas30Response | Oas30RequestBody;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService, private commandService: CommandService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public hasMediaTypes(): boolean {\n        return this.parent.getMediaTypes().length > 0;\n    }\n\n    public mediaTypeNames(): string[] {\n        if (this.parent.content) {\n            return Object.keys(this.parent.content);\n        }\n        return [];\n    }\n\n    public mediaTypeByName(name: string): Oas30MediaType {\n        return this.parent.getMediaType(name);\n    }\n\n    public addMediaType(mediaType: string): void {\n        let command: ICommand = CommandFactory.createNewMediaTypeCommand(this.parent, mediaType);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.parent);\n        nodePath.appendSegment(\"content\", false);\n        nodePath.appendSegment(mediaType, true);\n        this.selectionService.select(nodePath.toString());\n    }\n\n}\n","<div class=\"content\" *ngIf=\"hasMediaTypes()\">\n    <div class=\"container-fluid media-types typed-item-list\">\n        <media-type-row *ngFor=\"let mtName of mediaTypeNames()\" [item]=\"mediaTypeByName(mtName)\"></media-type-row>\n    </div>\n    <div class=\"actions\">\n        <a (click)=\"addMediaTypeDialog.open(mediaTypeNames())\">Add a media type</a>\n    </div>\n</div>\n\n<div class=\"content\" *ngIf=\"!hasMediaTypes()\">\n    <signpost>\n        <span>No media types have been defined.</span>\n        <a (click)=\"addMediaTypeDialog.open(mediaTypeNames())\">Add a media type</a>\n    </signpost>\n</div>\n\n<add-media-type-dialog #addMediaTypeDialog (onAdd)=\"addMediaType($event)\"></add-media-type-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand, IPropertyParent,\n    Library, Oas20Schema,\n    Oas20SchemaDefinition, Oas30Schema,\n    Oas30SchemaDefinition,\n    OasSchema,\n    Schema\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {IPropertyEditorHandler, PropertyData, PropertyEditorComponent} from \"../../editors/property-editor.component\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\nimport Oas20PropertySchema = Oas20Schema.Oas20PropertySchema;\nimport Oas30PropertySchema = Oas30Schema.Oas30PropertySchema;\n\n\n@Component({\n    selector: \"properties-section\",\n    templateUrl: \"properties-section.component.html\",\n    styleUrls: [ \"properties-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PropertiesSectionComponent extends AbstractBaseComponent {\n\n    @Input() definition: Oas20SchemaDefinition | Oas30SchemaDefinition;\n\n    @ViewChild(\"renamePropertyDialog\", { static: true }) renamePropertyDialog: RenameEntityDialogComponent;\n\n    _pconfigOpen: boolean = false;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     * @param editors\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService,\n                private editors: EditorsService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public openAddSchemaPropertyEditor(): void {\n        let editor: PropertyEditorComponent = this.editors.getPropertyEditor();\n        let handler: IPropertyEditorHandler = {\n            onSave: (event) => {\n                this.addSchemaProperty(event.data);\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.definition);\n    }\n\n    public togglePropertiesConfig(): void {\n        this._pconfigOpen = !this._pconfigOpen;\n    }\n\n    public hasProperties(): boolean {\n        return this.properties().length > 0;\n    }\n\n    public properties(): Schema[] {\n        let rval: Schema[] = [];\n\n        let sourceSchema: OasSchema = this.getPropertySourceSchema();\n        sourceSchema.getPropertyNames().sort((left, right) => {\n            return left.localeCompare(right);\n        }).forEach(name => rval.push(sourceSchema.getProperty(name)));\n\n        return rval;\n    }\n\n    public getPropertySourceSchema(): OasSchema {\n        let pschema: OasSchema = this.definition;\n\n        if (this.inheritanceType() != \"none\") {\n            let schemas: OasSchema[] = this.definition[this.inheritanceType()];\n            if (schemas) {\n                schemas.forEach(schema => {\n                    if (schema.properties) {\n                        pschema = schema;\n                    }\n                });\n            }\n        }\n\n        return pschema;\n    }\n\n    public propertiesNodePath(): string {\n        return ModelUtils.nodeToPath(this.getPropertySourceSchema()) + \"/properties\";\n    }\n\n    public deleteProperty(property: Schema): void {\n        let command: ICommand = CommandFactory.createDeletePropertyCommand(property as any);\n        this.commandService.emit(command);\n    }\n\n    public addSchemaProperty(data: PropertyData): void {\n        let pschema: OasSchema = this.getPropertySourceSchema();\n\n        let command: ICommand = CommandFactory.createNewSchemaPropertyCommand(pschema,\n            data.name, data.description, data.type);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(pschema);\n        path.appendSegment(\"properties\", false);\n        path.appendSegment(data.name, true);\n        this.__selectionService.select(path.toString());\n    }\n\n    public deleteAllSchemaProperties(): void {\n        let command: ICommand = CommandFactory.createDeleteAllPropertiesCommand(this.getPropertySourceSchema());\n        this.commandService.emit(command);\n    }\n\n    public minProperties(): string {\n        return this.definition.minProperties ? this.definition.minProperties.toString() : null;\n    }\n\n    public maxProperties(): string {\n        return this.definition.maxProperties ? this.definition.maxProperties.toString() : null;\n    }\n\n    public setMinProps(value: string): void {\n        this.setMinProperties(Number(value));\n    }\n\n    public setMaxProps(value: string): void {\n        this.setMaxProperties(Number(value));\n    }\n\n    public setMinProperties(minProp: number): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<number>(this.getPropertySourceSchema(), \"minProperties\", minProp);\n        this.commandService.emit(command);\n    }\n\n    public setMaxProperties(maxProp: number): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<number>(this.getPropertySourceSchema(), \"maxProperties\", maxProp);\n        this.commandService.emit(command);\n    }\n\n    public additionalProperties(): boolean {\n        if (typeof this.definition.additionalProperties === \"boolean\") {\n            return (this.definition.additionalProperties as boolean);\n        } else {\n            return true;\n        }\n    }\n\n    public setAdditionalProperties(value: boolean): void {\n        let newVal: any = value ? null : false;\n        let command: ICommand = CommandFactory.createChangePropertyCommand<number>(this.getPropertySourceSchema(), \"additionalProperties\", newVal);\n        this.commandService.emit(command);\n    }\n\n    public inheritanceType(): string {\n        if (this.definition.allOf) {\n            return \"allOf\";\n        }\n        if (this.definition['anyOf']) {\n            return \"anyOf\";\n        }\n        if (this.definition['oneOf']) {\n            return \"oneOf\";\n        }\n\n        return \"none\";\n    }\n\n    /**\n     * Opens the rename property dialog.\n     * @param property\n     */\n    public openRenamePropertyDialog(property: Schema): void {\n        let parent: IPropertyParent = <any>property.parent();\n        let propertyNames: string[] = parent.getProperties().map( prop => { return (<Oas20PropertySchema>prop).getPropertyName(); });\n        this.renamePropertyDialog.open(property, (<Oas20PropertySchema>property).getPropertyName(), newName => {\n            return propertyNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the property.\n     * @param event\n     */\n    public renameProperty(event: RenameEntityEvent): void {\n        let property: Oas20PropertySchema | Oas30PropertySchema = <any>event.entity;\n        let propertyName: string = property.getPropertyName();\n        let parent: OasSchema = <any>property.parent();\n        let command: ICommand = CommandFactory.createRenamePropertyCommand(parent, propertyName, event.newName);\n        this.commandService.emit(command);\n    }\n}\n","<section type=\"properties\" label=\"PROPERTIES\"\n         contextHelp=\"Use this section to define the properties that make up this data type.\"\n         [counterItems]=\"properties()\"\n         [collaborationNodePath]=\"propertiesNodePath()\"\n         [validationModels]=\"properties()\">\n                    <span actions>\n                        <icon-button (onClick)=\"togglePropertiesConfig()\" [pullRight]=\"true\" type=\"config\"\n                                     [title]=\"'Configure advanced properties options (e.g. min/maxProperties).'\"></icon-button>\n                        <icon-button (onClick)=\"openAddSchemaPropertyEditor()\" [pullRight]=\"true\" type=\"add\"\n                                     [title]=\"'Add a property to the schema.'\"></icon-button>\n                        <icon-button (onClick)=\"deleteAllSchemaProperties()\" [disabled]=\"!hasProperties()\" [pullRight]=\"true\" type=\"delete\"\n                                     [title]=\"'Delete all properties from the schema.'\"></icon-button>\n                    </span>\n    <div body>\n        <!-- Warning when no properties exist -->\n        <signpost *ngIf=\"!hasProperties()\">\n            <span>No schema properties have been defined.</span>\n            <a (click)=\"openAddSchemaPropertyEditor()\">Add a property</a>\n        </signpost>\n\n        <!-- Configuration of min/max/additional properties -->\n        <div *ngIf=\"_pconfigOpen\" class=\"properties-config\">\n            <div class=\"property-min-properties\">\n                <div class=\"property-label\">\n                    <label for=\"min-properties\">Minimum Properties</label>\n                </div>\n                <div class=\"property-value\">\n                    <pf-inline-text-editor [value]=\"minProperties()\" noValueMessage=\"No minItems.\"\n                                           [baseNode]=\"definition\" nodePath=\"minProperties\" id=\"min-properties\"\n                                           (onChange)=\"setMinProps($event)\"></pf-inline-text-editor>\n                </div>\n            </div>\n\n            <div class=\"property-max-properties\">\n                <div class=\"property-label\">\n                    <label for=\"max-properties\">Maximum Properties</label>\n                </div>\n                <div class=\"property-value\">\n                    <pf-inline-text-editor [value]=\"maxProperties()\" noValueMessage=\"No maxItems.\"\n                                           [baseNode]=\"definition\" nodePath=\"maxProperties\" id=\"max-properties\"\n                                           (onChange)=\"setMaxProps($event)\"></pf-inline-text-editor>\n                </div>\n            </div>\n\n            <div class=\"property-unique-items\">\n                <checkbox-input [defaultValue]=\"!additionalProperties()\" name=\"additional-properties\" label=\"Allow only defined properties\"\n                                id=\"unique-items\" [baseNode]=\"definition\" nodePath=\"additionalProperties\"\n                                (onChange)=\"setAdditionalProperties(!$event)\"></checkbox-input>\n            </div>\n        </div>\n\n        <!-- The list of schema properties -->\n        <div class=\"container-fluid path-parameters typed-item-list\">\n            <property-row *ngFor=\"let property of properties()\" [item]=\"property\"\n                          (onDelete)=\"deleteProperty(property)\"\n                          (onRename)=\"openRenamePropertyDialog(property)\"></property-row>\n        </div>\n    </div>\n</section>\n<rename-entity-dialog #renamePropertyDialog\n                      type=\"Property\"\n                      title=\"Rename Property\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters are allowed - no whitespace).\"\n                      (onRename)=\"renameProperty($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    IOasParameterParent,\n    Library,\n    Oas20Operation,\n    Oas20PathItem,\n    Oas30Operation,\n    Oas30PathItem,\n    OasOperation,\n    OasParameter,\n    OasPathItem\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {\n    IParameterEditorHandler,\n    ParameterData,\n    ParameterEditorComponent\n} from \"../../editors/parameter-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\n\n\n// TODO combine with Query Params Section (and Header Params Section) to share code/logic\n@Component({\n    selector: \"cookie-params-section\",\n    templateUrl: \"cookie-params-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CookieParamsSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: Oas20Operation | Oas30Operation | Oas20PathItem | Oas30PathItem;\n    @Input() path: OasPathItem;\n\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    private _cookieParameters: OasParameter[] = null;\n\n    public showSectionBody: boolean;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param commandService\n     * @param documentService\n     * @param editors\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private commandService: CommandService,\n                private documentService: DocumentService, private editors: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        this._cookieParameters = null;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showSectionBody = this.hasCookieParameters();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this._cookieParameters = null;\n    }\n\n    public isPathItem(): boolean {\n        return this.parent === this.path;\n    }\n\n    public contextHelp(): string {\n        if (this.isPathItem()) {\n            return `\n                Use this section to define HTTP Cookie Parameters for all of the Operations in this\n                path.  These cookie parameters will apply to all operations and can be overridden\n                (though not removed) at the operation level.`;\n        } else {\n            return `\n                An operation may, optionally, allow additional options to be sent via URL cookie\n                parameters.  This section allows you to document what cookie parameters are\n                accepted/expected by this operation.`;\n        }\n    }\n\n    public hasParameters(type: string): boolean {\n        if (!this.parent.parameters) {\n            return false;\n        }\n        return this.parent.parameters.filter((value) => {\n            return value.in === type;\n        }).length > 0;\n    }\n\n    public hasCookieParameters(): boolean {\n        return this.parent.getParametersIn(\"cookie\").length > 0 || this.path.getParametersIn(\"cookie\").length > 0;\n    }\n\n    public parameters(paramType: string): OasParameter[] {\n        let params: OasParameter[] = this.parent.getParametersIn(paramType);\n        return params.sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n    }\n\n    public cookieParameters(): OasParameter[] {\n        if (this.isPathItem()) {\n            return this.parameters(\"cookie\");\n        }\n\n        if (this._cookieParameters !== null) {\n            return this._cookieParameters;\n        }\n\n        let opParams: OasParameter[] = this.parameters(\"cookie\");\n        let piParams: OasParameter[] = this.path.getParametersIn(\"cookie\");\n        let hasOpParam = function(param: OasParameter): boolean {\n            var found: boolean = false;\n            opParams.forEach( opParam => {\n                if (opParam.name === param.name) {\n                    found = true;\n                }\n            });\n            return found;\n        };\n        piParams.forEach( param => {\n            if (!hasOpParam(param)) {\n                let missingParam: OasParameter = this.parent.createParameter();\n                Library.readNode(Library.writeNode(param), missingParam);\n                missingParam.setAttribute(\"missing\", true);\n                opParams.push(missingParam);\n            }\n        });\n        this._cookieParameters = opParams.sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n        return this._cookieParameters;\n    }\n\n    public cookieParameterPaths(): string[] {\n        return this.parent.getParametersIn(\"cookie\").map( param => {\n            return ModelUtils.nodeToPath(param);\n        });\n    }\n\n    public openAddCookieParamEditor(): void {\n        let editor: ParameterEditorComponent = this.editors.getParameterEditor();\n        editor.setParamType(\"cookie\");\n        let handler: IParameterEditorHandler = {\n            onSave: (event) => {\n                this.addCookieParam(event.data);\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.parent);\n    }\n\n    public deleteAllCookieParams(): void {\n        let command: ICommand = CommandFactory.createDeleteAllParametersCommand(this.parent, \"cookie\");\n        this.commandService.emit(command);\n    }\n\n    public deleteParam(parameter: OasParameter): void {\n        let command: ICommand = CommandFactory.createDeleteParameterCommand(parameter);\n        this.commandService.emit(command);\n    }\n\n    public addCookieParam(data: ParameterData): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.parent, data.name,\n            \"cookie\", data.description, data.type, false);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the rename parameter dialog.\n     * @param parameter\n     */\n    public openRenameDialog(parameter: OasParameter): void {\n        let parent: IOasParameterParent = <any>parameter.parent();\n        let paramNames: string[] = parent.getParametersIn(\"cookie\").map( param => { return param.name; });\n        this.renameDialog.open(parameter, parameter.name, newName => {\n            return paramNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the parameter.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        let parameter: OasParameter = <any>event.entity;\n        let parent: OasPathItem | OasOperation = <any>parameter.parent();\n        let command: ICommand = CommandFactory.createRenameParameterCommand(parent, parameter.name, event.newName, \"cookie\");\n        this.commandService.emit(command);\n    }\n\n}\n","<!-- Cookie Parameters Section -->\n<section type=\"cookie-parameters\" label=\"COOKIE PARAMETERS\"\n         [counterItems]=\"cookieParameters()\"\n         [contextHelp]=\"contextHelp()\" [expanded]=\"showSectionBody\"\n         [collaborationNodePath]=\"cookieParameterPaths()\"\n         [validationModels]=\"cookieParameters()\">\n    <span actions>\n        <icon-button (onClick)=\"openAddCookieParamEditor()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a new cookie parameter.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllCookieParams()\" [disabled]=\"!hasCookieParameters()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete all cookie parameters.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasCookieParameters()\">\n            <span>No cookie parameters have been defined.</span>\n            <a (click)=\"openAddCookieParamEditor()\">Add a cookie parameter</a>\n        </signpost>\n\n        <!-- The list of cookie parameters -->\n        <div class=\"container-fluid cookie-parameters typed-item-list\" *ngIf=\"hasCookieParameters()\">\n            <cookie-param-row *ngFor=\"let param of cookieParameters()\" [item]=\"param\"\n                             (onRename)=\"openRenameDialog(param)\"\n                             (onDelete)=\"deleteParam(param)\"></cookie-param-row>\n        </div>\n    </div>\n</section>\n<rename-entity-dialog #renameDialog\n                      type=\"Cookie Parameter\"\n                      title=\"Rename Cookie Parameter\"\n                      warning=\"Renaming a Cookie Parameter may also update any cookie parameters with the same name depending on path and operation hierarchies.\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_\\$]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters, ., -, _ and $ are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component} from \"@angular/core\";\nimport {\n    AaiMessageTraitDefinition,\n    AaiDocument,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {FindMessageTraitDefinitionsVisitor} from \"../../_visitors/messagetrait-definitions.visitor\";\n\n\nexport interface MessageTraitData {\n    name: string;\n    description: string;\n}\n\nexport interface MessageTraitEditorEvent extends EntityEditorEvent<AaiMessageTraitDefinition> {\n    data: MessageTraitData;\n}\n\nexport interface IMessageTraitEditorHandler extends IEntityEditorHandler<AaiMessageTraitDefinition, MessageTraitEditorEvent> {\n    onSave(event: MessageTraitEditorEvent): void;\n    onCancel(event: MessageTraitEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"messagetrait-editor\",\n    templateUrl: \"messagetrait-editor.component.html\",\n    styleUrls: [\"messagetrait-editor.component.css\"]\n})\nexport class MessageTraitEditorComponent extends EntityEditor<AaiMessageTraitDefinition, MessageTraitEditorEvent> {\n\n    messageTraits: string[] = [];\n    traitExists: boolean = false;\n\n    public model: MessageTraitData = {\n        name: \"\",\n        description: \"\"\n    };\n\n    public doAfterOpen(): void {\n        this.messageTraits = [];\n        this.traitExists = false;\n        let traits: AaiMessageTraitDefinition[] = this.getMessageTraits(<AaiDocument> this.context.ownerDocument());\n        this.messageTraits = traits.map(definition => FindMessageTraitDefinitionsVisitor.definitionName(definition));\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: AaiMessageTraitDefinition): void {\n        // Note: nothing to do here because data types aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\"\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.traitExists;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): MessageTraitEditorEvent {\n        let event: MessageTraitEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    private getMessageTraits(document: AaiDocument): AaiMessageTraitDefinition[] {\n        let vizzy: FindMessageTraitDefinitionsVisitor = new FindMessageTraitDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedMessageTraitDefinitions()\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"messageTrait\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define a New Message Trait\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter a name and description for the new message trait.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"rsp_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"rsp_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique message trait name.\" pattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                           (ngModelChange)=\"traitExists = messageTraits.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"traitExists\">Message Trait named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    Aai20Document,\n    Aai20SecurityRequirement,\n    Aai20Server,\n    AaiSecurityRequirement,\n    CommandFactory,\n    ICommand\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport {AaiServerEditorComponent, AaiServerEditorEvent} from \"../../editors/aaiserver-editor.component\";\nimport {\n    SecurityRequirementData,\n    SecurityRequirementEditorComponent,\n    SecurityRequirementEditorEvent\n} from \"../../editors/security-requirement-editor.component\";\nimport {ModelUtils} from \"../../../_util/model.util\";\n\n\n@Component({\n    selector: \"aaiserver-row\",\n    templateUrl: \"aaiserver-row.component.html\",\n    styleUrls: [\"server-row.component.css\", \"aaiserver-row.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AaiServerRowComponent extends AbstractRowComponent<Aai20Server, string> {\n\n    @Output() onEdit: EventEmitter<AaiServerEditorEvent> = new EventEmitter<AaiServerEditorEvent>();\n    @Output() onDelete: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() onRename: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    showSecurityRequirements: boolean = true;\n\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, private editorsService: EditorsService,\n                selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        // Nothing to do for this row impl\n    }\n\n    public hasUrl(): boolean {\n        return !!this.item.url;\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public hasDescription(): boolean {\n        return !!this.item.description;\n    }\n\n    public securityRequirements(): AaiSecurityRequirement[] {\n        return this.item.security;\n    }\n\n    public hasSecurityRequirements(): boolean {\n        return !!this.item.security && this.item.security.length > 0;\n    }\n\n    public securityRequirementsPath(): string {\n        return ModelUtils.nodeToPath(this.item) + \"/security\";\n    }\n\n    public toggle(): void {\n        this.toggleTab(\"server\");\n    }\n\n    public edit(): void {\n        let serverEditor: AaiServerEditorComponent = this.editorsService.getAaiServerEditor();\n        let parent: Aai20Document = this.item.parent() as any;\n        serverEditor.open({\n            onSave: (data) => this.onEdit.emit(data),\n            onCancel: () => {}\n        }, parent, this.item);\n    }\n\n    public rename(): void {\n        this.onRename.emit(true);\n    }\n\n    public delete(): void {\n        this.onDelete.emit(true);\n    }\n\n    public setDescription(description: string): void {\n        // TODO create a new ChangeServerDescription command as it's a special case when used in a multi-user editing environment (why?)\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the full screen modal \"security requirement editor\" so that advanced editing of the\n     * security requirement can be accomplished.\n     */\n    public onAddSecurityRequirement(): void {\n        let editor: SecurityRequirementEditorComponent = this.editorsService.getSecurityRequirementEditor();\n        editor.open({\n            onSave: (event) => this.addSecurityRequirement(event.data),\n            onCancel: () => {}\n        }, this.item);\n    }\n\n    public deleteAllSecurityRequirements(): void {\n        console.info(\"[AaiServerRowComponent] Deleting all security requirements %s\", JSON.stringify(this.item, (k,v) =>  [\"_ownerDocument\", \"_parent\"].includes(k) && !!v ? \"<ref>\" : v, 2));\n        let command: ICommand = CommandFactory.createDeleteAllSecurityRequirementsCommand(this.item);\n        this.commandService.emit(command);\n    }\n\n    public addSecurityRequirement(data: SecurityRequirementData) {\n        console.info(\"[AaiServerRowComponent] Adding a security requirement: %s\", JSON.stringify(data));\n\n        let newRequirement: Aai20SecurityRequirement = this.item.createSecurityRequirement();\n\n        this.copySecurityRequirementToModel(data, newRequirement);\n\n        let command: ICommand = CommandFactory.createAddSecurityRequirementCommand(this.item, newRequirement);\n        this.commandService.emit(command);\n    }\n\n    private copySecurityRequirementToModel(data: SecurityRequirementData, newRequirement: Aai20SecurityRequirement) {\n        for (let partialRequirementKey in data) {\n            let scopes: string[] = [...data[partialRequirementKey]];\n            newRequirement.addSecurityRequirementItem(partialRequirementKey, scopes);\n        }\n    }\n\n    public changeSecurityRequirement(event: SecurityRequirementEditorEvent) {\n        console.info(\"[AaiServerRowComponent] Changing a security requirement: %s to %s\", event.entity, JSON.stringify(event.data));\n\n        let newRequirement: Aai20SecurityRequirement = this.item.createSecurityRequirement();\n\n        this.copySecurityRequirementToModel(event.data, newRequirement);\n\n        let command: ICommand = CommandFactory.createReplaceSecurityRequirementCommand(event.entity, newRequirement);\n        this.commandService.emit(command);\n    }\n\n\n    public deleteSecurityRequirement(requirement: Aai20SecurityRequirement) {\n        console.info(\"[AaiServerRowComponent] Deleting a security requirement: %s\", requirement);\n\n        let command: ICommand = CommandFactory.createDeleteSecurityRequirementCommand(this.item, requirement);\n        this.commandService.emit(command);\n    }\n}\n","<div class=\"server\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"expand\" (click)=\"toggle()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditing()\"></span>\n        </div>\n        <div class=\"url\" (click)=\"toggle()\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"pficon pficon-server entity-icon\"></span>\n            <span>{{ item.getName() }}</span>\n        </div>\n        <div class=\"protocol\" (click)=\"toggle()\">\n            <span>{{ item.protocol }}</span>\n            <span *ngIf=\"item.protocolVersion\"> ({{ item.protocolVersion }}) </span>\n        </div>\n        <div class=\"description\" (click)=\"toggle()\">\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"security-summary\" (click)=\"toggle()\">\n            <span *ngIf=\"! item.security || item.security.length == 0\">No Security Requirements</span>\n            <span *ngIf=\"item.security && item.security.length > 0\">{{ item.security.length }} Security Requirement{{ item.security.length == 1 ? \"\" : \"s\" }}</span>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"edit()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Edit</span></a></li>\n                    <li><a (click)=\"rename()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"server-description\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'Enter description here.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                    <div class=\"server-security\">\n                        <div class=\"server-security-header\">\n                            <div class=\"form-label\">Security requirements</div>\n                            <div class=\"actions pull-right\">\n                                <icon-button (onClick)=\"onAddSecurityRequirement()\" [pullRight]=\"true\" type=\"add\"\n                                             [title]=\"'Add a security requirement.'\"></icon-button>\n                                <icon-button (onClick)=\"deleteAllSecurityRequirements()\" [disabled]=\"!hasSecurityRequirements()\"\n                                             [pullRight]=\"true\" type=\"delete\"\n                                             [title]=\"'Delete all security requirements.'\"></icon-button>\n                            </div>\n                        </div>\n                        <div class=\"server-security-body\">\n                            <signpost *ngIf=\"!hasSecurityRequirements()\">\n                                <span>No security requirement have been configured.</span>\n                                <a (click)=\"onAddSecurityRequirement()\">Add a security requirement</a>\n                            </signpost>\n\n                            <!-- The list of security requirements -->\n                            <div class=\"tags\" *ngIf=\"hasSecurityRequirements()\">\n                                <aaisecurity-requirement-row *ngFor=\"let requirement of securityRequirements()\"\n                                                             [item]=\"requirement\"\n                                                             [parent]=\"item\"\n                                                             (onEdit)=\"changeSecurityRequirement($event)\"\n                                                             (onDelete)=\"deleteSecurityRequirement(requirement)\"></aaisecurity-requirement-row>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Oas30Document,\n    Oas30Operation,\n    Oas30PathItem,\n    Oas30Server,\n    Oas30ServerVariable\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {ServerData, ServerEditorComponent, ServerEditorEvent} from \"../../editors/server-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\n\n\n@Component({\n    selector: \"servers-section\",\n    templateUrl: \"servers-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ServersSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: Oas30Document | Oas30PathItem | Oas30Operation;\n    @Input() collapsed: boolean;\n    @Input() description: string;\n\n    public showSectionBody: boolean;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editorsService: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showSectionBody = !this.collapsed;\n    }\n\n    /**\n     * Returns the list of global servers defined in the document.\n     * @return\n     */\n    public servers(): Oas30Server[] {\n        let servers: Oas30Server[] = this.parent.servers;\n        if (ObjectUtils.isNullOrUndefined(servers)) {\n            servers = [];\n        }\n        // Clone the array\n        servers = servers.slice(0);\n        // Sort it\n        servers.sort( (obj1, obj2) => {\n            return obj1.url.toLowerCase().localeCompare(obj2.url.toLowerCase());\n        });\n        return servers;\n    }\n\n    public serversPath(): string {\n        if (this.parent.ownerDocument() === this.parent) {\n            return \"/servers\";\n        } else {\n            return ModelUtils.nodeToPath(this.parent) + \"/servers\";\n        }\n    }\n\n    /**\n     * Called when the user chooses to delete a server.\n     * @param server\n     */\n    public deleteServer(server: Oas30Server): void {\n        let command: ICommand = CommandFactory.createDeleteServerCommand(server);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user adds a new server.\n     * @param data\n     */\n    public addServer(data: ServerData): void {\n        console.info(\"[ServersSectionComponent] Adding a server: %s\", data.url);\n\n        let newServer: Oas30Server = this.parent.createServer();\n\n        this.copyServerToModel(data, newServer);\n\n        let command: ICommand = CommandFactory.createNewServerCommand(this.parent, newServer);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user edits an existing server.\n     * @param event\n     */\n    public changeServer(event: ServerEditorEvent): void {\n        console.info(\"[ServersSectionComponent] Editing a server: %s\", event.data.url);\n\n        let newServer: Oas30Server = this.parent.createServer();\n\n        this.copyServerToModel(event.data, newServer);\n\n        let command: ICommand = CommandFactory.createChangeServerCommand(newServer);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the full screen modal \"server editor\" so that advanced editing of the\n     * server can be accomplished.\n     */\n    public onAddServer(): void {\n        let serverEditor: ServerEditorComponent = this.editorsService.getServerEditor();\n        serverEditor.open({\n            onSave: (event) => this.addServer(event.data),\n            onCancel: () => {}\n        }, this.parent);\n    }\n\n    /**\n     * Copies the data from the event to the new server model.\n     * @param fromData\n     * @param toServer\n     */\n    private copyServerToModel(fromData: ServerData, toServer: Oas30Server): void {\n        toServer.url = fromData.url;\n        toServer.description = fromData.description;\n        if (fromData.variables) {\n            for (let varName in fromData.variables) {\n                let serverVar: Oas30ServerVariable = toServer.createServerVariable(varName);\n                serverVar.default_ = fromData.variables[varName].default;\n                serverVar.description = fromData.variables[varName].description;\n                serverVar.enum_ = fromData.variables[varName].enum;\n                toServer.addServerVariable(varName, serverVar);\n            }\n        }\n    }\n\n    public hasServers(): boolean {\n        return this.parent.servers && this.parent.servers.length > 0;\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the servers.\n     */\n    public deleteAllServers(): void {\n        let command: ICommand = CommandFactory.createDeleteAllServersCommand(this.parent);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"servers\" label=\"SERVERS\"\n         [counterItems]=\"servers()\"\n         [contextHelp]=\"description\"\n         [collaborationNodePath]=\"serversPath()\"\n         [validationModels]=\"servers()\" [expanded]=\"showSectionBody\">\n    <span actions>\n        <icon-button (onClick)=\"onAddServer()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a server to the API.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllServers()\" [disabled]=\"!hasServers()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete all servers.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"servers().length === 0\">\n            <span>No servers have been defined.</span>\n            <a (click)=\"onAddServer()\">Add a server</a>\n        </signpost>\n\n        <!-- The list of servers -->\n        <div class=\"tags\" *ngIf=\"servers().length > 0\">\n            <server-row *ngFor=\"let server of servers()\" [item]=\"server\"\n                        (onEdit)=\"changeServer($event)\"\n                        (onDelete)=\"deleteServer(server)\"></server-row>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren, Input} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {DIVIDER, DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\n\nconst STANDARD_TYPES = [ \"application/json\", \"text/xml\", \"multipart/form-data\" ];\n\n\n@Component({\n    selector: \"add-media-type-dialog\",\n    templateUrl: \"add-media-type.component.html\"\n})\nexport class AddMediaTypeDialogComponent {\n\n    private static CUSTOM_TYPES_STORAGE_KEY = \"apicurio.add-media-type.custom-types\";\n\n    @Output() onAdd: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"addMediaTypeModal\") addMediaTypeModal: QueryList<ModalDirective>;\n\n    private addedMediaTypeNames: string[] = []\n\n    private _isOpen: boolean = false;\n    private _typeOptions: DropDownOption[];\n\n    mediaType: string = \"\";\n    customType: string = \"\";\n\n    protected mediaTypeExists: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     * @param addedMediaTypeNames Array of the already added media types, to prevent adding them again\n     * @param mediaType Media type to select by default\n     */\n    public open(addedMediaTypeNames: string[] = [], mediaType?: string): void {\n        if (!mediaType) {\n            this.mediaType = \"application/json\";\n            this.customType = \"\";\n        } else if (this.isStandardType(this.mediaType)) {\n            this.mediaType = mediaType;\n            this.customType = \"\";\n        } else {\n            this.mediaType = \"custom\";\n            this.customType = mediaType;\n        }\n        this._isOpen = true;\n\n        this.addMediaTypeModal.changes.subscribe( thing => {\n            if (this.addMediaTypeModal.first) {\n                this.addMediaTypeModal.first.show();\n            }\n        });\n\n        // Add the standard types.\n        this._typeOptions = STANDARD_TYPES.map( stype => {\n            return new DropDownOptionValue(stype, stype);\n        });\n        // Add \"remembered\" custom types (if any)\n        let ctypes: string[] = this.getCustomTypes();\n        if (ctypes && ctypes.length > 0) {\n            this._typeOptions.push(DIVIDER);\n            ctypes.forEach( ctype => {\n                this._typeOptions.push(new DropDownOptionValue(ctype, ctype));\n            });\n        }\n        // Add the \"Custom Type\" option.\n        this._typeOptions.push(DIVIDER);\n        this._typeOptions.push(new DropDownOptionValue(\"Custom Type\", \"custom\"))\n\n        this.addedMediaTypeNames = addedMediaTypeNames\n    }\n\n    mediaTypeOptions(): DropDownOption[] {\n        return this._typeOptions;\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.mediaType = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        let mt: string = this.mediaType;\n        if (mt === 'custom') {\n            mt = this.customType;\n            this.rememberCustomType(mt);\n        }\n        this.onAdd.emit(mt);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addMediaTypeModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Stores the custom type in browser local storage.\n     * @param type\n     */\n    private rememberCustomType(type: string): void {\n        if (!this.isStandardType(type)) {\n            let ctypes: string[] = this.getCustomTypes();\n            if (ctypes.indexOf(type) === -1) {\n                ctypes.push(type);\n                let storage: Storage = window.localStorage;\n                storage.setItem(AddMediaTypeDialogComponent.CUSTOM_TYPES_STORAGE_KEY, JSON.stringify(ctypes));\n            }\n        }\n    }\n\n    private getCustomTypes(): string[] {\n        let storage: Storage = window.localStorage;\n        let ctypesRaw: string = storage.getItem(AddMediaTypeDialogComponent.CUSTOM_TYPES_STORAGE_KEY);\n        if (ctypesRaw && ctypesRaw.indexOf('[') === 0) {\n            return JSON.parse(ctypesRaw);\n        }\n        return [];\n    }\n\n    private isStandardType(type: string): boolean {\n        return STANDARD_TYPES.indexOf(type) !== -1;\n    }\n\n    public isMediaTypeAlreadyAdded(): boolean {\n        let mt: string = this.mediaType\n        if (mt === 'custom') {\n            mt = this.customType;\n        }\n        return this.addedMediaTypeNames.includes(mt)\n    }\n\n    public isValid(): boolean {\n        return !this.isMediaTypeAlreadyAdded();\n    }\n}\n","<!-- Add Media Type Dialog -->\n<div bsModal #addMediaTypeModal=\"bs-modal\" class=\"modal fade\" id=\"addMediaTypeModal\" tabindex=\"-1\" role=\"dialog\"\n     aria-labelledby=\"addMediaTypeModalLabel\" role=\"dialog\" (onHidden)=\"close()\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addMediaTypeModalLabel\">Add Media Type</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Choose a Media Type (e.g. application/json) below and then click Add.</p>\n                <form id=\"addmediaType-form\" class=\"form-horizontal\" (submit)=\"add()\" #addMediaTypeForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-3 control-label required\" for=\"mt\">Media Type</label>\n                        <div class=\"col-sm-9\">\n                            <drop-down id=\"mt\" [id]=\"'api-mediaType'\" [value]=\"mediaType\" [options]=\"mediaTypeOptions()\"\n                                       (onValueChange)=\"mediaType = $event\" noSelectionLabel=\"Choose Media Type\"></drop-down>\n                            <div class=\"form-error-message error\" *ngIf=\"isMediaTypeAlreadyAdded() && mediaType !== 'custom'\">Selected media type already exists.</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"mediaType === 'custom'\">\n                        <label class=\"col-sm-3 control-label required\" for=\"mediaType\">Custom Type</label>\n                        <div class=\"col-sm-9\">\n                            <input #customMediaTypeInput name=\"mediaType\" type=\"text\" id=\"mediaType\" class=\"form-control\"\n                                   placeholder=\"Enter a custom Media Type\"\n                                   required [(ngModel)]=\"customType\" #mtype=\"ngModel\">\n                            <form-error-message [inputModel]=\"mtype\" [type]=\"'required'\">Custom media type is required.</form-error-message>\n                            <div class=\"form-error-message error\" *ngIf=\"isMediaTypeAlreadyAdded()\">Selected media type already exists.</div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!addMediaTypeForm.form.valid || !isValid()\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {\n    CombinedAllNodeVisitor,\n    Library,\n    Node,\n    NodePath,\n    Oas20SchemaDefinition,\n    Oas30SchemaDefinition,\n    Document,\n    OasPathItem,\n    ValidationProblem, IDefinition\n} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../_util/model.util\";\nimport {DocumentService} from \"./document.service\";\nimport {Topic} from \"apicurio-ts-core\";\n\n\nclass MainSelectionVisitor extends CombinedAllNodeVisitor {\n\n    private _modFunction: (node: Node) => void;\n    private _nodeStack: Node[] = [];\n\n    constructor(clear: boolean = false) {\n        super();\n        this._modFunction = clear ? ModelUtils.clearSelection : ModelUtils.setSelection;\n    }\n\n    visitNode(node: Node): void {\n        this._modFunction(node);\n        this._nodeStack.push(node);\n    }\n\n    protected clearNodeStack(): void {\n        for (let node of this._nodeStack) {\n            ModelUtils.clearSelection(node);\n        }\n    }\n\n    public visitPathItem(node: OasPathItem): void {\n        this.clearNodeStack();\n        super.visitPathItem(node);\n    }\n\n    public visitSchemaDefinition(node: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n        this.clearNodeStack();\n        super.visitSchemaDefinition(node);\n    }\n\n    public visitResponseDefinition(node: IDefinition): void {\n        this.clearNodeStack();\n        super.visitSchemaDefinition(node);\n    }\n\n}\n\n\n/**\n * A simple service that tracks the user's current selection in the editor.  The selection\n * is represented as a node path - a full path to a node in the data model.\n */\n@Injectable()\nexport class SelectionService {\n\n    private _selectionTopic: Topic<string>;\n    private _highlightTopic: Topic<string>;\n\n    /**\n     * C'tor.\n     * @param documentService\n     */\n    constructor(private documentService: DocumentService) {\n        this.reset();\n    }\n\n    public currentSelection(): string {\n        return this._selectionTopic.getValue();\n    }\n\n    public selection(): Topic<string> {\n        return this._selectionTopic;\n    }\n\n    public simpleSelect(path: string): void {\n        // Fire an event with the new selection path (only if the selection changed)\n        this._selectionTopic.send(path);\n    }\n\n    public select(path: string): void {\n        // Clear previous selection\n        this.clearCurrentSelection();\n\n        // Select the new thing\n        let doc: Document = this.documentService.currentDocument();\n        let visitor: MainSelectionVisitor = new MainSelectionVisitor();\n        let npath: NodePath = new NodePath(path);\n        npath.resolveWithVisitor(doc, visitor);\n\n        // Fire an event with the new selection path\n        this._selectionTopic.send(path);\n    }\n\n    public selectNode(node: Node): void {\n        this.select(Library.createNodePath(node).toString());\n    }\n\n    public selectRoot(): void {\n        this.select(\"/\");\n    }\n\n    public reset(): void {\n        this._selectionTopic = new Topic<string>({\n            distinctUntilChanged: true\n        });\n        this._highlightTopic = new Topic<string>();\n    }\n\n    public clearAllSelections(): void {\n        this.clearCurrentSelection();\n    }\n\n    public reselectAll(): void {\n        this.select(this.currentSelection());\n    }\n\n    private clearCurrentSelection(): void {\n        let previousSelection: string = this.currentSelection();\n        if (previousSelection) {\n            let doc: Document = this.documentService.currentDocument();\n            if (doc) {\n                let visitor: MainSelectionVisitor = new MainSelectionVisitor(true);\n                let npath: NodePath = new NodePath(previousSelection);\n                npath.resolveWithVisitor(doc, visitor);\n            }\n        }\n    }\n\n    public highlightPath(path: string): void {\n        console.info(\"[SelectionService] Highlighting selection/path: \", path);\n        this._highlightTopic.send(path);\n    }\n\n    public highlight(): Topic<string> {\n        return this._highlightTopic;\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport {DocumentType, NodePath, OasSchema} from \"@apicurio/data-models\";\n\n\n@Component({\n    selector: \"schema-row\",\n    templateUrl: \"schema-row.component.html\",\n    styleUrls: [ \"schema-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SchemaRowComponent extends AbstractRowComponent<OasSchema, any> {\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n    }\n\n    displayName(): string {\n        return this.name();\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    refToName($ref: string): string {\n        if ($ref) {\n            return $ref.substring($ref.lastIndexOf('/') + 1);\n        } else {\n            return \"N/A\";\n        }\n    }\n\n    name(): string {\n        return this.refToName(this.item.$ref);\n    }\n\n    navigateToSchema(): void {\n        let path: NodePath = new NodePath(this.pathPrefix());\n        path.appendSegment(this.name(), true);\n        this.selectionService.select(path.toString());\n    }\n\n    refPrefix(): string {\n        let prefix: string = \"#/components/schemas/\";\n        if (this.item.ownerDocument().getDocumentType() === DocumentType.openapi2) {\n            prefix = \"#/definitions/\";\n        }\n        return prefix;\n    }\n\n    pathPrefix(): string {\n        return this.refPrefix().substr(1);\n    }\n\n}\n","<div class=\"schema\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <a (click)=\"navigateToSchema()\">\n                <span title=\"{{ displayName() }}\">{{ displayName() }}</span>\n            </a>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <!-- TODO: content when expanding the row??  details about the properties? -->\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, Component, HostListener} from \"@angular/core\";\nimport {KeypressUtils} from \"../../_util/keypress.util\";\n\n@Component({\n    selector: \"context-help\",\n    templateUrl: \"context-help.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContextHelpComponent {\n\n    private _open: boolean = false;\n\n    @HostListener(\"document:click\", [\"$event\"])\n    public onDocumentClick(event: MouseEvent): void {\n        if (this._open) {\n            this.close();\n        }\n    }\n\n    public open(event: MouseEvent): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this._open = true;\n    }\n\n    public close(): void {\n        this._open = false;\n    }\n\n    public isOpen(): boolean {\n        return this._open;\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.close();\n        }\n    }\n\n}\n","<span class=\"context-help\" (window:keydown)=\"onGlobalKeyDown($event)\">\n    <a (click)=\"open($event)\"><span class=\"context-help-icon fa fa-fw fa-info-circle\"></span></a>\n    <div #helppanel *ngIf=\"isOpen()\" class=\"context-help-panel\">\n        <ng-content></ng-content>\n    </div>\n</span>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Injectable} from \"@angular/core\";\nimport {Topic} from \"apicurio-ts-core\";\nimport {CombinedAllNodeVisitor, Document, Library, Node, TraverserDirection} from \"@apicurio/data-models\";\nimport * as YAML from 'js-yaml';\n\n\n/**\n * A service to manage a collection of APIs that should be loaded to accommodate various bits\n * of functionality, but primarily to assist with resolving external references.  This service\n * itself does not resolve external resources, but requires a helper for that.\n *\n * TODO also maintain a list of errors - populated when we fail to resolve a resource URL (and why)\n */\n@Injectable()\nexport class ApiCatalogService {\n\n    private apiCache: any; // a map of string to resolved API as js object data\n    private readonly changeTopic: Topic<any>;\n    private fetchCounter: number = 0;\n    private fetcher: (externalReference: string) => Promise<any>;\n\n    /**\n     * Constructor.\n     */\n    constructor() {\n        this.apiCache = {};\n        this.changeTopic = new Topic();\n    }\n\n    /**\n     * Sets the fetcher for the service.\n     * @param fetcher\n     */\n    public setFetcher(fetcher: (externalReference: string) => Promise<any>): void {\n        this.fetcher = fetcher;\n    }\n\n    /**\n     * Called to refresh the API cache.  This will remove any cached APIs that are not needed by\n     * the given document.\n     * @param document\n     */\n    private refresh(document: Document): void {\n        let changesMade: boolean = false;\n        this.fetchCounter = 0;\n\n        // Save the old API cache and make a new, empty one\n        let oldCache: any = this.apiCache;\n        this.apiCache = {};\n\n        // Get all external refs from the document\n        let allRefs: string[] = this.getAllRefs(document);\n        console.debug(\"[ApiCatalogService] All external references from document: \", allRefs);\n\n        // For each external ref, check to see if the old cache already had it.  If so, copy it to the new cache.\n        // If the old cache DIDN'T have it, then fetch it.\n        let newRefs: string[] = [];\n        allRefs.forEach(externalRef => {\n            if (oldCache[externalRef]) {\n                console.debug(\"[ApiCatalogService] Retaining cached reference to: \", externalRef);\n                this.apiCache[externalRef] = oldCache[externalRef]\n                delete oldCache[externalRef];\n            } else {\n                changesMade = true;\n                newRefs.push(externalRef);\n                this.fetchCounter++;\n                // Reserve a spot in the cache for this.\n                this.apiCache[externalRef] = null;\n            }\n        });\n        newRefs.forEach( ref => this.fetchAndCache(ref) );\n\n        // If anything remains in oldCache then set changesMade=true (means that something was removed).\n        if (Object.keys(oldCache).length > 0) {\n            changesMade = true;\n        }\n\n        // If there are any refs remaining in the old cache, then we've made changes to the cache and\n        // should fire that as an event to anyone listening.\n        if (changesMade && this.fetchCounter == 0) {\n            console.debug(\"[ApiCatalogService] Catalog changes detected, firing event.\");\n            this.changeTopic.send(this.apiCache);\n        }\n    }\n\n    /**\n     * Called to reset the API cache.  This will remove any cached APIs that are not needed by\n     * the given document.\n     * @param document\n     */\n    public reset(document: Document): void {\n        console.info(\"[ApiCatalogService] Resetting the API catalog.\");\n        this.refresh(document);\n    }\n\n    /**\n     * Called when the document changes in any way.  When that happens, we need to detect whether any new\n     * external references have been added.  If so, we need to fetch them and update the cache.\n     * @param document\n     */\n    public update(document: Document): void {\n        console.info(\"[ApiCatalogService] Updating the API catalog.\");\n        this.refresh(document);\n    }\n\n    /**\n     * Return the topic that consumers can use to listen when the contents of the api cache changes.\n     */\n    public changes(): Topic<any> {\n        return this.changeTopic;\n    }\n\n    /**\n     * Finds all the $refs anywhere in the given document.\n     * @param document\n     */\n    private getAllRefs(document: Document): string[] {\n        let refFinder: ReferenceFinder = new ReferenceFinder();\n        Library.visitTree(document, refFinder, TraverserDirection.down);\n        return refFinder.externalRefs();\n    }\n\n    /**\n     * Fetches the given external reference (asynchronously) and caches the result if appropriate.\n     * @param externalRef\n     */\n    private fetchAndCache(externalRef: string): void {\n        console.info(\"[ApiCatalogService] Fetching external resource at: \", externalRef);\n        // Use the fetcher to fetch the content (if we have one).\n        if (this.fetcher) {\n            this.fetcher(externalRef).then( content => {\n                console.debug(\"[ApiCatalogService] Successfully fetched external content:\");\n                content = this.parseContent(content);\n                this.cacheContent(externalRef, content);\n            }).catch(error => {\n                console.error(\"[ApiCatalogService] Error fetching external content.\");\n                console.error(error);\n                this.cacheContent(externalRef, null);\n            });\n        } else {\n            console.warn(\"[ApiCatalogService] Fetcher not installed.\");\n            this.cacheContent(externalRef, null);\n        }\n    }\n\n    /**\n     * Parses the given response body into a JS object.  This should support both JSON and YAML content.  If\n     * parsing fails we should log an error and return null.  That will indicate to any consumers of the\n     * cache that there *should* be an entry for the content but that the content failed to be fetched.\n     * @param body\n     */\n    private parseContent(body: any): any {\n        console.debug(\"[ApiCatalogService] Parsing external resource content.\");\n        if (typeof body === \"object\") {\n            return body;\n        }\n        try { return JSON.parse(body); } catch (e) {}\n        try { return YAML.safeLoad(body); } catch (e) {}\n        // TODO debug or warning here\n        return null;\n    }\n\n    /**\n     * Extracts the design id from the given external ref of the form: apicurio:173827\n     * @param externalRef\n     */\n    private toDesignId(externalRef: string): string {\n        return externalRef.substring(externalRef.indexOf(\":\") + 1);\n    }\n\n    /**\n     * Caches the given JS object content.  Also potentially fires a \"changed\" event.\n     * @param content\n     */\n    private cacheContent(externalRef: string, content: any): any {\n        console.info(\"[ApiCatalogService] Caching content for external URL: \", externalRef);\n        this.apiCache[externalRef] = content;\n        this.fetchCounter--;\n        console.debug(\"[ApiCatalogService] Fetch counter is now: \", this.fetchCounter);\n        // If the expected fetch counter is 0, we can fire an event that the cache has changed.\n        // We could do this for every successful fetch, but we'd be potentially getting a lot of\n        // events that consumers don't care about.\n        if (this.fetchCounter === 0) {\n            console.debug(\"[ApiCatalogService] Firing 'change' event.\");\n            this.changeTopic.send(this.apiCache);\n        }\n    }\n\n    /**\n     * Called to lookup a resource stored in the catalog.  Returns a JS object if one is found or null\n     * if not found.\n     * @param resourceUrl\n     */\n    public lookup(resourceUrl: string) {\n        let rval: any = this.apiCache[resourceUrl];\n        if (rval) {\n            return rval;\n        } else {\n            return null;\n        }\n    }\n}\n\n/**\n * Visitor used to find all references in a document.\n * TODO consolidate this functionality in apicurio-data-models\n * TODO possibly use the Reference class in apicurio-data-models instead of using strings\n */\nclass ReferenceFinder extends CombinedAllNodeVisitor {\n\n    public allRefs: any = {};\n\n    public visitNode(node: Node): void {\n        if (node[\"$ref\"]) {\n            let $ref: string = node[\"$ref\"];\n            if (this.isExternal($ref)) {\n                let resourceUrl: string = this.toResourceUrl($ref);\n                this.allRefs[resourceUrl] = true;\n            }\n        }\n    }\n\n    public externalRefs(): string[] {\n        return Object.keys(this.allRefs);\n    }\n\n    private isExternal($ref: string): boolean {\n        return $ref != null && $ref.indexOf(\"#\") != 0;\n    }\n\n    private toResourceUrl($ref: string): string {\n        let idx: number = $ref.indexOf(\"#\");\n        if (idx === -1) {\n            return $ref;\n        } else {\n            return $ref.substring(0, idx);\n        }\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {\n    Oas20SchemaDefinition,\n    Oas30SchemaDefinition,\n    Aai20SchemaDefinition,\n    OasDocument,\n    AaiDocument,\n    DocumentType,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {FindSchemaDefinitionsVisitor, FindAaiSchemaDefinitionsVisitor} from \"../../_visitors/schema-definitions.visitor\";\n\n\n@Component({\n    selector: \"clone-definition-dialog\",\n    templateUrl: \"clone-definition.component.html\"\n})\nexport class CloneDefinitionDialogComponent {\n\n    @Output() onClone: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"cloneDefinitionModal\") cloneDefinitionModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    name: string = \"\";\n    private definition: Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition;\n\n    defs: string[] = [];\n    defExists: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     * @param definition\n     */\n    public open(document: OasDocument | AaiDocument, definition: Oas20SchemaDefinition | Oas30SchemaDefinition |  Aai20SchemaDefinition): void {\n        this._isOpen = true;\n        this.definition = definition;\n        this.name = \"CloneOf\" + definition.getName();\n\n        this.cloneDefinitionModal.changes.subscribe( () => {\n            if (this.cloneDefinitionModal.first) {\n                this.cloneDefinitionModal.first.show();\n            }\n        });\n\n        this.defs = [];\n        this.defExists = false;\n\n        if (document.getDocumentType() == DocumentType.asyncapi2) {\n            let definitions: Aai20SchemaDefinition[] = this.getAaiDefinitions(<AaiDocument> document);\n            definitions.forEach( definition => {\n                this.defs.push(FindAaiSchemaDefinitionsVisitor.definitionName(definition));\n            });\n        } else {\n            let definitions: (Oas20SchemaDefinition | Oas30SchemaDefinition)[] = this.getDefinitions(<OasDocument> document);\n            definitions.forEach( definition => {\n                this.defs.push(FindSchemaDefinitionsVisitor.definitionName(definition));\n            });\n        }\n    }\n\n    private getDefinitions(document: OasDocument): (Oas20SchemaDefinition | Oas30SchemaDefinition)[] {\n        let vizzy: FindSchemaDefinitionsVisitor = new FindSchemaDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedSchemaDefinitions()\n    }\n\n    private getAaiDefinitions(document: AaiDocument): (Aai20SchemaDefinition)[] {\n        let vizzy: FindAaiSchemaDefinitionsVisitor = new FindAaiSchemaDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedSchemaDefinitions();\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"clone\".\n     */\n    clone(): void {\n        let data: any = {\n            name: this.name,\n            definition: this.definition\n        };\n        this.onClone.emit(data);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.cloneDefinitionModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n}\n","<!-- Clone Data Type Dialog -->\n<div>\n    <div bsModal #cloneDefinitionModal=\"bs-modal\" class=\"modal fade\" id=\"cloneDefinitionModal\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"cloneDefinitionModalLabel\" role=\"dialog\" aria-hidden=\"true\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\"\n         (onShown)=\"cloneDefinitionInput.focus()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"cloneDefinitionModalLabel\">Clone Data Type</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter a new data type name below and then click Clone.</p>\n                    <form id=\"clonedef-form\" class=\"form-horizontal\" #cloneDefinitionForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label required\" for=\"definitionName\">Name</label>\n                            <div class=\"col-sm-10\">\n                                <input name=\"definitionName\" type=\"text\" id=\"definitionName\" class=\"form-control\" #cloneDefinitionInput\n                                       placeholder=\"Enter a Data Type Name\" pattern=\"[a-zA-Z0-9\\.\\-_]+\" #defName=\"ngModel\"\n                                       required [(ngModel)]=\"name\" (ngModelChange)=\"defExists = defs.indexOf($event) != -1\">\n                                <div class=\"form-error-message error\" *ngIf=\"defExists\">Data type already exists.</div>\n                                <form-error-message [inputModel]=\"defName\" [type]=\"'required'\">Name is required.</form-error-message>\n                                <form-error-message [inputModel]=\"defName\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clone()\"\n                            [disabled]=\"!cloneDefinitionForm.form.valid || defExists\">Clone</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {CombinedVisitorAdapter, AaiOperationTraitDefinition} from \"@apicurio/data-models\";\n\n/**\n * Visitor used to find operation trait definitions.\n */\nexport class FindOperationTraitDefinitionsVisitor extends CombinedVisitorAdapter {\n\n    public operationTraitDefinitions: AaiOperationTraitDefinition[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria\n     */\n    constructor(private filterCriteria: string) {\n        super();\n    }\n\n    /**\n     * Called when a operation trait def is visited.\n     * @param node\n     */\n    visitOperationTraitDefinition(node: AaiOperationTraitDefinition): void {\n        if (this.acceptThroughFilter(node.getName())) {\n            this.operationTraitDefinitions.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the operation trait defs.\n     */\n    public getSortedOperationTraitDefinitions(): AaiOperationTraitDefinition[] {\n        return this.operationTraitDefinitions.sort( (operationTraitDefinition1, operationTraitDefinition2) => {\n            return operationTraitDefinition1.getName().localeCompare(operationTraitDefinition2.getName());\n        });\n    }\n\n    /**\n     * Figures out the definition name regardless of the version of the model.\n     * @param definition\n     */\n    public static definitionName(definition: AaiOperationTraitDefinition): string {\n        return definition.getName();\n    }\n\n    /**\n     * Returns true if the given name is accepted by the current filter criteria.\n     * @param name\n     * @return\n     */\n    private acceptThroughFilter(name: string): boolean {\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nexport class Api {\n\n    id: string;\n    name: string;\n    description: string;\n    createdOn: Date;\n    createdBy: string;\n    tags: string[];\n    type: string;\n\n    constructor() {\n        this.id = \"\";\n        this.name = \"\";\n        this.description = \"\";\n        this.createdOn = new Date();\n        this.createdBy = \"\";\n        this.tags = null;\n        this.type = \"\";\n    }\n\n}\n\n\nexport class ApiDefinition extends Api {\n\n    spec: any;\n\n    constructor() {\n        super();\n        this.spec = {};\n    }\n\n    public static fromApi(api: Api): ApiDefinition {\n        let apiDef: ApiDefinition = new ApiDefinition();\n        apiDef.id = api.id;\n        apiDef.name = api.name;\n        apiDef.description = api.description;\n        apiDef.createdOn = api.createdOn;\n        apiDef.createdBy = api.createdBy;\n\n        return apiDef;\n    }\n\n}\n\n\nexport class EditableApiDefinition extends ApiDefinition {\n\n    editingSessionUuid: string;\n    contentVersion: number;\n\n    constructor() {\n        super();\n        this.editingSessionUuid = null;\n        this.contentVersion = 0;\n    }\n\n    public static fromApi(api: Api): EditableApiDefinition {\n        let apiDef: EditableApiDefinition = new EditableApiDefinition();\n        apiDef.id = api.id;\n        apiDef.name = api.name;\n        apiDef.description = api.description;\n        apiDef.createdOn = api.createdOn;\n        apiDef.createdBy = api.createdBy;\n        apiDef.type = api.type;\n\n        return apiDef;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n@Component({\n    selector: \"counter\",\n    templateUrl: \"counter.component.html\",\n    styleUrls: [ \"counter.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CounterComponent extends AbstractBaseComponent {\n\n    @Input() items: any[];\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public hasItems(): boolean {\n        return this.items !== null && this.items !== undefined && this.items.length > 0;\n    }\n\n    public numItems(): number {\n        return this.items.length;\n    }\n\n}\n","<span *ngIf=\"hasItems()\" class=\"item-counter\">{{ numItems() }}</span>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n\n@Component({\n    selector: \"[server-url]\",\n    templateUrl: \"server-url.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ServerUrlComponent extends AbstractBaseComponent {\n\n    @Input() url: string;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public segments(): string[] {\n        let segments: string[] = [];\n        let i: number = 0;\n        let sep: string = '{';\n        while (i < this.url.length) {\n            let from: number = i;\n            let to: number = this.url.indexOf(sep, from + 1);\n            if (to == -1) {\n                to = this.url.length;\n            } else {\n                if (sep === '{') {\n                    sep = '}';\n                } else {\n                    to++;\n                    sep = '{';\n                }\n            }\n            let segment: string = this.url.substring(from, to);\n            segments.push(segment);\n            i = to;\n        }\n        return segments;\n    }\n\n}\n","<span class=\"server-url-segment\" *ngFor=\"let segment of segments()\" [class.server-variable]=\"segment.startsWith('{') && segment.endsWith('}')\">{{ segment }}</span>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Input, ViewChild} from \"@angular/core\";\nimport {LoggerService} from \"../../services/logger.service\";\nimport {EditorComponent} from \"./editor.component\";\nimport {WindowRef} from \"../../services/window-ref.service\";\nimport {ApiDefinition} from \"../../editor/_models/api.model\";\nimport {OaiEditorComponent} from \"../../editor/oaieditor.component\";\n\n\n@Component({\n    selector: \"openapi-editor\",\n    templateUrl: \"openapi-editor.component.html\",\n    styleUrls: [\"openapi-editor.component.css\"]\n})\nexport class OpenApiEditorComponent implements EditorComponent {\n\n    // @ts-ignore\n    @Input() api: ApiDefinition;\n\n    @ViewChild(\"apiEditor\") apiEditor: OaiEditorComponent | undefined;\n\n    /**\n     * Constructor.\n     */\n    constructor(private logger: LoggerService, private window: WindowRef) {\n    }\n\n    /**\n     * Called whenever the API definition is changed by the user.\n     */\n    public documentChanged(): any {\n        this.logger.info(\"[OpenApiEditorComponent] Detected a document change\");\n        const newValue: ApiDefinition = this.apiEditor.getValue();\n        const message: any = {\n            type: \"apicurio_onChange\",\n            data: {\n                content: newValue.spec\n            }\n        };\n        this.window.window.top.postMessage(message, \"*\");\n    }\n\n    public getValue(): string {\n        const value: ApiDefinition = this.apiEditor.getValue();\n        return JSON.stringify(value.spec, null, 4);\n    }\n\n}\n","<div class=\"openapi-editor\" id=\"openapi-editor\">\n    <oai-editor #apiEditor [api]=\"api\" [embedded]=\"true\" (onCommandExecuted)=\"documentChanged()\"\n                (onUndo)=\"documentChanged()\" (onRedo)=\"documentChanged()\"\n                [features]=\"{ componentImports: false, validationSettings: false }\"></oai-editor>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, ICommand, Library, Oas20Document, OasDocument, OasInfo} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\n\n\n@Component({\n    selector: \"info-section\",\n    templateUrl: \"info-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InfoSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public info(): OasInfo {\n        return this.document.info;\n    }\n\n    /**\n     * returns the version.\n     */\n    public version(): string {\n        if (this.info()) {\n            return this.info().version;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * returns the description.\n     */\n    public description(): string {\n        if (this.info()) {\n            return this.info().description;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Called when the user changes the version.\n     * @param newVersion\n     */\n    public onVersionChange(newVersion: string): void {\n        console.info(\"[InfoSectionComponent] User changed the version to: \", newVersion);\n        let command: ICommand = CommandFactory.createChangeVersionCommand(newVersion);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the description.\n     * @param newDescription\n     */\n    public onDescriptionChange(newDescription: string): void {\n        console.info(\"[InfoSectionComponent] User changed the description.\");\n        let command: ICommand = CommandFactory.createChangeDescriptionCommand(newDescription);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the \"consumes\".\n     * @param newValue\n     */\n    public onConsumesChange(newValue: string[]): void {\n        console.info(\"[InfoSectionComponent] User changed the consumes to: \", newValue);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string[]>(this.document, \"consumes\", newValue);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the \"produces\".\n     * @param newValue\n     */\n    public onProducesChange(newValue: string[]): void {\n        console.info(\"[InfoSectionComponent] User changed the produces to: \", newValue);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string[]>(this.document, \"produces\", newValue);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(this.document);\n        path.appendSegment(\"produces\", false);\n        this.selectionService.select(path.toString());\n    }\n\n    public consumes(): string[] {\n        return (this.document as Oas20Document).consumes;\n    }\n\n    public produces(): string[] {\n        return (this.document as Oas20Document).produces;\n    }\n\n}\n","<section type=\"info\" label=\"INFO\"\n         contextHelp=\"This section allows you to modify the Version and Description of the API.\"\n         [collaborationNodePath]=\"[ '/info/version', '/info/description' ]\"\n         [validationModels]=\"[info()]\" [validationProperties]=\"['version', 'description']\" [validationShallow]=\"true\">\n    <span actions></span>\n    <div body>\n        <!-- Version -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"info()\" property=\"version\" [shallow]=\"true\"></validation-problem>\n            <span>Version</span>\n        </div>\n        <div class=\"section-field version\">\n            <pf-inline-text-editor [value]=\"version()\"\n                                   [labelClass]=\"'api-version'\"\n                                   [formClass]=\"'api-title-editor-form'\"\n                                   [inputClass]=\"'api-item-editor api-version-editor api-version api-item-version'\"\n                                   [baseNode]=\"info()\" nodePath=\"version\"\n                                   [noValueMessage]=\"'N/A'\" (onChange)=\"onVersionChange($event)\"></pf-inline-text-editor>\n        </div>\n        <!-- Description -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"info()\" property=\"description\" [shallow]=\"true\"></validation-problem>\n            <span>Description</span>\n        </div>\n        <div class=\"section-field description\">\n            <inline-markdown-editor [value]=\"description()\"\n                                    [labelClass]=\"'api-description api-item-description'\"\n                                    [formClass]=\"'api-description-editor-form'\"\n                                    [inputClass]=\"'api-item-editor api-description-editor api-description api-item-description'\"\n                                    [baseNode]=\"info()\" nodePath=\"description\"\n                                    [noValueMessage]=\"'No description.'\" (onChange)=\"onDescriptionChange($event)\"></inline-markdown-editor>\n        </div>\n        <!-- Consumes and Produces (2.0 only) -->\n        <div *ngIf=\"document.is2xDocument()\">\n            <!-- Consumes -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"document\" property=\"consumes\" [shallow]=\"true\"></validation-problem>\n                <span>Consumes (Inputs)</span>\n            </div>\n            <div class=\"section-field consumes\">\n                <inline-array-editor [value]=\"consumes()\" [noValueMessage]=\"'Set the consumes content-type.'\"\n                                     [items]=\"[ 'application/json', 'text/xml', 'multipart/form-data' ]\"\n                                     [baseNode]=\"document\" nodePath=\"consumes\"\n                                     (onChange)=\"onConsumesChange($event)\"></inline-array-editor>\n            </div>\n            <!-- Produces -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"document\" property=\"produces\" [shallow]=\"true\"></validation-problem>\n                <span>Produces (Outputs)</span>\n            </div>\n            <div class=\"section-field produces\">\n                <inline-array-editor [value]=\"produces()\" [noValueMessage]=\"'Set the produces content-type.'\"\n                                     [items]=\"[ 'application/json', 'text/xml', 'multipart/form-data' ]\"\n                                     [baseNode]=\"document\" nodePath=\"produces\"\n                                     (onChange)=\"onProducesChange($event)\"></inline-array-editor>\n            </div>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2018 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, ViewEncapsulation} from \"@angular/core\";\nimport {CodeEditorMode} from \"./code-editor.component\";\n\n@Component({\n    selector: \"markdown-editor\",\n    templateUrl: \"markdown-editor.component.html\",\n    encapsulation: ViewEncapsulation.None\n})\nexport class MarkdownEditorComponent {\n\n    public _value: string;\n\n    @Input() editorStyle: any;\n\n    @Input()\n    get value() {\n        return this._value;\n    }\n\n    @Output() public valueChange = new EventEmitter<string>();\n    set value(value: string) {\n        this._value = value;\n        this.valueChange.emit(value);\n    }\n\n    public codeEditorMode(): CodeEditorMode {\n        return CodeEditorMode.Markdown;\n    }\n\n}","<code-editor\n        [mode]=\"codeEditorMode()\"\n        [debounceTime]=\"100\"\n        [(text)]=\"value\"\n        wordWrap=\"true\"\n        [editorStyle]=\"editorStyle\"></code-editor>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    Library,\n    Oas20Document,\n    Oas20Schema,\n    Oas20ResponseDefinition,\n    Oas30Document,\n    Oas30Schema,\n    Oas30ResponseDefinition,\n    OasDocument,\n    OasSchema,\n    SimplifiedPropertyType,\n    TraverserDirection,\n    VisitorUtil, OasResponse, ReferenceUtil,\n} from \"@apicurio/data-models\";\n\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {CloneResponseDialogComponent} from \"../dialogs/clone-response.component\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {IPropertyEditorHandler, PropertyData, PropertyEditorComponent} from \"../editors/property-editor.component\";\nimport {EditorsService} from \"../../_services/editors.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../dialogs/rename-entity.component\";\nimport Oas20PropertySchema = Oas20Schema.Oas20PropertySchema;\nimport Oas30PropertySchema = Oas30Schema.Oas30PropertySchema;\nimport { AbstractBaseComponent } from \"../common/base-component\";\nimport {CloneResponseDefinitionDialogComponent} from \"../dialogs/clone-response-definition.component\";\nimport {ApiCatalogService} from \"../../_services/api-catalog.service\";\n\n\n@Component({\n    selector: \"response-form\",\n    templateUrl: \"response-form.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResponseFormComponent extends SourceFormComponent<OasResponse> {\n\n    private _response: Oas20ResponseDefinition | Oas30ResponseDefinition;\n    @Input()\n    set response(response: Oas20ResponseDefinition | Oas30ResponseDefinition) {\n        this._response = response;\n        this.sourceNode = response;\n        this.revertSource();\n    }\n\n    get response(): Oas20ResponseDefinition | Oas30ResponseDefinition {\n        return this._response;\n    }\n\n    @ViewChild(\"cloneResponseDialog\", { static: true }) cloneResponseDialog: CloneResponseDefinitionDialogComponent;\n    @ViewChild(\"renameResponseDialog\", { static: true }) renameResponseDialog: RenameEntityDialogComponent;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param selectionService\n     * @param commandService\n     * @param documentService\n     * @param editors\n     * @param catalog\n     */\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n                       protected selectionService: SelectionService,\n                       protected commandService: CommandService,\n                       protected documentService: DocumentService,\n                       private editors: EditorsService,\n                       private catalog: ApiCatalogService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    public responseName(): string {\n        return this._response.getName();\n    }\n\n    is20Document(): boolean {\n        let doc: OasDocument = <OasDocument>this.response.ownerDocument();\n        return doc.is2xDocument();\n    }\n\n    is30Document(): boolean {\n        let doc: OasDocument = <OasDocument>this.response.ownerDocument();\n        return doc.is3xDocument();\n    }\n\n    protected createEmptyNodeForSource(): Oas20ResponseDefinition | Oas30ResponseDefinition {\n        if (this.response.ownerDocument().getDocumentType() == DocumentType.openapi2) {\n            return (this.response.ownerDocument() as Oas20Document).responses.createResponse(this.responseName());\n        } else {\n            return (this.response.ownerDocument() as Oas30Document).components.createResponseDefinition(this.responseName());\n        }\n    }\n\n    protected createReplaceNodeCommand(node: Oas20ResponseDefinition | Oas30ResponseDefinition): ICommand {\n        return CommandFactory.createReplaceResponseDefinitionCommand(this.response.ownerDocument().getDocumentType(), this.response, node);\n        return null;\n    }\n\n    public delete(): void {\n        console.info(\"[ResponseFormComponent] Deleting response.\");\n        let command: ICommand = CommandFactory.createDeleteResponseDefinitionCommand(this.response.ownerDocument().getDocumentType(),\n            this.responseName());\n        this.commandService.emit(command);\n    }\n\n    public clone(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            this.cloneResponseDialog.open(<OasDocument> this.response.ownerDocument(), this.response);\n        } else {\n            let response: Oas20ResponseDefinition | Oas30ResponseDefinition = modalData.response;\n            console.info(\"[ResponseFormComponent] Clone response: %s\", modalData.name);\n            let cloneSrcObj: any = Library.writeNode(response);\n            let command: ICommand = CommandFactory.createAddResponseDefinitionCommand(this.response.ownerDocument().getDocumentType(),\n                modalData.name, cloneSrcObj);\n            this.commandService.emit(command);\n        }\n    }\n\n    public rename(event?: RenameEntityEvent): void {\n        if (undefined === event || event === null) {\n            let schemaDef: Oas20ResponseDefinition | Oas30ResponseDefinition = this.response;\n            let name: string = this.responseName();\n            let responseNames: string[] = [];\n            let form: ResponseFormComponent = this;\n            VisitorUtil.visitTree(this.response.ownerDocument(), new class extends CombinedVisitorAdapter {\n                public visitResponseDefinition(node: Oas20ResponseDefinition | Oas30ResponseDefinition): void {\n                    responseNames.push(form._responseName(node));\n                }\n            }, TraverserDirection.down);\n            this.renameResponseDialog.open(schemaDef, name, newName => {\n                return responseNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let oldName: string = this.responseName();\n            console.info(\"[ResponseFormComponent] Rename response to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameResponseDefinitionCommand(this.response.ownerDocument().getDocumentType(),\n                oldName, event.newName);\n            this.commandService.emit(command);\n            // TODO reselect the renamed response - we can fabricate the path and then fire a selection event.\n        }\n    }\n\n    public enableSourceMode(): void {\n        this.sourceNode = this.response;\n        super.enableSourceMode();\n    }\n\n    /**\n     * Figures out the response name.\n     * @param response\n     */\n    protected _responseName(response: Oas20ResponseDefinition | Oas30ResponseDefinition): string {\n        return response.getName();\n    }\n\n    isImported(): boolean {\n        return this.response.$ref && !this.response.$ref.startsWith(\"#\");\n    }\n\n    /**\n     * When the response is an import, returns the content for the imported entity.\n     */\n    referenceContent(): string {\n        if (this.response.$ref && this.response.$ref.indexOf(\"#\") > 0) {\n            let hashIdx: number = this.response.$ref.indexOf(\"#\");\n            let resourceUrl: string = this.response.$ref.substring(0, hashIdx);\n            let content: any = this.catalog.lookup(resourceUrl);\n            if (content) {\n                    let fragment: string = this.response.$ref.substring(hashIdx+1);\n                    content = ReferenceUtil.resolveFragmentFromJS(content, fragment);\n                    if (content) {\n                            return JSON.stringify(content, null, 3);\n                        }\n                }\n        }\n        return \"Content not available.\";\n    }\n\n    refLink(): string {\n        if (this.response.$ref && this.response.$ref.startsWith(\"apicurio:\")) {\n            let currentUrl: string = window.location.href;\n            let refId: string = this.getRefId();\n            // Drop the /editor and /12345 (apiId) from the URL\n                let prefix: string = currentUrl.substring(0, currentUrl.lastIndexOf('/'));\n            prefix = prefix.substring(0, prefix.lastIndexOf('/'));\n            return prefix + \"/\" + refId;\n        } else {\n            return this.response.$ref;\n        }\n    }\n\n    private getRefId(): string {\n        let colonIdx: number = this.response.$ref.indexOf(':');\n        let hashIdx: number = this.response.$ref.indexOf('#');\n        return this.response.$ref.substring(colonIdx + 1, hashIdx);\n    }\n\n}\n","<div class=\"detail-title\">\n    <div class=\"detail-label\">\n        <span class=\"fa fa-fw fa-reply-all\"></span>\n        <span>{{ responseName() }}</span>\n        <span class=\"imported label label-info\" *ngIf=\"isImported()\">Imported</span>\n    </div>\n    <div class=\"detail-actions\">\n        <div class=\"dropdown\">\n            <button class=\"btn btn-link dropdown-toggle\" type=\"button\" id=\"dropdownKebab\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                <span class=\"fa fa-ellipsis-v\"></span>\n            </button>\n            <ul class=\"dropdown-menu \" aria-labelledby=\"dropdownKebab\">\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"collapseAllSections()\">\n                        <span class=\"fa fa-compress\"></span>\n                        <span>Collapse All Sections</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"expandAllSections()\">\n                        <span class=\"fa fa-expand\"></span>\n                        <span>Expand All Sections</span>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"rename()\">\n                        <span class=\"fa fa-pencil-square-o\"></span>\n                        <span>Rename Response</span>\n                    </a>\n                </li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"clone()\">\n                        <span class=\"fa fa-clone\"></span>\n                        <span>Clone Response</span>\n                    </a>\n                </li>\n                <li class=\"divider\"></li>\n                <li>\n                    <a href=\"#\" onclick=\"return false\" (click)=\"delete()\">\n                        <span class=\"pficon pficon-delete\"></span>\n                        <span>Delete Response</span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n</div>\n<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n    <div class=\"api-response-detail\" *ngIf=\"!isImported()\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\">\n                <response-tab [response]=\"response\" *ngIf=\"is20Document()\"></response-tab>\n                <response-tab-30 [response]=\"response\" *ngIf=\"is30Document()\"></response-tab-30>\n            </div>\n        </div>\n    </div>\n    <div class=\"api-response-detail\" *ngIf=\"isImported()\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\">\n                <!-- Reference -->\n                <section type=\"respReference\" label=\"REFERENCE\"\n                         contextHelp=\"This section describes the externally referenced Response.\"\n                         [validationModels]=\"[ response ]\"\n                         [validationProperties]=\"['$ref']\"\n                         [validationShallow]=\"true\">\n                    <div body>\n                        <span>This Response is an external reference to: </span>\n                        <em><a [href]=\"refLink()\" target=\"_blank\"><span class=\"fa fa-fw fa-external-link\"></span>{{ response.$ref }}</a></em>\n                    </div>\n                </section>\n                <!-- Reference Details -->\n                <section type=\"respReferenceDetails\" label=\"REFERENCE DETAILS\"\n                         contextHelp=\"This section shows details about the externally referenced Response.\">\n                    <div body>\n                        <pre>{{ referenceContent() }}</pre>\n                    </div>\n                </section>\n            </div>\n        </div>\n    </div>\n</div>\n\n<clone-response-definition-dialog #cloneResponseDialog (onClone)=\"clone($event)\"></clone-response-definition-dialog>\n<rename-entity-dialog #renameResponseDialog\n                      type=\"Response\"\n                      title=\"Rename Response\"\n                      warning=\"Renaming a Response will also update any references to the response elsewhere in the API (e.g. operations).\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters, ., - and _ are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {\n    Oas20ResponseDefinition,\n    Oas30ResponseDefinition,\n    OasDocument,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {FindResponseDefinitionsVisitor} from \"../../_visitors/response-definitions.visitor\";\n\n\n@Component({\n    selector: \"clone-response-definition-dialog\",\n    templateUrl: \"clone-response-definition.component.html\"\n})\nexport class CloneResponseDefinitionDialogComponent {\n\n    @Output() onClone: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"cloneResponseDefinitionModal\") cloneResponseDefinitionModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    name: string = \"\";\n    private definition: Oas20ResponseDefinition | Oas30ResponseDefinition;\n\n    defs: string[] = [];\n    defExists: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     * @param definition\n     */\n    public open(document: OasDocument, definition: Oas20ResponseDefinition | Oas30ResponseDefinition): void {\n        this._isOpen = true;\n        this.definition = definition;\n        this.name = \"CloneOf\" + definition.getName();\n\n        this.cloneResponseDefinitionModal.changes.subscribe( () => {\n            if (this.cloneResponseDefinitionModal.first) {\n                this.cloneResponseDefinitionModal.first.show();\n            }\n        });\n\n        this.defs = [];\n        this.defExists = false;\n        let definitions: (Oas20ResponseDefinition | Oas30ResponseDefinition)[] = this.getDefinitions(document);\n        definitions.forEach( definition => {\n            this.defs.push(FindResponseDefinitionsVisitor.definitionName(definition));\n        });\n    }\n\n    private getDefinitions(document: OasDocument): (Oas20ResponseDefinition | Oas30ResponseDefinition)[] {\n        let vizzy: FindResponseDefinitionsVisitor = new FindResponseDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedResponseDefinitions()\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"clone\".\n     */\n    clone(): void {\n        let data: any = {\n            name: this.name,\n            definition: this.definition\n        };\n        this.onClone.emit(data);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.cloneResponseDefinitionModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n}\n","<!-- Clone Response Definition Dialog -->\n<div>\n    <div bsModal #cloneResponseDefinitionModal=\"bs-modal\" class=\"modal fade\" id=\"cloneResponseDefinitionModal\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"cloneResponseDefinitionModalLabel\" role=\"dialog\" aria-hidden=\"true\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\"\n         (onShown)=\"cloneResponseDefinitionInput.focus()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"cloneResponseDefinitionModalLabel\">Clone Response Definition</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter a new response definition name below and then click Clone.</p>\n                    <form id=\"clonedef-form\" class=\"form-horizontal\" #cloneResponseDefinitionForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label required\" for=\"definitionName\">Name</label>\n                            <div class=\"col-sm-10\">\n                                <input name=\"definitionName\" type=\"text\" id=\"definitionName\" class=\"form-control\" #cloneResponseDefinitionInput\n                                       placeholder=\"Enter a Response Definition Name\" pattern=\"[a-zA-Z0-9\\.\\-_]+\" #defName=\"ngModel\"\n                                       required [(ngModel)]=\"name\" (ngModelChange)=\"defExists = defs.indexOf($event) != -1\">\n                                <div class=\"form-error-message error\" *ngIf=\"defExists\">Response definition already exists.</div>\n                                <form-error-message [inputModel]=\"defName\" [type]=\"'required'\">Name is required.</form-error-message>\n                                <form-error-message [inputModel]=\"defName\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"clone()\"\n                            [disabled]=\"!cloneResponseDefinitionForm.form.valid || defExists\">Clone</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandFactory, ICommand, Library, OasDocument, SecurityScheme} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {KeypressUtils} from \"../../../_util/keypress.util\";\n\n\n@Component({\n    selector: \"security-scheme-row\",\n    templateUrl: \"security-scheme-row.component.html\",\n    styleUrls: [\"security-scheme-row.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SecuritySchemeRowComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument;\n    @Input() scheme: SecurityScheme;\n\n    @Output() onEdit: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() onDelete: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Output() onRename: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    protected _editing: boolean = false;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public name(): string {\n        if (this.scheme.getSchemeName()) {\n            return this.scheme.getSchemeName();\n        } else {\n            return \"No name.\";\n        }\n    }\n\n    public hasName(): boolean {\n        return this.scheme.getSchemeName() ? true : false;\n    }\n\n    public schemeType(): string {\n        if (this.scheme.type) {\n            return this.scheme.type;\n        } else {\n            return \"No Type\";\n        }\n    }\n\n    public description(): string {\n        return this.scheme.description\n    }\n\n    public hasDescription(): boolean {\n        return this.scheme.description ? true : false;\n    }\n\n    public isEditing(): boolean {\n        return this._editing;\n    }\n\n    public toggle(): void {\n        this._editing = !this._editing;\n    }\n\n    public edit(): void {\n        this._editing = true;\n    }\n\n    public ok(): void {\n        this._editing = false;\n    }\n\n    public cancel(): void {\n        this._editing = false;\n    }\n\n    public delete(): void {\n        this.onDelete.emit(true);\n    }\n\n    public editScheme(): void {\n        this.onEdit.emit(true);\n    }\n\n    public renameScheme(): void {\n        this.onRename.emit(true);\n    }\n\n    public isValid(): boolean {\n        return true;\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.scheme, \"description\", description);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(this.scheme);\n        path.appendSegment(\"description\", false);\n        this.selectionService.select(path.toString());\n    }\n\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.cancel();\n        }\n    }\n\n}\n","<div class=\"security-scheme\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"expand\" (click)=\"toggle()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditing()\"></span>\n        </div>\n        <div class=\"name\" (click)=\"toggle()\" [class.empty]=\"!hasName()\">\n            <validation-problem [model]=\"scheme\"></validation-problem>\n            <!--<span class=\"fa fa-tag entity-icon\"></span>-->\n            <span class=\"scheme-name\">{{ name() }}</span>\n            <span class=\"scheme-type\">(</span><span>{{ schemeType() }}</span><span>)</span>\n        </div>\n        <div class=\"description\" (click)=\"toggle()\">\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"editScheme()\"><span class=\"fa fa-fw fa-pencil\"></span><span>Edit</span></a></li>\n                    <li><a (click)=\"renameScheme()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"scheme-description\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"scheme.description\" [noValueMessage]=\"'Enter description here.'\"\n                                                [baseNode]=\"scheme\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {Oas20SchemaDefinition, Oas30SchemaDefinition} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\n@Component({\n    selector: \"[definition-item]\",\n    templateUrl: \"definition-item.component.html\",\n    styleUrls: [ \"definition-item.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefinitionItemComponent extends AbstractBaseComponent {\n\n    @Input() schema: Oas20SchemaDefinition | Oas30SchemaDefinition;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns the name of the definition.\n     */\n    public definitionName(): string {\n        return this.schema.getName();\n    }\n\n    /**\n     * Gets the node path for the definition item.\n     */\n    public asNodePath(): string {\n        return ModelUtils.nodeToPath(this.schema);\n    }\n\n    /**\n     * Returns true iff the schema definition is \"imported\".  A definition is imported if it has a $ref\n     * that refers to an external source (anything other than #/ references).\n     */\n    isImported(): boolean {\n        let $ref: string = this.schema.$ref;\n        return ($ref && $ref.indexOf(\"#\") != 0);\n    }\n\n}\n","<span class=\"icon fa fa-fw fa-code\"></span>\n<span class=\"name\">{{ definitionName() }}</span>\n<span class=\"imported label label-info\" *ngIf=\"isImported()\">Imported</span>\n<collaborator-aggregate [nodePath]=\"asNodePath()\"></collaborator-aggregate>\n<validation-aggregate [models]=\"[schema]\"></validation-aggregate>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, ICommand, OasContact, OasDocument} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\n\n\n@Component({\n    selector: \"contact-section\",\n    templateUrl: \"contact-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns true if the API has Contact Info defined.\n     */\n    public hasContact(): boolean {\n        if (this.document.info && this.document.info.contact) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns the current contact object.\n     */\n    public contact(): OasContact {\n        if (this.hasContact()) {\n            return this.document.info.contact;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Called to add empty contact info to the API definition.\n     */\n    public createEmptyContact(): void {\n        let command: ICommand = CommandFactory.createChangeContactCommand(null, null, null);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user chooses to remove the contact info.\n     */\n    public deleteContact(): void {\n        let command: ICommand = CommandFactory.createDeleteContactCommand(this.document.info);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Returns the contact name.\n     */\n    public contactName(): string {\n        if (this.document.info && this.document.info.contact && this.document.info.contact.name) {\n            return this.document.info.contact.name;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the contact email.\n     */\n    public contactEmail(): string {\n        if (this.document.info && this.document.info.contact && this.document.info.contact.email) {\n            return this.document.info.contact.email;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the contact url.\n     */\n    public contactUrl(): string {\n        if (this.document.info && this.document.info.contact && this.document.info.contact.url) {\n            return this.document.info.contact.url;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Called when the user changes the contact name.\n     * @param newValue\n     */\n    public changeContactName(newValue: string): void {\n        if (!newValue) { newValue = null; }\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.contact(), \"name\", newValue);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the contact email.\n     * @param newValue\n     */\n    public changeContactEmail(newValue: string): void {\n        if (!newValue) { newValue = null; }\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.contact(), \"email\", newValue);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the contact url.\n     * @param newValue\n     */\n    public changeContactURL(newValue: string): void {\n        if (!newValue) { newValue = null; }\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.contact(), \"url\", newValue);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"contact\" label=\"CONTACT\"\n         contextHelp=\"Update the information contained in this section to provide users of the API details about how to contact you should they need help.\"\n         collaborationNodePath=\"/info/contact\"\n         [validationModels]=\"[contact()]\">\n    <span actions>\n        <icon-button (onClick)=\"deleteContact()\" [disabled]=\"!hasContact()\" [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete the contact information.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasContact()\">\n            <span>No contact information has been entered.</span>\n            <a (click)=\"createEmptyContact()\">Add contact info</a>\n        </signpost>\n        <div *ngIf=\"hasContact()\">\n            <!-- Contact Name -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"contact()\" property=\"name\"></validation-problem>\n                <span>Name</span>\n            </div>\n            <div class=\"section-field name\">\n                <pf-inline-text-editor [value]=\"contactName()\"\n                                       [labelClass]=\"'contact-name'\"\n                                       [baseNode]=\"document.info.contact\"\n                                       nodePath=\"name\"\n                                       [noValueMessage]=\"'No name provided.'\" (onChange)=\"changeContactName($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Contact Email -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"contact()\" property=\"email\"></validation-problem>\n                <span>Email</span>\n            </div>\n            <div class=\"section-field email\">\n                <pf-inline-text-editor [value]=\"contactEmail()\"\n                                       [labelClass]=\"'contact-email'\"\n                                       [baseNode]=\"document.info.contact\"\n                                       nodePath=\"email\"\n                                       [noValueMessage]=\"'No email provided.'\" (onChange)=\"changeContactEmail($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Contact URL -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"contact()\" property=\"url\"></validation-problem>\n                <span>URL</span>\n            </div>\n            <div class=\"section-field url\">\n                <pf-inline-text-editor [value]=\"contactUrl()\"\n                                       [labelClass]=\"'contact-url'\"\n                                       [baseNode]=\"document.info.contact\"\n                                       nodePath=\"url\"\n                                       [noValueMessage]=\"'No URL provided.'\" (onChange)=\"changeContactURL($event)\"></pf-inline-text-editor>\n            </div>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Oas20PathItem,\n    Oas30PathItem,\n    OasDocument,\n    OasOperation,\n    OasPathItem\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {TopicSubscription} from \"apicurio-ts-core\";\n\n\n@Component({\n    selector: \"operations-section\",\n    templateUrl: \"operations-section.component.html\",\n    styleUrls: [ \"operations-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OperationsSectionComponent extends AbstractBaseComponent {\n\n    @Input() path: Oas30PathItem | Oas20PathItem;\n    protected _nodePath: string;\n\n    public tab: string;\n\n    private _operations: OasOperation[] = [];\n    private _allOperations: OasOperation[] = [];\n    private _collaborationPaths: string[] = [];\n    private _selectionSubscription: TopicSubscription<string>;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n\n        this._selectionSubscription = this.__selectionService.selection().subscribe( selection => {\n            this.setOperationTabFromSelection(selection);\n        });\n    }\n\n    protected onDocumentChange(): void {\n        this.refresh();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes[\"path\"]) {\n            this.refresh();\n            this.setOperationTabFromSelection(this.__selectionService.currentSelection());\n        }\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this._selectionSubscription.unsubscribe();\n    }\n\n    public is20Document(): boolean {\n        return (<OasDocument> this.path.ownerDocument()).is2xDocument();\n    }\n\n    public is3xDocument(): boolean {\n        return (<OasDocument> this.operation().ownerDocument()).is3xDocument();\n    }\n\n    public operations(): OasOperation[] {\n        return this._operations;\n    }\n\n    public collaborationPaths(): string[] {\n        return this._collaborationPaths;\n    }\n\n    private refresh(): void {\n        this._operations = this.pathOperations();\n        this._allOperations = this.allPathOperations();\n        this._collaborationPaths = this.allCollaborationPaths();\n        this._nodePath = ModelUtils.nodeToPath(this.path);\n    }\n\n    private setOperationTabFromSelection(selection: string): void {\n        console.info(\"[OperationsSectionComponent] Setting operation tab from selection: \", selection);\n        this.tab = null;\n        let tabs: string[] = [\n            \"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\"\n        ];\n\n        // Choose a tab based on the selection\n        for (let t of tabs) {\n            let tpath: string = this._nodePath + \"/\" + t;\n            if (selection.indexOf(tpath) === 0) {\n                this.tab = t;\n                this.__changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n\n        // Choose a tab based on the availability of actual operations.  I.e. if the path only has\n        // a \"PUT\" operation, then choose that one.\n        for (let operation of this._operations) {\n            console.info(\"[OperationsSectionComponent] No operations selected, setting tab to: \", operation.getMethod());\n            this.tab = operation.getMethod();\n            this.__changeDetectorRef.markForCheck();\n            return;\n        }\n\n        // If all else fails, just default to \"GET\"\n        this.tab = \"get\";\n        this.__changeDetectorRef.markForCheck();\n    }\n\n    private pathOperations(): OasOperation[] {\n        return this.allPathOperations().filter( operation => operation !== null && operation !== undefined);\n    }\n\n    private allPathOperations(): OasOperation[] {\n        let ops: OasOperation[] = [\n            this.path.get,\n            this.path.put,\n            this.path.post,\n            this.path.delete,\n            this.path.options,\n            this.path.head,\n            this.path.patch,\n            this.path[\"trace\"]\n        ];\n        return ops;\n    }\n\n    private allCollaborationPaths(): string[] {\n        let basePath: string = ModelUtils.nodeToPath(this.path) + \"/\";\n        let paths: string[] = [ \"get\", \"put\", \"post\", \"delete\", \"options\", \"head\", \"patch\", \"trace\" ].map( method => {\n            return basePath + method;\n        });\n        return paths;\n    }\n\n    public operation(): OasOperation {\n        if (this.tab) {\n            return this.path[this.tab];\n        }\n        return null;\n    }\n\n    public operationPath(method: string): string {\n        return this._nodePath + \"/\" + method;\n    }\n\n    public isDefined(method: string): boolean {\n        let operation: OasOperation = this.path[method] as OasOperation;\n        if (operation) {\n            return true;\n        }\n        return false;\n    }\n\n    public isSelected(operation: OasOperation): boolean {\n        return ModelUtils.isSelected(operation);\n    }\n\n    public selectTab(method: string): void {\n        this.__selectionService.select(this._nodePath + \"/\" + method);\n    }\n\n    public hasSelectedOperation(): boolean {\n        return this.isDefined(this.tab);\n    }\n\n    public addOperation(): void {\n        // Create the operation via a command.\n        let command: ICommand = CommandFactory.createNewOperationCommand(this.path.getPath(), this.tab);\n        this.commandService.emit(command);\n        // !!!\n        // And then select the new operation we just created.\n        this.__selectionService.select(ModelUtils.nodeToPath(this.path) + \"/\" + this.tab);\n    }\n\n    public deleteOperation(operation: OasOperation): void {\n        if (!operation) {\n            return;\n        }\n        let command: ICommand = CommandFactory.createDeleteOperationCommand(operation.getMethod(),\n            operation.parent() as OasPathItem);\n        this.commandService.emit(command);\n    }\n\n    public deleteAllOperations(): void {\n        let command: ICommand = CommandFactory.createDeleteAllOperationsCommand(this.path);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"operations\" label=\"OPERATIONS\" [counterItems]=\"operations()\" [inForm]=\"false\"\n         [collaborationNodePath]=\"collaborationPaths()\"\n         contextHelp=\"In this section you can manage the operations defined for the path.\"\n         [validationModels]=\"operations()\">\n    <span actions></span>\n    <div body>\n        <div class=\"operation-tabs\">\n            <div class=\"tabs\">\n                <div class=\"operation-tab get-tab\" [class.selected]=\"tab === 'get'\" [class.enabled]=\"isDefined('get')\" (click)=\"selectTab('get')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('get')\"></collaborator-overlay>\n                        <span>Get</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path.get ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab put-tab\" [class.selected]=\"tab === 'put'\" [class.enabled]=\"isDefined('put')\" (click)=\"selectTab('put')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('put')\"></collaborator-overlay>\n                        <span>Put</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path.put ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab post-tab\" [class.selected]=\"tab === 'post'\" [class.enabled]=\"isDefined('post')\" (click)=\"selectTab('post')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('post')\"></collaborator-overlay>\n                        <span>Post</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path.post ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab delete-tab\" [class.selected]=\"tab === 'delete'\" [class.enabled]=\"isDefined('delete')\" (click)=\"selectTab('delete')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('delete')\"></collaborator-overlay>\n                        <span>Delete</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path.delete ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab options-tab\" [class.selected]=\"tab === 'options'\" [class.enabled]=\"isDefined('options')\" (click)=\"selectTab('options')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('options')\"></collaborator-overlay>\n                        <span>Options</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path.options ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab head-tab\" [class.selected]=\"tab === 'head'\" [class.enabled]=\"isDefined('head')\" (click)=\"selectTab('head')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('head')\"></collaborator-overlay>\n                        <span>Head</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path.head ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab patch-tab\" [class.selected]=\"tab === 'patch'\" [class.enabled]=\"isDefined('patch')\" (click)=\"selectTab('patch')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('patch')\"></collaborator-overlay>\n                        <span>Patch</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path.patch ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab trace-tab\" [class.selected]=\"tab === 'trace'\" [class.enabled]=\"isDefined('trace')\" (click)=\"selectTab('trace')\" *ngIf=\"!is20Document()\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('trace')\"></collaborator-overlay>\n                        <span>Trace</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ path['trace'] ]\"></validation-aggregate>\n                </div>\n            </div>\n            <div class=\"actions\">\n                <div class=\"dropdown dropdown-kebab-pf\">\n                    <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\">\n                        <span class=\"fa fa-ellipsis-v\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu dropdown-menu-right\">\n                        <li [class.disabled]=\"!operation()\"><a (click)=\"deleteOperation(operation())\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete Operation</span></a></li>\n                        <li role=\"separator\" class=\"divider\"></li>\n                        <li><a (click)=\"deleteAllOperations()\"><span class=\"fa fa-fw fa-trash-o\"></span><span>Delete All Operations</span></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"operation\" *ngIf=\"hasSelectedOperation()\">\n            <!-- Info Section -->\n            <operation-info-section [operation]=\"operation()\"></operation-info-section>\n\n            <!-- Servers (3.0 only) -->\n            <servers-section [parent]=\"operation()\" [collapsed]=\"true\" *ngIf=\"is3xDocument()\"\n                             description=\"Configure servers specific to only this Operation.  Once defined, servers indicate where to access the API (e.g. host and port).\"></servers-section>\n\n            <!-- Path Parameters Section -->\n            <path-params-section [parent]=\"operation()\" [path]=\"path\"></path-params-section>\n\n            <!-- Query Parameters Section -->\n            <query-params-section [parent]=\"operation()\" [path]=\"path\"></query-params-section>\n\n            <!-- Header Parameters Section -->\n            <header-params-section [parent]=\"operation()\" [path]=\"path\"></header-params-section>\n\n            <!-- Cookie Parameters Section -->\n            <cookie-params-section [parent]=\"operation()\" [path]=\"path\" *ngIf=\"is3xDocument()\"></cookie-params-section>\n\n            <!-- Request Body Section -->\n            <requestBody-section [operation]=\"operation()\"></requestBody-section>\n\n            <!-- Responses Section -->\n            <responses-section [operation]=\"operation()\"></responses-section>\n\n            <!-- Security Requirements -->\n            <security-requirements-section [parent]=\"operation()\" [global]=\"false\"></security-requirements-section>\n\n            <!-- Vendor Extensions -->\n            <extensions-section [parent]=\"operation()\"></extensions-section>\n\n        </div>\n\n        <div class=\"no-operation\" *ngIf=\"!hasSelectedOperation()\">\n            <no-operation [method]=\"tab\" (add)=\"addOperation()\"></no-operation>\n        </div>\n    </div>\n</section>\n\n\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, ICommand, Oas20SchemaDefinition, Oas30SchemaDefinition, OasSchema} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {AddSchemaDialogData} from \"../../dialogs/add-schema.component\";\n\n\n@Component({\n    selector: \"schemas-section\",\n    templateUrl: \"schemas-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InheritanceSchemasSectionComponent extends AbstractBaseComponent {\n\n    @Input() definition: Oas20SchemaDefinition | Oas30SchemaDefinition;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     * @param editors\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService,\n                private editors: EditorsService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public hasSchemas(): boolean {\n        return this.schemas().length > 0;\n    }\n\n    public schemas(): OasSchema[] {\n        let rval: OasSchema[] = [];\n\n        if (this.inheritanceType() != \"none\") {\n            let schemas: OasSchema[] = this.definition[this.inheritanceType()];\n            schemas.forEach(schema => {\n                if (schema.$ref) {\n                    rval.push(schema);\n                }\n            });\n        }\n\n        return rval;\n    }\n\n    public schemasNodePath(): string {\n        return ModelUtils.nodeToPath(this.definition) + \"/\" + this.inheritanceType();\n    }\n\n    public deleteSchema(schema: OasSchema): void {\n        let command: ICommand = CommandFactory.createDeleteChildSchemaCommand(schema);\n        this.commandService.emit(command);\n    }\n\n    public addSchema(data: AddSchemaDialogData): void {\n        let childSchema: OasSchema = this.definition.createAllOfSchema();\n        childSchema.$ref = data.ref;\n        let command: ICommand = CommandFactory.createAddChildSchemaCommand(this.definition, childSchema, this.inheritanceType());\n        this.commandService.emit(command);\n    }\n\n    public deleteAllSchemas(): void {\n        let command: ICommand = CommandFactory.createDeleteAllChildSchemasCommand(this.definition, this.inheritanceType());\n        this.commandService.emit(command);\n    }\n\n    public inheritanceType(): string {\n        if (this.definition.allOf) {\n            return \"allOf\";\n        }\n        if (this.definition['anyOf']) {\n            return \"anyOf\";\n        }\n        if (this.definition['oneOf']) {\n            return \"oneOf\";\n        }\n\n        return \"none\";\n    }\n\n}\n","<section type=\"schemas\" label=\"INHERITED SCHEMAS\"\n         contextHelp=\"\"\n         [counterItems]=\"schemas()\"\n         [collaborationNodePath]=\"schemasNodePath()\"\n         [validationModels]=\"schemas()\">\n                    <span actions>\n                        <icon-button (onClick)=\"addSchemaDialog.open(definition.ownerDocument())\" [pullRight]=\"true\" type=\"add\"\n                                     [title]=\"'Add a schema (for inheritance).'\"></icon-button>\n                        <icon-button (onClick)=\"deleteAllSchemas()\" [disabled]=\"!hasSchemas()\" [pullRight]=\"true\" type=\"delete\"\n                                     [title]=\"'Delete all schemas.'\"></icon-button>\n                    </span>\n    <div body>\n        <!-- Warning when no schemas exist -->\n        <signpost *ngIf=\"!hasSchemas()\">\n            <span>No schemas have been selected.</span>\n            <a (click)=\"addSchemaDialog.open(definition.ownerDocument())\">Add a schema</a>\n        </signpost>\n\n        <!-- The list of schema schemas -->\n        <div class=\"container-fluid schemas typed-item-list\">\n            <schema-row *ngFor=\"let schema of schemas()\" [item]=\"schema\"\n                          (onDelete)=\"deleteSchema(schema)\"></schema-row>\n        </div>\n    </div>\n</section>\n<add-schema-dialog #addSchemaDialog (onAdd)=\"addSchema($event)\"></add-schema-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Oas20SchemaDefinition,\n    Oas30SchemaDefinition,\n    Aai20SchemaDefinition,\n    OasDocument,\n    AaiDocument,\n    Node,\n    OasOperation,\n    OasPathItem, IDefinition, OasSchema, AaiSchema, Oas20Schema, Oas30Schema, AaiServer\n} from \"@apicurio/data-models\";\nimport {Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewEncapsulation} from \"@angular/core\";\nimport {KeypressUtils} from \"../../_util/keypress.util\";\n\nexport interface EntityEditorEvent<T extends Node> {\n    entity: T;\n}\n\nexport interface IEntityEditorHandler<T extends Node, E extends EntityEditorEvent<T>> {\n    onSave(event: E): void;\n    onCancel(event: E): void;\n}\n\n\n/**\n * Base class for all entity editors.  T represents the type of entity being edited.  E represents\n * the event data structure.\n */\nexport abstract class EntityEditor<T extends Node, E extends EntityEditorEvent<T>> {\n\n    public _isOpen: boolean = false;\n    public _mode: string = \"create\";\n\n    public handler: IEntityEditorHandler<T, E>;\n    public context: OasDocument | OasPathItem | OasOperation | Oas30SchemaDefinition | Oas20SchemaDefinition | AaiDocument | Aai20SchemaDefinition | Oas20Schema | Oas30Schema | AaiServer;\n    public entity: T;\n\n    /**\n     * Called to open the editor.\n     * @param handler\n     * @param context\n     * @param entity\n     */\n    public open(handler: IEntityEditorHandler<T, E>,\n                context: OasDocument | OasPathItem | OasOperation | Oas30SchemaDefinition | Oas20SchemaDefinition | AaiDocument | Aai20SchemaDefinition | Oas20Schema | Oas30Schema | AaiServer,\n                entity?: T): void {\n        this.context = context;\n        this.handler = handler;\n        this.entity = entity;\n        if (entity) {\n            this._mode = \"edit\";\n            this.initializeModelFromEntity(entity);\n        } else {\n            this._mode = \"create\";\n            this.initializeModel();\n        }\n        this._isOpen = true;\n        this.doAfterOpen();\n    }\n\n    /**\n     * Called at the end of the open() method.  Subclasses can override this to perform specific work.\n     */\n    public doAfterOpen(): void {\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public abstract initializeModelFromEntity(entity: T): void;\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public abstract initializeModel(): void;\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public abstract isValid(): boolean;\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public abstract entityEvent(): E;\n\n    /**\n     * Called to close the dialog.\n     */\n    public close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"save\".\n     */\n    public save(): void {\n        if (!this.isValid()) {\n            return;\n        }\n        let event: E = this.entityEvent();\n        this.close();\n        this.handler.onSave(event);\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    public cancel(): void {\n        let event: E = this.entityEvent();\n        this.close();\n        this.handler.onCancel(event);\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     */\n    public isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * @param event\n     */\n    public onKeypress(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * Returns true if the context is the document (global).\n     */\n    public isGlobalContext(): boolean {\n        return this.context.ownerDocument() === this.context;\n    }\n\n}\n\n\n@Component({\n    selector: \"entity-editor\",\n    templateUrl: \"entity-editor.component.html\",\n    styleUrls: [\"entity-editor.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class EntityEditorComponent implements OnChanges {\n\n    @Input() entityType: string = \"unknown\";\n    @Input() heading: string = \"Configure the Entity\";\n    @Input() context: OasDocument | OasPathItem | OasOperation | AaiDocument;\n    @Input() showRequiredFieldsMessage: boolean = false;\n    @Input() valid: boolean = true;\n    @Input() dirty: boolean = false;\n\n    @Output() onSave: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onClose: EventEmitter<void> = new EventEmitter<void>();\n\n    public contextIs: string = \"document\";\n    protected _expandedContext: any = {\n        document: null,\n        pathItem: null,\n        operation: null,\n        dataType: null\n    };\n\n    /**\n     * Called when the @Input changes.\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes[\"context\"]) {\n            this.expandContext(this.context);\n        }\n    }\n\n    /**\n     * Figures out what the context is based on what is passed to it.\n     * @param context\n     */\n    public expandContext(context: OasDocument | OasPathItem | OasOperation | Oas20SchemaDefinition | Oas30SchemaDefinition | AaiDocument | Aai20SchemaDefinition | Oas20Schema | Oas30Schema): void {\n        if (context instanceof OasOperation) {\n            this.contextIs = \"operation\";\n            this._expandedContext.operation = context as OasOperation;\n            this._expandedContext.pathItem = context.parent() as OasPathItem;\n            this._expandedContext.document = context.ownerDocument();\n        } else if (context instanceof OasPathItem) {\n            this.contextIs = \"pathItem\";\n            this._expandedContext.pathItem = context as OasPathItem;\n            this._expandedContext.document = context.ownerDocument();\n        } else if (context.ownerDocument() === context) {\n            this.contextIs = \"document\";\n            this._expandedContext.document = context as OasDocument | AaiDocument;\n        } else if (context instanceof OasSchema) {\n            this.contextIs = \"dataType\";\n            this._expandedContext.dataType = context as Oas20SchemaDefinition | Oas30SchemaDefinition;\n        } else if (context instanceof AaiSchema) {\n            this.contextIs = \"dataType\";\n            this._expandedContext.dataType = context as Aai20SchemaDefinition;\n        } else {\n            console.warn(\"[EntityEditorComponent] Unknown/unexpected context: \", context);\n        }\n    }\n\n    /**\n     * Gets the context path item (if any).\n     */\n    public pathItem(): OasPathItem {\n        return this._expandedContext.pathItem;\n    }\n\n    /**\n     * Gets the context operation (if any).\n     */\n    public operation(): OasOperation {\n        return this._expandedContext.operation;\n    }\n\n    /**\n     * Gets the data type (if any).\n     */\n    public dataType(): Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition {\n        return this._expandedContext.dataType;\n    }\n\n    /**\n     * Gets the data type name.\n     */\n    public dataTypeName(): string {\n        if (this._expandedContext.dataType) {\n            return (<IDefinition> this._expandedContext.dataType).getName();\n        }\n        return null;\n    }\n\n    /**\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.onClose.emit();\n        }\n    }\n\n}\n","<div class=\"entity-editor {{ entityType }}-entity-editor container-fluid\" (window:keydown)=\"onGlobalKeyDown($event)\">\n    <a class=\"close-button\" (click)=\"onClose.emit()\"><span class=\"pficon pficon-close\"></span></a>\n    <form id=\"entity-editor-form\" class=\"entity-editor-form\" #entityEditorForm=\"ngForm\">\n        <div class=\"row-fluid header\">\n            <div class=\"col-md-12\">\n                <h1 class=\"title\">{{ heading }}</h1>\n            </div>\n            <div class=\"context\" *ngIf=\"contextIs === 'operation' || contextIs === 'pathItem'\">\n                <div class=\"col-md-6 path\">\n                    <div class=\"context-label\">Path</div>\n                    <div path-item class=\"context-value\" [path]=\"pathItem().getPath()\"></div>\n                </div>\n                <div class=\"col-md-6 operation\" *ngIf=\"contextIs === 'operation'\">\n                    <span class=\"context-label\">Operation</span>\n                    <span class=\"label\"\n                          [class.label-info]=\"operation().getMethod() !== 'get' && operation().getMethod() !== 'post' && operation().getMethod() !== 'delete'\"\n                          [class.label-success]=\"operation().getMethod() === 'get'\"\n                          [class.label-warning]=\"operation().getMethod() === 'post'\"\n                          [class.label-danger]=\"operation().getMethod() === 'delete'\">{{ operation().getMethod() }}</span>\n                </div>\n            </div>\n            <div class=\"context\" *ngIf=\"contextIs === 'dataType'\">\n                <div class=\"col-md-6 dataType\">\n                    <div class=\"context-label\">Data Type</div>\n                    <div class=\"context-value\">\n                        <span class=\"fa fa-code\"></span>\n                        <span>{{ dataTypeName() }}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row-fluid required-fields-notification divider-section\">\n            <div class=\"col-md-12\">\n                <div class=\"action-header\">\n                    <div class=\"notice\">\n                        <div *ngIf=\"showRequiredFieldsMessage\" class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                    </div>\n                    <div class=\"actions\">\n                        <button class=\"btn btn-default\" (click)=\"onClose.emit()\">Cancel</button>\n                        <button class=\"btn btn-primary\" (click)=\"onSave.emit()\" [disabled]=\"!valid || !entityEditorForm.valid\">Save</button>\n                    </div>\n                </div>\n                <hr />\n            </div>\n        </div>\n\n        <ng-content></ng-content>\n\n        <div class=\"row-fluid divider-section\">\n            <div class=\"col-md-12\">\n                <hr />\n            </div>\n        </div>\n        <div class=\"row-fluid actions-section\">\n            <div class=\"col-md-12\">\n                <div class=\"actions\">\n                    <button class=\"btn btn-default\" (click)=\"onClose.emit()\">Cancel</button>\n                    <button class=\"btn btn-primary\" (click)=\"onSave.emit()\" [disabled]=\"!valid || !entityEditorForm.valid\">Save</button>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {NgModule} from \"@angular/core\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\nimport {AppComponent} from \"./app.component\";\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {ModalModule} from \"ngx-bootstrap/modal\";\nimport {BsDropdownModule} from \"ngx-bootstrap/dropdown\";\nimport {LoggerService} from \"./services/logger.service\";\nimport {ConfigService} from \"./services/config.service\";\nimport {WindowRef} from \"./services/window-ref.service\";\nimport {ApicurioEditorModule} from \"./editor.module\";\nimport {AsyncApiEditorComponent} from \"./components/editors/asyncapi-editor.component\";\nimport {OpenApiEditorComponent} from \"./components/editors/openapi-editor.component\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        OpenApiEditorComponent,\n        AsyncApiEditorComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        HttpClientModule,\n        ModalModule.forRoot(),\n        BsDropdownModule.forRoot(),\n        ApicurioEditorModule\n    ],\n    providers: [\n        WindowRef,\n        LoggerService,\n        ConfigService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component} from \"@angular/core\";\nimport {\n    Oas20SchemaDefinition,\n    Oas30SchemaDefinition,\n    Aai20SchemaDefinition,\n    OasDocument,\n    AaiDocument,\n    DocumentType,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {FindSchemaDefinitionsVisitor, FindAaiSchemaDefinitionsVisitor} from \"../../_visitors/schema-definitions.visitor\";\nimport {CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\n\n\nexport interface DataTypeData {\n    name: string;\n    description: string;\n    example: string;\n    template: string;\n}\n\nexport interface DataTypeEditorEvent extends EntityEditorEvent<Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition> {\n    data: DataTypeData;\n}\n\nexport interface IDataTypeEditorHandler extends IEntityEditorHandler<Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition, DataTypeEditorEvent> {\n    onSave(event: DataTypeEditorEvent): void;\n    onCancel(event: DataTypeEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"data-type-editor\",\n    templateUrl: \"data-type-editor.component.html\",\n    styleUrls: [\"data-type-editor.component.css\"]\n})\nexport class DataTypeEditorComponent extends EntityEditor<Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition, DataTypeEditorEvent> {\n\n    protected exampleValid: boolean = true;\n    protected exampleFormattable: boolean = false;\n\n    defs: string[] = [];\n    defExists: boolean = false;\n\n    public model: DataTypeData = {\n        name: \"\",\n        description: \"\",\n        example: null,\n        template: null\n    };\n\n    public doAfterOpen(): void {\n        this.defs = [];\n        this.defExists = false;\n        if (this.context.ownerDocument().getDocumentType() == DocumentType.asyncapi2) {\n            let definitions: Aai20SchemaDefinition[] = this.getAaiDefinitions(<AaiDocument> this.context.ownerDocument());\n            this.defs = definitions.map(definition => FindAaiSchemaDefinitionsVisitor.definitionName(definition));\n        } else {\n            let definitions: (Oas20SchemaDefinition | Oas30SchemaDefinition)[] = this.getDefinitions(<OasDocument> this.context.ownerDocument());\n            this.defs = definitions.map(definition => FindSchemaDefinitionsVisitor.definitionName(definition));\n        }\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n        // Note: nothing to do here because data types aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\",\n            example: null,\n            template: null\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.defExists && this.exampleValid;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): DataTypeEditorEvent {\n        let event: DataTypeEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    get example() {\n        return this.model.example;\n    }\n\n    set example(definition: string) {\n        this.model.example = definition;\n        if (this.model.example === \"\") {\n            this.exampleValid = true;\n            this.exampleFormattable = false;\n        } else {\n            try {\n                JSON.parse(this.model.example);\n                this.exampleValid = true;\n                this.exampleFormattable = true;\n            } catch (e) {\n                this.exampleValid = false;\n                this.exampleFormattable = false;\n            }\n        }\n    }\n\n    /**\n     * Returns true if it's possible to format the example definition (it must be non-null and\n     * syntactically valid).\n     * @return\n     */\n    public isExampleDefinitionFormattable(): boolean {\n        return this.exampleFormattable;\n    }\n\n    /**\n     * Returns true if the example definition added by the user in the Add Definition modal\n     * dialog is valid (syntactically).\n     * @return\n     */\n    public isExampleDefinitionValid(): boolean {\n        return this.exampleValid;\n    }\n\n    /**\n     * Called to format the example definition.\n     */\n    public formatExampleDefinition(): void {\n        let jsObj: any = JSON.parse(this.example);\n        let nsrcStr: string = JSON.stringify(jsObj, null, 4);\n        this.example = nsrcStr;\n    }\n\n    public exampleEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    public exampleEditorMode(): CodeEditorMode {\n        return CodeEditorMode.JSON;\n    }\n\n    private getDefinitions(document: OasDocument): (Oas20SchemaDefinition | Oas30SchemaDefinition)[] {\n        let vizzy: FindSchemaDefinitionsVisitor = new FindSchemaDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedSchemaDefinitions();\n    }\n\n    private getAaiDefinitions(document: AaiDocument): (Aai20SchemaDefinition)[] {\n        let vizzy: FindAaiSchemaDefinitionsVisitor = new FindAaiSchemaDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedSchemaDefinitions();\n    }\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"dataType\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define a New Data Type\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter a name and description for the new data type.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"dt_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"dt_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique data type name.\" pattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                           (ngModelChange)=\"defExists = defs.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"defExists\">Data type named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row-fluid divider-section\">\n        <div class=\"col-md-12\">\n            <hr />\n        </div>\n    </div>\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>2. Enter JSON Example <span class=\"optional empty\">(optional)</span></h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter a JSON formatted example of the data type that will be used to bootstrap the Data Type's\n                    schema properties.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">JSON Example</label>\n                <div>\n                    <code-editor [theme]=\"exampleEditorTheme()\"\n                                 [mode]=\"exampleEditorMode()\"\n                                 [debounceTime]=\"200\"\n                                 [(text)]=\"example\"\n                                 [editorStyle]=\"{ position: 'relative', height: '200px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                    <button class=\"btn btn-default btn-xs\" type=\"button\"\n                            [disabled]=\"!isExampleDefinitionFormattable()\" (click)=\"formatExampleDefinition()\">\n                        <span class=\"fa fa-fw fa-indent\"></span>\n                        <span>Format</span>\n                    </button>\n                </div>\n            </div>\n\n        </div>\n    </div>\n    <div class=\"row-fluid divider-section\">\n        <div class=\"col-md-12\">\n            <hr />\n        </div>\n    </div>\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>3. Choose to create a REST Resource with the Data Type <span class=\"optional empty\">(optional)</span></h3>\n            <p class=\"explanation\">\n                <span>\n                    Create the new Data Type with some additional paths and operations automatically generated.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group create-option-group\">\n                <div class=\"create-option\" (click)=\"model.template = null\" [class.selected]=\"model.template === null\">\n                    <span class=\"check fa\"\n                          [class.fa-circle-o]=\"model.template !== null\"\n                          [class.fa-dot-circle-o]=\"model.template === null\"></span>\n                    <span class=\"icon fa fa-ban\"></span>\n                    <span class=\"option-label\">No Resource</span>\n                </div>\n                <div class=\"create-option\" (click)=\"model.template = 'resource'\" [class.selected]=\"model.template === 'resource'\">\n                    <span class=\"check fa\"\n                          [class.fa-circle-o]=\"model.template !== 'resource'\"\n                          [class.fa-dot-circle-o]=\"model.template === 'resource'\"></span>\n                    <span class=\"icon fa fa-align-left\"></span>\n                    <span class=\"option-label\">REST Resource</span>\n                </div>\n                <div class=\"create-option-divider\">\n                </div>\n                <div class=\"create-option-explanation\">\n                    <span *ngIf=\"model.template === null\">No additional paths or operations will be generated when creating this Data Type - only the Data Type itself will be created.</span>\n                    <span *ngIf=\"model.template === 'resource'\">This will cause paths and operations to be created for the new Data Type, using a standard REST resource pattern and based on the name of the Data Type.</span>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    Library,\n    Oas30Example,\n    Oas30Parameter,\n    OasDocument,\n    OasOperation,\n    OasParameter,\n    OasPathItem,\n    Schema,\n    SimplifiedParameterType,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {EditExampleEvent} from \"../../dialogs/edit-example.component\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\n\n\n@Component({\n    selector: \"path-param-row\",\n    templateUrl: \"path-param-row.component.html\",\n    styleUrls: [ \"path-param-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PathParamRowComponent extends AbstractRowComponent<OasParameter, SimplifiedParameterType> {\n\n    private _overriddenParam: OasParameter;\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n\n    private overrideFlag: boolean;\n    private missingFlag: boolean;\n    private _parentType: string;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        this._model = SimplifiedParameterType.fromParameter(this.item as any);\n        this.missingFlag = this.item.getAttribute(\"missing\") === true;\n        this._overriddenParam = this.getOverriddenParam(this.item);\n        this.overrideFlag = this._overriddenParam !== null;\n        this._parentType = this.detectParentType();\n    }\n\n    public isParentOperation(): boolean {\n        return this._parentType === \"operation\";\n    }\n\n    public isParentPath(): boolean {\n        return this._parentType === \"pathItem\";\n    }\n\n    public isParameter(): boolean {\n        return true;\n    }\n\n    public hasDescription(): boolean {\n        if (this.item.description) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public is3xDocument(): boolean {\n        return (<OasDocument> this.item.ownerDocument()).is3xDocument();\n    }\n\n    public hasExamples(): boolean {\n        if (this.item instanceof Oas30Parameter) {\n            return this.paramExamples().length > 0;\n        }\n        return false;\n    }\n\n    public paramExamples(): Oas30Example[] {\n        return <any>(<Oas30Parameter> this.item).getExamples();\n    }\n\n    public exampleValue(example: Oas30Example): string {\n        let evalue: any = example.value;\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public isEditingDescription(): boolean {\n        return this.isEditingTab(\"description\");\n    }\n\n    public isEditingSummary(): boolean {\n        return this.isEditingTab(\"summary\");\n    }\n\n    public isEditingExamples(): boolean {\n        return this.isEditingTab(\"examples\");\n    }\n\n    public toggleDescription(): void {\n        if (this.isOverridable() || this.isMissing()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"description\");\n    }\n\n    public toggleSummary(): void {\n        if (this.isOverridable() || this.isMissing()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"summary\");\n    }\n\n    public toggleExamples(): void {\n        if (this.isOverridable() || this.isMissing()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"examples\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public displayType(): SimplifiedParameterType {\n        return SimplifiedParameterType.fromParameter(this.item as any);\n    }\n\n    public displayExamples(): string {\n        if (this.hasExamples()) {\n            return `${this.paramExamples().length} example(s) defined.`;\n        } else {\n            return \"No examples defined.\"\n        }\n    }\n\n    public rename(): void {\n        // TODO implement this!\n        alert(\"Not yet implemented.\");\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model().required = newValue === \"required\";\n        let command: ICommand = CommandFactory.createChangePropertyCommand<boolean>(this.item, \"required\", this.model().required);\n        this.commandService.emit(command);\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedParameterType = new SimplifiedParameterType();\n        nt.required = this.model().required;\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeParameterTypeCommand(this.item.ownerDocument().getDocumentType(),\n            this.item as any, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n    public addExample(exampleData: any): void {\n        var param = <Oas30Parameter> this.item;\n        let command: ICommand = CommandFactory.createAddParameterExampleCommand(param,\n            exampleData.value, exampleData.name, null, null);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.item);\n        nodePath.appendSegment(\"examples\", false);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public deleteExample(example: Oas30Example): void {\n        console.info(\"[PathParamRowComponent] Deleting an example of a path parameter.\");\n        let command: ICommand = CommandFactory.createDeleteParameterExampleCommand(example);\n        this.commandService.emit(command);\n    }\n\n    public deleteAllExamples(): void {\n        var param = <Oas30Parameter> this.item;\n        let command: ICommand = CommandFactory.createDeleteAllParameterExamplesCommand(param);\n        this.commandService.emit(command);\n    }\n\n    public editExample(event: EditExampleEvent): void {\n        console.info(\"[PathParamRowComponent] Changing the value of a Parameter example.\");\n        if (this.item.ownerDocument().getDocumentType() === DocumentType.openapi3) {\n            let command: ICommand = CommandFactory.createSetParameterExampleCommand(<Oas30Parameter>this.item,\n                event.value, event.example.getName());\n            this.commandService.emit(command);\n        }\n    }\n\n    public schemaForExample(): Schema {\n        var param = <Oas30Parameter> this.item;\n        return param.schema;\n    }\n\n    public create(): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.item.parent() as any,\n            this.item.name, \"path\", null, null, false);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.item.parent());\n        let index: number = (this.item.parent() as any).parameters.findIndex(p => p.name === this.item.name); // TODO hackish\n        nodePath.appendSegment(\"parameters\", false);\n        nodePath.appendSegment(String(index), true);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public override(): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.item.parent() as any,\n            this.item.name, \"path\", null, null, true);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.item.parent());\n        let index: number = (this.item.parent() as any).parameters.findIndex(p => p.name === this.item.name); // TODO hackish\n        nodePath.appendSegment(\"parameters\", false);\n        nodePath.appendSegment(String(index), true);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public isMissing(): boolean {\n        return this.missingFlag && !this.overrideFlag;\n    }\n\n    public isExists(): boolean {\n        return !this.missingFlag;\n    }\n\n    public isOverride(): boolean {\n        return !this.missingFlag && this.overrideFlag;\n    }\n\n    public isOverridable(): boolean {\n        return this.isInherited();\n    }\n\n    public isInherited(): boolean {\n        return this.missingFlag && this.overrideFlag;\n    }\n\n    public isLocalOnly(): boolean {\n        return !this.overrideFlag && !this.missingFlag;\n    }\n\n    public getOverriddenParam(param: OasParameter): OasParameter {\n        let viz: DetectOverrideVisitor = new DetectOverrideVisitor(param);\n        param.parent().accept(viz);\n        return viz.overriddenParam;\n    }\n\n    private detectParentType(): string {\n        let viz: DetectParentTypeVisitor = new DetectParentTypeVisitor();\n        this.item.parent().accept(viz);\n        return viz.parentType;\n    }\n\n}\n\n\nclass DetectOverrideVisitor extends CombinedVisitorAdapter {\n\n    public overriddenParam: OasParameter = null;\n\n    constructor(private param: OasParameter) {\n        super();\n    }\n\n    public visitOperation(node: OasOperation): void {\n        this.overriddenParam = (<OasPathItem>node.parent()).getParameter(this.param.in, this.param.name) as OasParameter;\n    }\n\n}\n\n\nclass DetectParentTypeVisitor extends CombinedVisitorAdapter {\n\n    public parentType: string = null;\n\n    public visitOperation(node: OasOperation): void {\n        this.parentType = \"operation\";\n    }\n\n    public visitPathItem(node: OasPathItem): void {\n        this.parentType = \"pathItem\";\n    }\n\n}\n","<div class=\"path-parameter\" [class.expanded]=\"isEditing()\" [class.override]=\"isOverride()\"\n     [class.overridable]=\"isOverridable()\" [class.missing]=\"isMissing()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"apicurio-icon-undefined-d icon-override\" *ngIf=\"isParentOperation() && isMissing()\"\n                  title=\"Parameter in path spec but is not defined.\"></span>\n            <span class=\"apicurio-icon-override icon-override\" *ngIf=\"isParentOperation() && isOverride()\"\n                  title=\"Overrides a parameter defined at the Path level.\"></span>\n            <span class=\"apicurio-icon-inherit-d icon-override\" *ngIf=\"isParentOperation() && isInherited()\"\n                  title=\"Path parameter inherited from the Path level.\"></span>\n            <span class=\"apicurio-icon-local-d icon-override\" *ngIf=\"isParentOperation() && isLocalOnly()\"\n                  title=\"Path parameter defined in the operation only.\"></span>\n            <span class=\"name-label\" title=\"{{ item.name }}\">{{ item.name }}</span>\n        </div>\n        <div class=\"description\" (click)=\"toggleDescription()\" [class.selected]=\"isEditingDescription()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingDescription()\"></span>\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"summary\" (click)=\"toggleSummary()\" [class.selected]=\"isEditingSummary()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingSummary()\"></span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"examples\" (click)=\"toggleExamples()\" [class.selected]=\"isEditingExamples()\" *ngIf=\"is3xDocument()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingExamples()\"></span>\n            <span [class.empty]=\"!hasExamples()\"> {{ displayExamples() }}</span>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\" *ngIf=\"!isMissing() && !isOverridable()\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n            <button *ngIf=\"isMissing()\" type=\"button\" class=\"btn btn-primary btn-xs btn-create\"\n                    title=\"The path parameter is required but not declared.  Create it now.\"\n                    (click)=\"create()\"><span class=\"fa fa-fw fa-plus\"></span><span class=\"btn-label\">Create</span></button>\n            <button *ngIf=\"isOverridable()\" (click)=\"override()\" title=\"Override the path parameter.\"\n                    class=\"btn btn-default btn-xs btn-override\">Override</button>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"param-description\" *ngIf=\"isEditingDescription()\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'No description.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                    <div class=\"param-content\" *ngIf=\"isEditingSummary()\">\n                        <div class=\"param-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"isParameter()\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                    <div class=\"param-examples\" *ngIf=\"isEditingExamples()\">\n                        <div class=\"form-label\">Examples</div>\n                        <signpost *ngIf=\"!hasExamples()\">\n                            <span>No examples have been defined.</span>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </signpost>\n                        <div *ngIf=\"hasExamples()\">\n                            <table class=\"table table-striped table-bordered table-examples\">\n                                <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th class=\"pre-actions\">Example</th>\n                                    <th class=\"actions\"></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let example of paramExamples()\">\n                                    <td class=\"name\">\n                                        <validation-problem [model]=\"example\"></validation-problem>\n                                        <span>{{ example.getName() }}</span>\n                                    </td>\n                                    <td class=\"value pre-actions\">\n                                        <span>{{ exampleValue(example) }}</span>\n                                    </td>\n                                    <td class=\"actions\">\n                                        <div>\n                                            <icon-button (onClick)=\"deleteExample(example)\" [pullRight]=\"true\" type=\"delete\"\n                                                            [title]=\"'Delete example.'\"></icon-button>\n                                            <icon-button (onClick)=\"editExampleDialog.open(example)\" [pullRight]=\"true\" type=\"edit\"\n                                                            [title]=\"'Edit example.'\"></icon-button>\n                                        </div>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <add-example-dialog #addExampleDialog (onAdd)=\"addExample($event)\" [schema]=\"schemaForExample()\"></add-example-dialog>\n    <edit-example-dialog #editExampleDialog (onEdit)=\"editExample($event)\" [schema]=\"schemaForExample()\"></edit-example-dialog>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @author vvilerio\n */\nimport {Component} from \"@angular/core\";\nimport {\n    AaiMessage,\n    AaiDocument,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {FindMessageDefinitionsVisitor} from \"../../_visitors/message-definitions.visitor\";\n\n\nexport interface MessageData {\n    name: string;\n    description: string;\n}\n\nexport interface OneOfInMessageEditorEvent extends EntityEditorEvent<AaiMessage> {\n    data: MessageData;\n}\n\nexport interface IOneOfInMessageEditorHandler extends IEntityEditorHandler<AaiMessage, OneOfInMessageEditorEvent> {\n    onSave(event: OneOfInMessageEditorEvent): void;\n    onCancel(event: OneOfInMessageEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"oneOfMessage-editor\",\n    templateUrl: \"oneof-in-message-editor.component.html\",\n    styleUrls: [\"oneof-in-message-editor.component.css\"]\n})\nexport class OneOfInMessageEditorComponent extends EntityEditor<AaiMessage, OneOfInMessageEditorEvent> {\n\n    messages: string[] = [];\n    messageExists: boolean = false;\n\n    public model: MessageData = {\n        name: \"\",\n        description: \"\"\n    };\n\n    public doAfterOpen(): void {\n        this.messages = [];\n        this.messageExists = false;\n        let mess: AaiMessage[] = this.getMessages(<AaiDocument> this.context.ownerDocument());\n        this.messages = mess.map(definition => FindMessageDefinitionsVisitor.definitionName(definition));\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: AaiMessage): void {\n        // Note: nothing to do here because data types aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\"\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.messageExists;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): OneOfInMessageEditorEvent {\n        let event: OneOfInMessageEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    private getMessages(document: AaiDocument): AaiMessage[] {\n        let vizzy: FindMessageDefinitionsVisitor = new FindMessageDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedMessageDefinitions()\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"message\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define a New Message\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter a name and description for the new message.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"rsp_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"rsp_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique message name.\" pattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                           (ngModelChange)=\"messageExists = messages.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"messageExists\">Message named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ViewEncapsulation} from \"@angular/core\";\nimport {\n    Aai20SchemaDefinition,\n    DocumentType,\n    IOasParameterParent,\n    Oas20Parameter,\n    Oas20SchemaDefinition,\n    Oas30Parameter,\n    Oas30SchemaDefinition,\n    OasDocument,\n    OasParameter,\n    ReferenceUtil,\n    SimplifiedParameterType,\n    SimplifiedType,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {FindSchemaDefinitionsVisitor} from \"../../_visitors/schema-definitions.visitor\";\nimport {DIVIDER, DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\nexport interface ParameterData {\n    name: string;\n    description: string;\n    type: SimplifiedParameterType;\n}\n\nexport interface ParameterEditorEvent extends EntityEditorEvent<Oas20Parameter | Oas30Parameter> {\n    data: ParameterData;\n}\n\nexport interface IParameterEditorHandler extends IEntityEditorHandler<Oas20Parameter | Oas30Parameter, ParameterEditorEvent> {\n    onSave(event: ParameterEditorEvent): void;\n    onCancel(event: ParameterEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"parameter-editor\",\n    templateUrl: \"parameter-editor.component.html\",\n    styleUrls: [\"parameter-editor.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ParameterEditorComponent extends EntityEditor<Oas20Parameter | Oas30Parameter, ParameterEditorEvent> {\n\n    params: string[] = [];\n    paramExists: boolean = false;\n\n    model: ParameterData;\n    _paramType: string = \"query\";\n\n    public setParamType(paramType: string): void {\n        this._paramType = paramType;\n    }\n\n    public doAfterOpen(): void {\n        this.params = [];\n        this.paramExists = false;\n        let parameters: OasParameter[] = this.getParams();\n        this.params = parameters.map(p => p.name);\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: Oas20Parameter | Oas30Parameter): void {\n        // Note: nothing to do here because parameters aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\",\n            type: new SimplifiedParameterType()\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.paramExists;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): ParameterEditorEvent {\n        let event: ParameterEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    /**\n     * Gets the array of parameters for the current context.\n     */\n    private getParams(): OasParameter[] {\n        return ((<IOasParameterParent>this.context).getParametersIn(this._paramType));\n    }\n\n    public isRequired(): boolean {\n        return this.model.type.required;\n    }\n\n    public required(): string {\n        return this.isRequired() ? \"required\" : \"not-required\";\n    }\n\n    public requiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public type(): string {\n        if (!ObjectUtils.isNullOrUndefined(this.model.type)) {\n            if (this.model.type.isEnum()) {\n                return \"enum\";\n            }\n            return ObjectUtils.undefinedAsNull(this.model.type.type);\n        }\n        return null;\n    }\n\n    public typeOptions(): DropDownOption[] {\n        let options: DropDownOption[] = [\n            new DropDownOptionValue(\"Array\", \"array\"),\n            new DropDownOptionValue(\"Enum\", \"enum\"),\n            DIVIDER,\n            new DropDownOptionValue(\"String\", \"string\"),\n            new DropDownOptionValue(\"Integer\", \"integer\"),\n            new DropDownOptionValue(\"Boolean\", \"boolean\"),\n            new DropDownOptionValue(\"Number\", \"number\")\n        ];\n        this.addRefTypes(options);\n\n        return options;\n    }\n\n    public typeOf(): string {\n        if (this.model.type && this.model.type.of) {\n            return ObjectUtils.undefinedAsNull(this.model.type.of.type);\n        }\n        return null;\n    }\n\n    public typeOfOptions(): DropDownOption[] {\n        let options: DropDownOption[] = [\n            new DropDownOptionValue(\"String\", \"string\"),\n            new DropDownOptionValue(\"Integer\", \"integer\"),\n            new DropDownOptionValue(\"Boolean\", \"boolean\"),\n            new DropDownOptionValue(\"Number\", \"number\")\n        ];\n\n        return options;\n    }\n\n    public typeAs(): string {\n        if (ObjectUtils.isNullOrUndefined(this.model.type)) {\n            return null;\n        }\n        if (this.model.type.isArray() && this.model.type.of && this.model.type.of.isSimpleType()) {\n            return ObjectUtils.undefinedAsNull(this.model.type.of.as);\n        }\n        if (this.model.type.isSimpleType()) {\n            return ObjectUtils.undefinedAsNull(this.model.type.as);\n        }\n        return null;\n    }\n\n    public typeAsOptions(): DropDownOption[] {\n        let options: DropDownOption[];\n        let st: SimplifiedType = this.model.type;\n        if (this.model.type && this.model.type.isArray() && this.model.type.of && this.model.type.of.isSimpleType()) {\n            st = this.model.type.of;\n        }\n        if (st.type === \"string\") {\n            options = [\n                new DropDownOptionValue(\"String\", null),\n                new DropDownOptionValue(\"Byte\", \"byte\"),\n                new DropDownOptionValue(\"Binary\", \"binary\"),\n                new DropDownOptionValue(\"Date\", \"date\"),\n                new DropDownOptionValue(\"DateTime\", \"date-time\"),\n                new DropDownOptionValue(\"Password\", \"password\")\n            ];\n        } else if (st.type === \"integer\") {\n            options = [\n                new DropDownOptionValue(\"Integer\", null),\n                new DropDownOptionValue(\"32-Bit Integer\", \"int32\"),\n                new DropDownOptionValue(\"64-Bit Integer\", \"int64\")\n            ];\n        } else if (st.type === \"number\") {\n            options = [\n                new DropDownOptionValue(\"Number\", null),\n                new DropDownOptionValue(\"Float\", \"float\"),\n                new DropDownOptionValue(\"Double\", \"double\")\n            ];\n        }\n        return options;\n    }\n\n    public shouldShowEnumEditor(): boolean {\n        return this.model.type && this.model.type.isEnum();\n    }\n\n    public shouldShowFormattedAs(): boolean {\n        let st: SimplifiedType = this.model.type;\n        if (this.model.type && this.model.type.isArray() && this.model.type.of && this.model.type.of.isSimpleType()) {\n            st = this.model.type.of;\n        }\n        return st && st.isSimpleType() && !st.isEnum() && (st.type !== \"boolean\");\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model.type.required = newValue === \"required\";\n    }\n\n    public changeType(type: string): void {\n        if (type === \"enum\") {\n            this.model.type.type = \"string\";\n            this.model.type.enum_ = [];\n        } else {\n            this.model.type.type = type;\n            this.model.type.enum_ = null;\n            this.model.type.of = null;\n            this.model.type.as = null;\n        }\n    }\n\n    public changeTypeEnum(value: string[]): void {\n        this.model.type.enum_ = value;\n    }\n\n    public changeTypeOf(typeOf: string): void {\n        this.model.type.of = new SimplifiedType();\n        this.model.type.of.type = typeOf;\n        this.model.type.as = null;\n    }\n\n    public changeTypeAs(typeAs: string): void {\n        if (this.model.type.isSimpleType()) {\n            this.model.type.as = typeAs;\n        }\n        if (this.model.type.isArray() && this.model.type.of) {\n            this.model.type.of.as = typeAs;\n        }\n    }\n\n    public heading(): string {\n        if (this._paramType === \"query\") {\n            return \"Define a New Query Parameter\";\n        }\n        if (this._paramType === \"header\") {\n            return \"Define a New Header Parameter\";\n        }\n        if (this._paramType === \"cookie\") {\n            return \"Define a New Cookie Parameter\";\n        }\n        if (this._paramType === \"formData\") {\n            return \"Define a New Form Data Parameter\";\n        }\n    }\n\n    private addRefTypes(options: DropDownOption[]): void {\n        let refPrefix: string = \"#/components/schemas/\";\n        let defs: (Oas20SchemaDefinition | Oas30SchemaDefinition | Aai20SchemaDefinition)[];\n\n        const isSimpleType: (schemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition, recursionDepth?: number) => boolean = (schemaDef, recursionDepth) => {\n            if (!recursionDepth) {\n                recursionDepth = 1;\n            }\n            if (schemaDef.type === \"string\" || schemaDef.type === \"number\" || schemaDef.type === \"integer\" || schemaDef.type === \"boolean\") {\n                return true;\n            }\n            if (recursionDepth < 5 && schemaDef.$ref !== null && ReferenceUtil.canResolveRef(schemaDef.$ref, schemaDef)) {\n                const resolvedSchemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition = <any>(ReferenceUtil.resolveNodeRef(schemaDef));\n                return isSimpleType(resolvedSchemaDef, recursionDepth + 1);\n            }\n\n            // TODO if the SchemaDef is an **external** \"$ref\" we need to resolve it here and include it if the $ref points to a simple\n            // type schema.  This should use the API catalog to resolve the reference.\n\n            return false;\n        };\n\n        if (this.context.ownerDocument().getDocumentType() == DocumentType.asyncapi2) {\n            // TODO TBD on this - not sure what is appropriate for AsyncAPI documents\n        } else {\n            let doc: OasDocument = <OasDocument> this.context.ownerDocument();\n            if (doc.is2xDocument()) {\n                refPrefix = \"#/definitions/\";\n            }\n\n            let viz: FindSchemaDefinitionsVisitor = new FindSchemaDefinitionsVisitor(isSimpleType);\n            VisitorUtil.visitTree(doc, viz, TraverserDirection.down);\n            defs = viz.getSortedSchemaDefinitions();\n        }\n\n        if (defs.length > 0) {\n            options.push(DIVIDER);\n            defs.forEach(def => {\n                let defName: string = def.getName();\n                options.push(new DropDownOptionValue(defName, refPrefix + defName));\n            });\n        }\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"{{ _paramType }}Parameter\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" [heading]=\"heading()\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span *ngIf=\"_paramType === 'query'\">Enter a name and description for the new query parameter.</span>\n                <span *ngIf=\"_paramType === 'header'\">Enter a name and description for the new header parameter.</span>\n                <span *ngIf=\"_paramType === 'cookie'\">Enter a name and description for the new cookie parameter.</span>\n                <span *ngIf=\"_paramType === 'formData'\">Enter a name and description for the new form data parameter.</span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"qp_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"qp_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique parameter name.\" pattern=\"[a-zA-Z0-9\\.\\-_\\$]+\"\n                           (ngModelChange)=\"paramExists = params.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"paramExists\">Parameter named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row-fluid divider-section\">\n        <div class=\"col-md-12\">\n            <hr />\n        </div>\n    </div>\n    <div class=\"row-fluid body-section type-section\">\n        <div class=\"col-md-12\">\n            <h3>2. Enter Type Information <span class=\"optional empty\">(optional)</span></h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter information about the parameter's type (and whether it is required).\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <div>\n                    <div class=\"param-type\">\n                        <span class=\"paramIs-label dropdown-label\">Parameter is</span>\n                        <drop-down [id]=\"'api-param-required'\"\n                                   [value]=\"required()\"\n                                   [options]=\"requiredOptions()\"\n                                   (onValueChange)=\"changeRequired($event)\"\n                                   [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                        <span class=\"strong type-label dropdowns-label\">and has type</span>\n                        <drop-down [id]=\"'api-param-type'\"\n                                   [value]=\"type()\"\n                                   [options]=\"typeOptions()\"\n                                   (onValueChange)=\"changeType($event)\"\n                                   [noSelectionLabel]=\"'Choose Type'\"></drop-down>\n                        <span class=\"of-label dropdowns-label\" *ngIf=\"type() === 'array'\">of</span>\n                        <drop-down *ngIf=\"type() === 'array'\"\n                                   [id]=\"'api-param-type-of'\"\n                                   [value]=\"typeOf()\"\n                                   [options]=\"typeOfOptions()\"\n                                   (onValueChange)=\"changeTypeOf($event)\"\n                                   [noSelectionLabel]=\"'Choose Type'\"></drop-down>\n                        <span class=\"as-label dropdowns-label\" *ngIf=\"shouldShowFormattedAs()\">as</span>\n                        <drop-down *ngIf=\"shouldShowFormattedAs()\"\n                                   [id]=\"'api-param-type-as'\"\n                                   [value]=\"typeAs()\"\n                                   [options]=\"typeAsOptions()\"\n                                   (onValueChange)=\"changeTypeAs($event)\"\n                                   [noSelectionLabel]=\"'Format'\"></drop-down>\n                    </div>\n                    <div class=\"param-enum\" id=\"param-enum\" *ngIf=\"shouldShowEnumEditor()\">\n                        <span class=\"enum-label\">Enum Values: </span>\n                        <inline-array-editor *ngIf=\"shouldShowEnumEditor()\" [value]=\"model.type.enum_\" (onChange)=\"changeTypeEnum($event)\"\n                                             noValueMessage=\"Click to define enum values.\"></inline-array-editor>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Inject, Injectable, PLATFORM_ID} from \"@angular/core\";\nimport {isPlatformBrowser} from \"@angular/common\";\n\nfunction _window(): Window {\n    return window;\n}\n\n@Injectable()\nexport class WindowRef {\n\n    window: Window | any;\n\n    constructor(@Inject(PLATFORM_ID) private platformId: any) {\n        if (isPlatformBrowser(this.platformId)) {\n            this.window = _window();\n        } else {\n            this.window = {};\n        }\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {OtCommand} from \"@apicurio/data-models\";\nimport {VersionedAck} from \"./_models/ack.model\";\nimport {ApiEditorUser} from \"./_models/editor-user.model\";\n\n\nexport abstract class AbstractApiEditorComponent {\n\n    public abstract executeCommand(command: OtCommand): void;\n    public abstract undoCommand(command: OtCommand | number | string): void;\n    public abstract redoCommand(command: OtCommand | number): void;\n    public abstract finalizeCommand(ack: VersionedAck): void;\n    public abstract updateCollaboratorSelection(user: ApiEditorUser, selection: string): void;\n    public abstract select(path: string, highlight: boolean): void;\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ElementRef, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {OasDocument} from \"@apicurio/data-models\";\n\n\n@Component({\n    selector: \"add-tag-dialog\",\n    templateUrl: \"add-tag.component.html\",\n    styleUrls: [\"add-tag.component.css\"]\n})\nexport class AddTagDialogComponent {\n\n    @Output() onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"addTagModal\") addTagModal: QueryList<ModalDirective>;\n    @ViewChildren(\"addTagInput\") addTagInput: QueryList<ElementRef>;\n\n    private _isOpen: boolean = false;\n\n    tag: string = \"\";\n    description: string = \"\";\n\n    tags: string[] = [];\n    tagExists: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     */\n    public open(document: OasDocument, tag?: string): void {\n        this.tag = tag;\n        if (!tag) {\n            this.tag = \"\";\n        }\n        this._isOpen = true;\n        this.addTagModal.changes.subscribe( () => {\n            if (this.addTagModal.first) {\n                this.addTagModal.first.show();\n            }\n        });\n\n        this.tags = [];\n        this.tagExists = false;\n        if (document.tags) {\n            document.tags.forEach( tag => {\n                this.tags.push(tag.name);\n            });\n        }\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.tag = \"\";\n        this.description = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        let tagInfo: any = {\n            name: this.tag,\n            description: this.description\n        };\n        this.onAdd.emit(tagInfo);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addTagModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Called to initialize the selection/focus to the addTagInput field.\n     */\n    doSelect(): void {\n        this.addTagInput.first.nativeElement.focus();\n    }\n\n}\n","<!-- Add Tag Dialog -->\n<div bsModal #addTagModal=\"bs-modal\" class=\"modal fade\" id=\"addTagModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addTagModalLabel\"\n     role=\"dialog\" aria-hidden=\"true\" (onShown)=\"doSelect()\" [config]=\"{ backdrop: true }\"\n     (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addTagModalLabel\">Add Tag</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter information about the new tag below and then click <strong>Add</strong>.</p>\n                <form id=\"addtag-form\" class=\"form-horizontal\" (submit)=\"add()\" #addTagForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label required\" for=\"tag\">Tag</label>\n                        <div class=\"col-sm-10\">\n                            <input #addTagInput name=\"tag\" type=\"text\" id=\"tag\" class=\"form-control\" placeholder=\"Tag Name\"\n                                   required [(ngModel)]=\"tag\" (ngModelChange)=\"tagExists = tags.indexOf($event) != -1\" #name=\"ngModel\">\n                            <div class=\"form-error-message error\" *ngIf=\"tagExists\">Tag already exists.</div>\n                            <form-error-message [inputModel]=\"name\" [type]=\"'required'\">Name is required.</form-error-message>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label\" for=\"description\">Description</label>\n                        <div class=\"col-sm-10\">\n                            <textarea name=\"description\" id=\"description\" class=\"form-control\" autosize\n                                      placeholder=\"Tag description\" [(ngModel)]=\"description\"></textarea>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!addTagForm.form.valid || tagExists\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    QueryList,\n    SimpleChanges,\n    ViewChildren,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    Oas20Document,\n    Oas20Operation,\n    Oas30Operation\n} from \"@apicurio/data-models\";\nimport {InlineArrayEditorComponent} from \"../../../common/inline-array-editor.component\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../../_util/model.util\";\nimport {DropDownOptionValue} from \"../../../common/drop-down.component\";\n\n\n@Component({\n    selector: \"operation-info-section\",\n    templateUrl: \"info-section.component.html\",\n    styleUrls: [ \"info-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OperationInfoSectionComponent extends AbstractBaseComponent {\n\n    @Input() operation: Oas20Operation | Oas30Operation;\n    @ViewChildren(\"consumesEditor\") consumesEditor: QueryList<InlineArrayEditorComponent>;\n    @ViewChildren(\"producesEditor\") producesEditor: QueryList<InlineArrayEditorComponent>;\n\n    private _operationInfoPaths: string[];\n    private _showInheritedConsumes: boolean = false;\n    private _showInheritedProduces: boolean = false;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this._operationInfoPaths = null;\n        this._initConsumesProduces();\n    }\n\n    _initConsumesProduces(): void {\n        // Should we show the inherited consumes for this input?\n        let consumes: string[] = this.consumes();\n        if (consumes !== null && consumes !== undefined) {\n            this._showInheritedConsumes = false;\n        } else {\n            this._showInheritedConsumes = this.hasGlobalConsumes();\n        }\n\n        // Should we show the inherited produces for this input?\n        let produces: string[] = this.produces();\n        if (produces !== null && produces !== undefined) {\n            this._showInheritedProduces = false;\n        } else {\n            this._showInheritedProduces = this.hasGlobalProduces();\n        }\n    }\n\n    /**\n     * Returns the node paths of all the properties editable in this section.\n     */\n    public operationInfoPaths(): string[] {\n        if (!this._operationInfoPaths) {\n            let basePath: string = ModelUtils.nodeToPath(this.operation);\n            this._operationInfoPaths = [ \"summary\", \"description\", \"operationId\", \"tags\" ].map( prop => {\n                return basePath + \"/\" + prop;\n            });\n        }\n        return this._operationInfoPaths;\n    }\n\n    /**\n     * Called when the user changes the summary.\n     * @param newSummary\n     */\n    public changeSummary(newSummary: string): void {\n        console.info(\"[InfoSectionComponent] User changed the summary.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"summary\", newSummary);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the description.\n     * @param newDescription\n     */\n    public changeDescription(newDescription: string): void {\n        console.info(\"[InfoSectionComponent] User changed the description.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the operationId.\n     * @param newOperationId\n     */\n    public changeOperationId(newOperationId: string): void {\n        console.info(\"[InfoSectionComponent] User changed the operationId.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"operationId\", newOperationId);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the tags.\n     * @param newTags\n     */\n    public changeTags(newTags: string[]): void {\n        console.info(\"[InfoSectionComponent] User changed the tags.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"tags\", newTags);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the deprecated.\n     * @param newDeprecated\n     */\n    public changeDeprecated(newDeprecated: boolean): void {\n        console.info(\"[InfoSectionComponent] User changed the deprecated.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operation, \"deprecated\", newDeprecated);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the \"consumes\".\n     * @param newValue\n     */\n    public onConsumesChange(newValue: string[]): void {\n        console.info(\"[InfoSectionComponent] User changed the consumes to: \", newValue);\n        if (newValue && newValue.length === 0) {\n            newValue = null;\n        }\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string[]>(this.operation, \"consumes\", newValue);\n        this.commandService.emit(command);\n        this._initConsumesProduces();\n    }\n\n    /**\n     * Called when the user closes the consumes editor without making changes.\n     */\n    public onConsumesClose(): void {\n        this._initConsumesProduces();\n    }\n\n    /**\n     * Called when the user changes the \"produces\".\n     * @param newValue\n     */\n    public onProducesChange(newValue: string[]): void {\n        console.info(\"[InfoSectionComponent] User changed the produces to: \", newValue);\n        if (newValue && newValue.length === 0) {\n            newValue = null;\n        }\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string[]>(this.operation, \"produces\", newValue);\n        this.commandService.emit(command);\n        this._initConsumesProduces();\n    }\n\n    /**\n     * Called when the user closes the produces editor without making changes.\n     */\n    public onProducesClose(): void {\n        this._initConsumesProduces();\n    }\n\n    public consumes(): string[] {\n        return (this.operation as Oas20Operation).consumes;\n    }\n\n    public produces(): string[] {\n        return (this.operation as Oas20Operation).produces;\n    }\n\n    public hasGlobalConsumes(): boolean {\n        let globalConsumes: string[] = (this.operation.ownerDocument() as Oas20Document).consumes;\n        if (globalConsumes !== null && globalConsumes !== undefined && globalConsumes.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    public hasLocalConsumes(): boolean {\n        let consumes: string[] = this.consumes();\n        return consumes && consumes.length > 0;\n    }\n\n    public hasLocalProduces(): boolean {\n        let produces: string[] = this.produces();\n        return produces && produces.length > 0;\n    }\n\n    public showInheritedConsumes(): boolean {\n        return this._showInheritedConsumes;\n    }\n\n    public inheritedConsumes(): string[] {\n        let consumes: string[] = (this.operation.ownerDocument() as Oas20Document).consumes;\n        return consumes;\n    }\n\n    public hasGlobalProduces(): boolean {\n        let globalProduces: string[] = (this.operation.ownerDocument() as Oas20Document).produces;\n        if (globalProduces !== null && globalProduces !== undefined && globalProduces.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    public showInheritedProduces(): boolean {\n        return this._showInheritedProduces;\n    }\n\n    public inheritedProduces(): string[] {\n        let produces: string[] = (this.operation.ownerDocument() as Oas20Document).produces;\n        return produces;\n    }\n\n    public overrideConsumes(): void {\n        this._showInheritedConsumes = false;\n        setTimeout(() => {\n            this.consumesEditor.last.onStartEditing();\n        }, 50);\n    }\n\n    public overrideProduces(): void {\n        this._showInheritedProduces = false;\n        setTimeout(() => {\n            this.producesEditor.last.onStartEditing();\n        }, 50);\n    }\n\n    public tagDefs(): ()=>string[] {\n        return ()=> {\n            if (this.operation.ownerDocument().tags && this.operation.ownerDocument().tags.length > 0) {\n                let tagDefs: string[] = this.operation.ownerDocument().tags.map(tagDef => tagDef.name);\n                tagDefs.sort();\n                return tagDefs;\n            } else {\n                return [];\n            }\n        }\n    }\n\n    public is2xDocument(): boolean {\n        return this.operation.ownerDocument().getDocumentType() == DocumentType.openapi2;\n    }\n\n    public deprecatedOptions() {\n        return [\n            new DropDownOptionValue(\"Deprecated\", true),\n            new DropDownOptionValue(\"Not Deprectated\", false)\n        ];\n    }\n\n}\n","<section type=\"info\" label=\"INFO\"\n         contextHelp=\"In this section you can easily edit the Summary, ID, and Description of the Operation.\"\n         [collaborationNodePath]=\"operationInfoPaths()\"\n         [validationModels]=\"[operation]\" [validationShallow]=\"true\" [validationProperties]=\"[ 'operationId', 'summary', 'description' ]\">\n    <span actions></span>\n    <div body>\n        <div class=\"half-section\">\n            <!-- Summary -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'summary'\"></validation-problem>\n                <span>Summary</span>\n            </div>\n            <div class=\"section-field summary\">\n                <pf-inline-text-editor [value]=\"operation.summary\" [noValueMessage]=\"'No Summary'\"\n                                       [labelClass]=\"'api-item-title'\"\n                                       [inputClass]=\"'api-item-editor api-summary-editor api-item-title'\"\n                                       [baseNode]=\"operation\" nodePath=\"summary\"\n                                       (onChange)=\"changeSummary($event)\"></pf-inline-text-editor>\n            </div>\n        </div>\n\n        <div class=\"half-section right\">\n            <!-- Operation ID -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'operationId'\"></validation-problem>\n                <span>Operation ID</span>\n            </div>\n            <div class=\"section-field operationId\">\n                <pf-inline-text-editor [value]=\"operation.operationId\" [noValueMessage]=\"'No Operation ID'\"\n                                       [labelClass]=\"'api-item-operation-id'\"\n                                       [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                       [baseNode]=\"operation\" nodePath=\"operationId\"\n                                       (onChange)=\"changeOperationId($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Deprecated -->\n            <div class=\"section-field deprecated\">\n                <drop-down [value]=\"operation.deprecated\"\n                           [options]=\"deprecatedOptions()\"\n                           (onValueChange)=\"changeDeprecated($event)\"\n                           noSelectionLabel=\"Not Deprecated\"></drop-down>\n            </div>\n        </div>\n\n        <!-- Description -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'description'\"></validation-problem>\n            <span>Description</span>\n        </div>\n        <div class=\"section-field description\">\n            <inline-markdown-editor [value]=\"operation.description\" [noValueMessage]=\"'No description.'\"\n                                    [labelClass]=\"'api-item-editor api-description-editor operation-description api-item-description'\"\n                                    [inputClass]=\"'api-item-description'\"\n                                    [formClass]=\"'api-description-editor-form'\"\n                                    [baseNode]=\"operation\" nodePath=\"description\"\n                                    (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n        </div>\n\n        <!-- Tags -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"operation\" [shallow]=\"true\" [property]=\"'tags'\"></validation-problem>\n            <span>Tags</span>\n        </div>\n        <div class=\"section-field tags\">\n            <inline-array-editor noValueMessage=\"No tags configured.\" [value]=\"operation.tags\" [items]=\"tagDefs()\"\n                                 [baseNode]=\"operation\" nodepath=\"tags\"\n                                 (onChange)=\"changeTags($event)\"></inline-array-editor>\n        </div>\n\n        <!-- Consumes and Produces (2.0 only) -->\n        <div *ngIf=\"is2xDocument()\">\n            <!-- Consumes -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"operation.ownerDocument()\" property=\"consumes\" [shallow]=\"true\"></validation-problem>\n                <span>Consumes (Inputs)</span>\n            </div>\n            <div class=\"section-field consumes\">\n                <div class=\"inherited-labels\" *ngIf=\"showInheritedConsumes()\">\n                    <span class=\"apicurio-icon-inherit-d icon-inherit\" title=\"Content types inherited from global scope.\"></span>\n                    <div class=\"inherited-labels-inner\">\n                        <span class=\"inherited-label label label-default\" *ngFor=\"let item of inheritedConsumes()\">{{ item }}</span>\n                    </div>\n                    <button class=\"btn btn-default btn-xs btn-override\" title=\"Override the 'consumes' setting.\" (click)=\"overrideConsumes()\">Override</button>\n                </div>\n                <div class=\"overridden-labels\" *ngIf=\"!showInheritedConsumes()\">\n                    <span *ngIf=\"hasGlobalConsumes()\" class=\"apicurio-icon-override icon-override\" title=\"Overrides the global 'consumes' setting.\"></span>\n                    <span *ngIf=\"!hasGlobalConsumes() && hasLocalConsumes()\" class=\"apicurio-icon-local-d icon-local\" title=\"Content types defined in this operation only (no global setting).\"></span>\n                    <span *ngIf=\"!hasGlobalConsumes() && !hasLocalConsumes()\" class=\"apicurio-icon-undefined-d icon-local\" title=\"No content types defined at any level.\"></span>\n                    <inline-array-editor [value]=\"consumes()\" [noValueMessage]=\"'No consumes content-type(s) set.'\" #consumesEditor\n                                         [items]=\"[ 'application/json', 'text/xml', 'multipart/form-data' ]\"\n                                         [baseNode]=\"operation\" nodepath=\"consumes\"\n                                         (onClose)=\"onConsumesClose()\"\n                                         (onChange)=\"onConsumesChange($event)\"></inline-array-editor>\n                </div>\n            </div>\n            <!-- Produces -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"operation.ownerDocument()\" property=\"produces\" [shallow]=\"true\"></validation-problem>\n                <span>Produces (Outputs)</span>\n            </div>\n            <div class=\"section-field produces\">\n                <div class=\"inherited-labels\" *ngIf=\"showInheritedProduces()\">\n                    <span class=\"apicurio-icon-inherit-d icon-inherit\" title=\"Content types inherited from global scope.\"></span>\n                    <div class=\"inherited-labels-inner\">\n                        <span class=\"inherited-label label label-default\" *ngFor=\"let item of inheritedProduces()\">{{ item }}</span>\n                    </div>\n                    <button class=\"btn btn-default btn-xs btn-override\" title=\"Override the produces setting.\" (click)=\"overrideProduces()\">Override</button>\n                </div>\n                <div class=\"overridden-labels\" *ngIf=\"!showInheritedProduces()\">\n                    <span *ngIf=\"hasGlobalProduces()\" class=\"apicurio-icon-override icon-override\" title=\"Overrides the global 'produces' setting.\"></span>\n                    <span *ngIf=\"!hasGlobalProduces() && hasLocalProduces()\" class=\"apicurio-icon-local-d icon-local\" title=\"Content types defined in this operation only (no global setting).\"></span>\n                    <span *ngIf=\"!hasGlobalProduces() && !hasLocalProduces()\" class=\"apicurio-icon-undefined-d icon-local\" title=\"No content types defined at any level.\"></span>\n                    <inline-array-editor [value]=\"produces()\" [noValueMessage]=\"'No produces content-type(s) set.'\" #producesEditor\n                                         [items]=\"[ 'application/json', 'text/xml', 'multipart/form-data' ]\"\n                                         [baseNode]=\"operation\" nodepath=\"produces\"\n                                         (onClose)=\"onProducesClose()\"\n                                         (onChange)=\"onProducesChange($event)\"></inline-array-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren, Input} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {DIVIDER, DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\nconst STANDARD_HEADERS = [\"string\", \"integer\"];\n\n@Component({\n    selector: \"add-header-dialog\",\n    templateUrl: \"add-header.component.html\"\n})\nexport class AddHeaderDialogComponent {\n\n    private static CUSTOM_HEADERS_STORAGE_KEY = \"apicurio.add-header.custom-headers\";\n\n    @Output() onAdd: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"addHeaderModal\") addHeaderModal: QueryList<ModalDirective>;\n\n    private addedHeaderNames: string[] = []\n\n    private _isOpen: boolean = false;\n    private _headerOptions: DropDownOption[];\n\n    header: string = \"\";\n    customHeader: string = \"\";\n\n    protected headerExists: boolean = false;\n\n\n    /**\n     * Called to open the dialog.\n     * @param addedHeaderNames Array of the already added header, to prevent adding them again\n     * @param header header to select by default\n     */\n    public open(addedHeaderNames: string[] = [], header?: string): void {\n        if (!header) {\n            this.customHeader = \"\";\n        } else {\n            this.header = this.customHeader;\n        }\n        this._isOpen = true;\n\n        this.addHeaderModal.changes.subscribe( thing => {\n            if (this.addHeaderModal.first) {\n                this.addHeaderModal.first.show();\n            }\n        });\n\n        // Add the standard types.\n        this._headerOptions = STANDARD_HEADERS.map( sheader => {\n            return new DropDownOptionValue(sheader, sheader);\n        });\n        // Add \"remembered\" custom headers (if any)\n        let cheaders: string[] = this.getCustomHeaders();\n        if (cheaders && cheaders.length > 0) {\n            this._headerOptions.push(DIVIDER);\n            cheaders.forEach( cheader => {\n                this._headerOptions.push(new DropDownOptionValue(cheader, cheader));\n            });\n        }\n        // Add the \"Custom Header\" option.\n        this._headerOptions.push(DIVIDER);\n        this._headerOptions.push(new DropDownOptionValue(\"Custom Header\", \"custom\"))\n\n        this.addedHeaderNames = addedHeaderNames\n    }\n\n    headerOptions(): DropDownOption[] {\n        return this._headerOptions;\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.header = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        let h: string = this.customHeader;\n\n        this.rememberCustomHeader(h);\n        this.onAdd.emit(h);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addHeaderModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Stores the custom header in browser local storage.\n     * @param header\n     */\n    private rememberCustomHeader(header: string): void {\n\n            let cheaders: string[] = this.getCustomHeaders();\n            if (cheaders.indexOf(header) === -1) {\n                cheaders.push(header);\n                let storage: Storage = window.localStorage;\n                storage.setItem(AddHeaderDialogComponent.CUSTOM_HEADERS_STORAGE_KEY, JSON.stringify(cheaders));\n            }\n\n    }\n\n    private getCustomHeaders(): string[] {\n        let storage: Storage = window.localStorage;\n        let cheadersRaw: string = storage.getItem(AddHeaderDialogComponent.CUSTOM_HEADERS_STORAGE_KEY);\n        if (cheadersRaw && cheadersRaw.indexOf('[') === 0) {\n            return JSON.parse(cheadersRaw);\n        }\n        return [];\n    }\n\n\n    public isHeaderAlreadyAdded(): boolean {\n        let h: string = this.customHeader\n        return this.addedHeaderNames.includes(h)\n    }\n\n    public isValid(): boolean {\n        return !this.isHeaderAlreadyAdded();\n    }\n}\n","<!-- Add Header Dialog -->\n<div bsModal #addHeaderModal=\"bs-modal\" class=\"modal fade\" id=\"addHeaderModal\" tabindex=\"-1\"\n     aria-labelledby=\"addHeaderModalLabel\" role=\"dialog\" (onHidden)=\"close()\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addHeaderModalLabel\">Add Header</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Type a Header (e.g. application/json) below and then click Add.</p>\n                <form id=\"addHeader-form\" class=\"form-horizontal\" (submit)=\"add()\" #addHeaderForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\" >\n                        <label class=\"col-sm-3 control-label required\" for=\"header\">Custom Header</label>\n                        <div class=\"col-sm-9\">\n                            <input #customHeaderInput name=\"header\" type=\"text\" id=\"header\" class=\"form-control\"\n                                   placeholder=\"Enter a custom Header\"\n                                   required [(ngModel)]=\"customHeader\" #mheader=\"ngModel\">\n                            <form-error-message [inputModel]=\"mheader\" [type]=\"'required'\">Custom header is required.</form-error-message>\n                            <div class=\"form-error-message error\" *ngIf=\"isHeaderAlreadyAdded()\">Selected header already exists.</div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!addHeaderForm.form.valid || !isValid()\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Output, EventEmitter, ViewChildren, QueryList} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {LicenseService, ILicense} from \"../../_services/license.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n\n@Component({\n    selector: \"set-license-dialog\",\n    templateUrl: \"set-license.component.html\"\n})\nexport class SetLicenseDialogComponent {\n\n    @Output() onLicenseChosen: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"setLicenseModal\") setLicenseModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    constructor(public licenseService: LicenseService, protected selectionService: SelectionService) {}\n\n    /**\n     * Called to open the dialog.\n     */\n    public open(): void {\n        this._isOpen = true;\n        this.setLicenseModal.changes.subscribe( thing => {\n            if (this.setLicenseModal.first) {\n                this.setLicenseModal.first.show();\n            }\n        });\n        this.selectionService.simpleSelect(\"/info/license\");\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.setLicenseModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Returns a list of possible licenses.\n     */\n    licenses(): ILicense[] {\n        return this.licenseService.getLicenses();\n    }\n\n    /**\n     * Called when the user picks a license.\n     * @param license\n     */\n    chooseLicense(license: ILicense): void {\n        this.onLicenseChosen.emit({\n            name: license.name,\n            url: license.url\n        });\n        this.cancel();\n    }\n\n}\n","<!-- Choose License Dialog -->\n<div bsModal #setLicenseModal=\"bs-modal\" class=\"set-license-modal modal fade\" id=\"setLicenseModal\" tabindex=\"-1\" role=\"dialog\"\n     aria-labelledby=\"setLicenseModalLabel\" role=\"dialog\" aria-hidden=\"true\" [config]=\"{ backdrop: true }\"\n     (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"setLicenseModalLabel\">Choose a License</h4>\n            </div>\n            <div class=\"modal-body\" #dialogBody>\n\n                <div *ngFor=\"let license of licenses()\" class=\"container-fluid license\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <h2><a href=\"{{ license.url }}\" target=\"_blank\">{{ license.name }}</a><span class=\"fa fa-fw fa-external-link\"></span></h2>\n                            <p>{{ license.description }}</p>\n                            <button class=\"btn btn-xs btn-primary\" (click)=\"chooseLicense(license)\">Use This License</button>\n                            <a class=\"pull-right\" href=\"{{ license.moreInfoUrl }}\" target=\"_blank\">View full {{ license.fullName }} »</a>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <h3>Permissions</h3>\n                            <ul class=\"permissions\">\n                                <li *ngFor=\"let permission of license.permissions\"><span title=\"{{ licenseService.permissionDescription(permission) }}\">{{ licenseService.permissionName(permission) }}</span></li>\n                            </ul>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <h3>Conditions</h3>\n                            <ul class=\"conditions\">\n                                <li *ngFor=\"let condition of license.conditions\"><span title=\"{{ licenseService.conditionDescription(condition) }}\">{{ licenseService.conditionName(condition) }}</span></li>\n                            </ul>\n                        </div>\n                        <div class=\"col-md-2\">\n                            <h3>Limitations</h3>\n                            <ul class=\"limitations\">\n                                <li *ngFor=\"let limitation of license.limitations\"><span title=\"{{ licenseService.limitationDescription(limitation) }}\">{{ licenseService.limitationName(limitation) }}</span></li>\n                            </ul>\n                        </div>\n                    </div>\n                    <hr />\n                </div>\n\n            </div>\n            <div class=\"modal-footer\">\n                <span class=\"pull-left\">License information provided by <a href=\"https://choosealicense.com/\" target=\"_blank\">Choose a License &copy; </a> under the <a href=\"https://creativecommons.org/licenses/by/3.0/\" target=\"_blank\">Create Commons License</a>.</span>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandFactory, ICommand, OasTag} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\n\n\n@Component({\n    selector: \"tag-row\",\n    templateUrl: \"tag-row.component.html\",\n    styleUrls: [\"tag-row.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagRowComponent extends AbstractRowComponent<OasTag, string> {\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onRename: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        // No internal model for this row impl\n    }\n\n    public name(): string {\n        if (this.item.name) {\n            return this.item.name;\n        } else {\n            return \"No name.\";\n        }\n    }\n\n    public hasName(): boolean {\n        return this.item.name ? true : false;\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public hasDescription(): boolean {\n        return this.item.description ? true : false;\n    }\n\n    public toggle(): void {\n        this.toggleTab(\"tag\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public renameTag(): void {\n        this.onRename.emit();\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n}\n","<div class=\"tag\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"expand\" (click)=\"toggle()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditing()\"></span>\n        </div>\n        <div class=\"name\" (click)=\"toggle()\" [class.empty]=\"!hasName()\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"fa fa-tag entity-icon\"></span>\n            <span>{{ name() }}</span>\n        </div>\n        <div class=\"description\" (click)=\"toggle()\">\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"renameTag()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"tag-description\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'Enter description here.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2021 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandFactory, ExtensibleNode, Extension, ICommand} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\n\n\n@Component({\n    selector: \"extension-row\",\n    templateUrl: \"extension-row.component.html\",\n    styleUrls: [\"extension-row.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExtensionRowComponent extends AbstractRowComponent<Extension, string> {\n\n    @Input() parent: ExtensibleNode;\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onRename: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        // No internal model for this row impl\n    }\n\n    public name(): string {\n        return this.item.name;\n    }\n\n    public value(): any {\n        return this.item.value;\n    }\n\n    public valueAsString(): string {\n        if (typeof this.item.value === \"object\") {\n            return JSON.stringify(this.value(), null, 3);\n        } else {\n            return JSON.stringify(this.value());\n        }\n    }\n\n    public hasValue(): boolean {\n        return this.item.value ? true : false;\n    }\n\n    public toggle(): void {\n        this.toggleTab(\"extension\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public renameExtension(): void {\n        this.onRename.emit();\n    }\n\n    public setValue(value: string): void {\n        try {\n            let parsedValue: any = JSON.parse(value);\n            let command: ICommand = CommandFactory.createSetExtensionCommand(this.parent, this.item.name, parsedValue);\n            this.commandService.emit(command);\n        } catch (e) {\n            // TODO what to do here?  Log it!\n        }\n    }\n\n}\n","<div class=\"extension\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"expand\" (click)=\"toggle()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditing()\"></span>\n        </div>\n        <div class=\"name\" (click)=\"toggle()\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"fa fa-extension entity-icon\"></span>\n            <span>{{ name() }}</span>\n        </div>\n        <div class=\"value\" (click)=\"toggle()\">\n            <json-summary [data]=\"value()\" emptyText=\"No value.\"></json-summary>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"renameExtension()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"extension-value\">\n                        <div class=\"form-label\">Value (must be valid JSON)</div>\n                        <inline-json-editor [value]=\"valueAsString()\"\n                                            [labelClass]=\"'api-vendor-extension'\"\n                                            [formClass]=\"'api-vendor-extension-editor-form'\"\n                                            [inputClass]=\"'api-item-editor api-example-editor api-definition-example api-item-example'\"\n                                            [baseNode]=\"item\"\n                                            [noValueMessage]=\"'No value.'\"\n                                            (onChange)=\"setValue($event)\"></inline-json-editor>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation, ViewChild} from \"@angular/core\";\nimport {\n    Aai20Document, Aai20SecurityRequirement, Aai20Server, Aai20ServerVariable, AaiServer, CombinedVisitorAdapter,\n    CommandFactory,\n    ICommand, Server, TraverserDirection, VisitorUtil\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {AaiServerData, AaiServerEditorComponent, AaiServerEditorEvent} from \"../../editors/aaiserver-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\n\n\n@Component({\n    selector: \"aaiservers-section\",\n    templateUrl: \"aaiservers-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AaiServersSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: Aai20Document;\n    @Input() collapsed: boolean;\n    @Input() description: string;\n\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    public showSectionBody: boolean;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editorsService: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showSectionBody = !this.collapsed;\n    }\n\n    /**\n     * Returns the list of global servers defined in the document.\n     * @return\n     */\n    public servers(): Aai20Server[] {\n        let servers: { [key: string]: Aai20Server } = this.parent.servers;\n        if (ObjectUtils.isNullOrUndefined(servers)) {\n            servers = {};\n        }\n        // Clone the array\n        let serverList: Aai20Server[] = [];\n        for (let serverName in servers) {\n            serverList.push(servers[serverName]);\n        }\n        // Sort it\n        serverList.sort( (obj1, obj2) => {\n            return obj1.getName().toLowerCase().localeCompare(obj2.getName().toLowerCase());\n        });\n        return serverList;\n    }\n\n    public serversPath(): string {\n        if (this.parent.ownerDocument() === this.parent) {\n            return \"/servers\";\n        } else {\n            return ModelUtils.nodeToPath(this.parent) + \"/servers\";\n        }\n    }\n\n    /**\n     * Called when the user chooses to delete a server.\n     * @param server\n     */\n    public deleteServer(server: Aai20Server): void {\n        let command: ICommand = CommandFactory.createDeleteServerCommand_Aai20(server); //\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user adds a new server.\n     * @param data\n     */\n    public addServer(data: AaiServerData): void {\n        console.info(\"[AaiServersSectionComponent] Adding a server: %s\", data.url);\n\n        let newServer: Aai20Server = <any>(this.parent.createServer(data.name));\n\n        this.copyServerToModel(data, newServer);\n\n        let command: ICommand = CommandFactory.createNewServerCommand_Aai20(this.parent, newServer);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user edits an existing server.\n     * @param event\n     */\n    public changeServer(event: AaiServerEditorEvent): void {\n        console.info(\"[AaiServersSectionComponent] Editing a server: %s\", event.data.name);\n\n        let newServer: Aai20Server = <any>(this.parent.createServer(event.data.name));\n\n        this.copyServerToModel(event.data, newServer);\n\n        let command: ICommand = CommandFactory.createChangeServerCommand_Aai20(newServer);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Copies the data from the event to the new server model.\n     * @param fromData\n     * @param toServer\n     */\n    private copyServerToModel(fromData: AaiServerData, toServer: Aai20Server): void {\n        toServer.url = fromData.url;\n        toServer.protocol = fromData.protocol;\n        toServer.protocolVersion = AaiServersSectionComponent.nonBlankOrNullString(fromData.protocolVersion);\n        if (fromData.variables) {\n            for (let varName in fromData.variables) {\n                let serverVar: Aai20ServerVariable = toServer.createServerVariable(varName);\n                serverVar.default_ = AaiServersSectionComponent.nonBlankOrNullString(fromData.variables[varName].default);\n                serverVar.description = AaiServersSectionComponent.nonBlankOrNullString(fromData.variables[varName].description);\n                serverVar.enum_ = fromData.variables[varName].enum;\n                toServer.addServerVariable(varName, serverVar);\n            }\n        }\n        // No writing to AaiServer.security since the form field is read only\n        toServer.bindings = fromData.bindings;\n        toServer.description = AaiServersSectionComponent.nonBlankOrNullString(fromData.description);\n    }\n    /**\n     * Utility method for nullable string fields\n     */\n    private static nonBlankOrNullString(input: string): string {\n        if (!input)\n            return null;\n        let trimmed = input.trim();\n        return trimmed.length == 0 ? null : trimmed;\n    }\n\n    /**\n     * Opens the full screen modal \"server editor\" so that advanced editing of the\n     * server can be accomplished.\n     */\n    public onAddServer(): void {\n        let serverEditor: AaiServerEditorComponent = this.editorsService.getAaiServerEditor();\n        serverEditor.open({\n            onSave: (event) => this.addServer(event.data),\n            onCancel: () => {}\n        }, this.parent);\n    }\n\n    public hasServers(): boolean {\n        return this.parent.servers && Object.keys(this.parent.servers).length > 0;\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the servers.\n     */\n    public deleteAllServers(): void {\n        let command: ICommand = CommandFactory.createDeleteAllServersCommand_Aai20();\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the rename security scheme dialog.\n     * @param scheme\n     */\n    public openRenameDialog(server: AaiServer): void {\n        let ownerDocument: Aai20Document = <Aai20Document>server.ownerDocument();\n        // copy the server names\n        let serverNames: string[] = ownerDocument.servers\n            ? Object.keys(ownerDocument.servers).splice(0)\n            : [];\n\n        VisitorUtil.visitTree(ownerDocument, new class extends CombinedVisitorAdapter {\n            public visitServer(node: Server) {\n                serverNames.push((<AaiServer>node).getName())\n            }\n        }, TraverserDirection.down);\n        this.renameDialog.open(server, server.getName(), newName => {\n            return serverNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the security scheme.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        let aaiServer: AaiServer = <any>event.entity;\n        let command: ICommand = CommandFactory.createRenameServerCommand(aaiServer.ownerDocument().getDocumentType(), aaiServer.getName(), event.newName);\n        this.commandService.emit(command);\n    }\n\n\n\n}\n","<section type=\"servers\" label=\"SERVERS\"\n         [counterItems]=\"servers()\"\n         [contextHelp]=\"description\"\n         [collaborationNodePath]=\"serversPath()\"\n         [validationModels]=\"servers()\" [expanded]=\"showSectionBody\">\n    <span actions>\n        <icon-button (onClick)=\"onAddServer()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a server to the API.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllServers()\" [disabled]=\"!hasServers()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete all servers.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"servers().length === 0\">\n            <span>No servers have been defined.</span>\n            <a (click)=\"onAddServer()\">Add a server</a>\n        </signpost>\n\n        <!-- The list of servers -->\n        <div class=\"tags\" *ngIf=\"servers().length > 0\">\n            <aaiserver-row *ngFor=\"let server of servers()\" [item]=\"server\"\n                        (onEdit)=\"changeServer($event)\"\n                        (onDelete)=\"deleteServer(server)\"\n                        (onRename)=\"openRenameDialog(server)\"></aaiserver-row>\n        </div>\n    </div>\n</section>\n<rename-entity-dialog #renameDialog\n                      type=\"Server\"\n                      title=\"Rename server\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters, ., - and _ are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component} from \"@angular/core\";\nimport {\n    AaiOperationTraitDefinition,\n    AaiDocument,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {FindOperationTraitDefinitionsVisitor} from \"../../_visitors/operationtrait-definitions.visitor\";\n\n\nexport interface OperationTraitData {\n    name: string;\n    description: string;\n}\n\nexport interface OperationTraitEditorEvent extends EntityEditorEvent<AaiOperationTraitDefinition> {\n    data: OperationTraitData;\n}\n\nexport interface IOperationTraitEditorHandler extends IEntityEditorHandler<AaiOperationTraitDefinition, OperationTraitEditorEvent> {\n    onSave(event: OperationTraitEditorEvent): void;\n    onCancel(event: OperationTraitEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"operationtrait-editor\",\n    templateUrl: \"operationtrait-editor.component.html\",\n    styleUrls: [\"operationtrait-editor.component.css\"]\n})\nexport class OperationTraitEditorComponent extends EntityEditor<AaiOperationTraitDefinition, OperationTraitEditorEvent> {\n\n    operationTraits: string[] = [];\n    traitExists: boolean = false;\n\n    public model: OperationTraitData = {\n        name: \"\",\n        description: \"\"\n    };\n\n    public doAfterOpen(): void {\n        this.operationTraits = [];\n        this.traitExists = false;\n        let traits: AaiOperationTraitDefinition[] = this.getOperationTraits(<AaiDocument> this.context.ownerDocument());\n        this.operationTraits = traits.map(definition => FindOperationTraitDefinitionsVisitor.definitionName(definition));\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: AaiOperationTraitDefinition): void {\n        // Note: nothing to do here because data types aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\"\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.traitExists;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): OperationTraitEditorEvent {\n        let event: OperationTraitEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    private getOperationTraits(document: AaiDocument): AaiOperationTraitDefinition[] {\n        let vizzy: FindOperationTraitDefinitionsVisitor = new FindOperationTraitDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedOperationTraitDefinitions()\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"operationTrait\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define a New Operation Trait\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter a name and description for the new operation trait.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"rsp_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"rsp_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique operation trait name.\" pattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                           (ngModelChange)=\"traitExists = operationTraits.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"traitExists\">Operation Trait named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandFactory, ICommand, OasParameter, SimplifiedParameterType, SimplifiedType} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../../common/item-row.abstract\";\nimport {DropDownOption, DropDownOptionValue} from \"../../../common/drop-down.component\";\n\n\n@Component({\n    selector: \"formData-param-row\",\n    templateUrl: \"formData-param-row.component.html\",\n    styleUrls: [ \"formData-param-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FormDataParamRowComponent extends AbstractRowComponent<OasParameter, SimplifiedParameterType> {\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onRename: EventEmitter<void> = new EventEmitter<void>();\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        this._model = SimplifiedParameterType.fromParameter(this.item as any);\n    }\n\n    public isParameter(): boolean {\n        return true;\n    }\n\n    public hasDescription(): boolean {\n        if (this.item.description) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public description(): string {\n        if (this.item.description) {\n            return this.item.description\n        } else {\n            return \"No description.\";\n        }\n    }\n\n    public isRequired(): boolean {\n        return this.item.required;\n    }\n\n    public required(): string {\n        return this.isRequired() ? \"required\" : \"not-required\";\n    }\n\n    public requiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public isEditingDescription(): boolean {\n        return this.isEditingTab(\"description\");\n    }\n\n    public isEditingSummary(): boolean {\n        return this.isEditingTab(\"summary\");\n    }\n\n    public toggleDescription(): void {\n        this.toggleTab(\"description\");\n    }\n\n    public toggleSummary(): void {\n        this.toggleTab(\"summary\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public displayType(): SimplifiedParameterType {\n        return SimplifiedParameterType.fromParameter(this.item as any);\n    }\n\n    public rename(): void {\n        this.onRename.emit();\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model().required = newValue === \"required\";\n        let command: ICommand = CommandFactory.createChangePropertyCommand<boolean>(this.item, \"required\", this.model().required);\n        this.commandService.emit(command);\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedParameterType = new SimplifiedParameterType();\n        nt.required = this.model().required;\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeParameterTypeCommand(this.item.ownerDocument().getDocumentType(),\n            this.item as any, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n}\n","<div class=\"formData-param\" [class.expanded]=\"isEditing()\" [class.required]=\"isRequired()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span title=\"{{ item.name }}\">{{ item.name }}</span>\n        </div>\n        <div class=\"description\" (click)=\"toggleDescription()\" [class.selected]=\"isEditingDescription()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingDescription()\"></span>\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"summary\" (click)=\"toggleSummary()\" [class.selected]=\"isEditingSummary()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingSummary()\"></span>\n            <span class=\"parameter-required\" *ngIf=\"isRequired()\" title=\"This form data parameter is required.\">[required]</span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"rename()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"param-description\" *ngIf=\"isEditingDescription()\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'No description.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                    <div class=\"param-content\" *ngIf=\"isEditingSummary()\">\n                        <div class=\"param-required\">\n                            <span class=\"dropdown-label\">Parameter is</span>\n                            <drop-down [id]=\"'api-param-required'\"\n                                       [value]=\"required()\"\n                                       [options]=\"requiredOptions()\"\n                                       (onValueChange)=\"changeRequired($event)\"\n                                       [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                        </div>\n                        <div class=\"param-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"isParameter()\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {ServerEditorComponent} from \"../_components/editors/server-editor.component\";\nimport {SecuritySchemeEditorComponent} from \"../_components/editors/security-scheme-editor.component\";\nimport {SecurityRequirementEditorComponent} from \"../_components/editors/security-requirement-editor.component\";\nimport {DataTypeEditorComponent} from \"../_components/editors/data-type-editor.component\";\nimport {ParameterEditorComponent} from \"../_components/editors/parameter-editor.component\";\nimport {PropertyEditorComponent} from \"../_components/editors/property-editor.component\";\nimport {ResponseEditorComponent} from \"../_components/editors/response-editor.component\";\nimport {OperationTraitEditorComponent} from \"../_components/editors/operationtrait-editor.component\";\nimport {MessageTraitEditorComponent} from \"../_components/editors/messagetrait-editor.component\";\nimport {AaiServerEditorComponent} from \"../_components/editors/aaiserver-editor.component\";\nimport {MessageEditorComponent} from \"../_components/editors/message-editor.component\";\nimport {OneOfInMessageEditorComponent} from \"../_components/editors/oneof-in-message-editor.component\";\n\nexport interface IEditorsProvider {\n\n    getServerEditor(): ServerEditorComponent;\n    getAaiServerEditor(): AaiServerEditorComponent;\n    getSecuritySchemeEditor(): SecuritySchemeEditorComponent;\n    getSecurityRequirementEditor(): SecurityRequirementEditorComponent;\n    getDataTypeEditor(): DataTypeEditorComponent;\n    getResponseEditor(): ResponseEditorComponent;\n    getParameterEditor(): ParameterEditorComponent;\n    getPropertyEditor(): PropertyEditorComponent;\n    getOperationTraitEditor(): OperationTraitEditorComponent;\n    getMessageTraitEditor(): MessageTraitEditorComponent;\n    getMessageEditor(): MessageEditorComponent;\n    getOneOfInMessageEditor(): OneOfInMessageEditorComponent;\n}\n\n\n/**\n * A simple service that provides access to global entity editors.  These are the full page\n * modal editors used to perform advanced editing of specific model entities.  Examples include\n * the Server Editor, Response Editor, and Parameter Editor.\n */\n@Injectable()\nexport class EditorsService implements IEditorsProvider {\n\n    private provider: IEditorsProvider;\n\n    constructor() {}\n\n    public setProvider(provider: IEditorsProvider): void {\n        console.info(\"[EditorsService] Setting provider to: \", provider);\n        this.provider = provider;\n    }\n\n    public getServerEditor(): ServerEditorComponent {\n        return this.provider.getServerEditor();\n    }\n\n    public getAaiServerEditor(): AaiServerEditorComponent {\n        return this.provider.getAaiServerEditor();\n    }\n\n    public getSecuritySchemeEditor(): SecuritySchemeEditorComponent {\n        return this.provider.getSecuritySchemeEditor();\n    }\n\n    public getSecurityRequirementEditor(): SecurityRequirementEditorComponent {\n        return this.provider.getSecurityRequirementEditor();\n    }\n\n    public getDataTypeEditor(): DataTypeEditorComponent {\n        return this.provider.getDataTypeEditor();\n    }\n\n    public getResponseEditor(): ResponseEditorComponent {\n        return this.provider.getResponseEditor();\n    }\n\n    public getParameterEditor(): ParameterEditorComponent {\n        return this.provider.getParameterEditor();\n    }\n\n    public getPropertyEditor(): PropertyEditorComponent {\n        return this.provider.getPropertyEditor();\n    }\n\n    public getOperationTraitEditor(): OperationTraitEditorComponent {\n        return this.provider.getOperationTraitEditor();\n    }\n\n    public getMessageTraitEditor(): MessageTraitEditorComponent {\n        return this.provider.getMessageTraitEditor();\n    }\n\n    public getMessageEditor(): MessageEditorComponent {\n        return this.provider.getMessageEditor();\n    }\n\n    public getOneOfInMessageEditor(): OneOfInMessageEditorComponent {\n        return this.provider.getOneOfInMessageEditor();\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    Library,\n    Oas30Example,\n    Oas30Parameter,\n    OasDocument,\n    OasOperation,\n    OasParameter,\n    OasPathItem,\n    Schema,\n    SimplifiedParameterType,\n    SimplifiedType\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport {EditExampleEvent} from \"../../dialogs/edit-example.component\";\nimport {DropDownOption, DropDownOptionValue} from \"../../common/drop-down.component\";\n\n\n@Component({\n    selector: \"query-param-row\",\n    templateUrl: \"query-param-row.component.html\",\n    styleUrls: [ \"query-param-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class QueryParamRowComponent extends AbstractRowComponent<OasParameter, SimplifiedParameterType> {\n\n    private _overriddenParam: OasParameter;\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onRename: EventEmitter<void> = new EventEmitter<void>();\n\n    private _parentType: string;\n\n    private overrideFlag: boolean;\n    private missingFlag: boolean;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        this._model = SimplifiedParameterType.fromParameter(this.item as any);\n        this.missingFlag = this.item.getAttribute(\"missing\") === true;\n        this._overriddenParam = this.getOverriddenParam(this.item);\n        this.overrideFlag = this._overriddenParam !== null;\n        this._parentType = this.detectParentType();\n    }\n\n    public isParentOperation(): boolean {\n        return this._parentType === \"operation\";\n    }\n\n    public isParentPath(): boolean {\n        return this._parentType === \"pathItem\";\n    }\n\n    public isParameter(): boolean {\n        return true;\n    }\n\n    public hasDescription(): boolean {\n        if (this.item.description) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public is3xDocument(): boolean {\n        return (<OasDocument> this.item.ownerDocument()).is3xDocument();\n    }\n\n    public hasExamples(): boolean {\n        if (this.item instanceof Oas30Parameter) {\n            return this.paramExamples().length > 0;\n        }\n        return false;\n    }\n\n    public paramExamples(): Oas30Example[] {\n        return <any>(<Oas30Parameter> this.item).getExamples();\n    }\n\n    public exampleValue(example: Oas30Example): string {\n        let evalue: any = example.value;\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n\n    public isRequired(): boolean {\n        return this.item.required;\n    }\n\n    public required(): string {\n        return this.isRequired() ? \"required\" : \"not-required\";\n    }\n\n    public requiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public isEditingDescription(): boolean {\n        return this.isEditingTab(\"description\");\n    }\n\n    public isEditingSummary(): boolean {\n        return this.isEditingTab(\"summary\");\n    }\n\n    public isEditingExamples(): boolean {\n        return this.isEditingTab(\"examples\");\n    }\n\n    public toggleDescription(): void {\n        if (this.isOverridable()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"description\");\n    }\n\n    public toggleSummary(): void {\n        if (this.isOverridable()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"summary\");\n    }\n\n    public toggleExamples(): void {\n        if (this.isOverridable() || this.isMissing()) {\n            this._editing = false;\n            return;\n        }\n        this.toggleTab(\"examples\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public displayType(): SimplifiedParameterType {\n        return SimplifiedParameterType.fromParameter(this.item as any);\n    }\n\n    public displayExamples(): string {\n        if (this.hasExamples()) {\n            return `${this.paramExamples().length} example(s) defined.`;\n        } else {\n            return \"No examples defined.\"\n        }\n    }\n\n    public rename(): void {\n        this.onRename.emit();\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model().required = newValue === \"required\";\n        let command: ICommand = CommandFactory.createChangePropertyCommand<boolean>(this.item, \"required\", this.model().required);\n        this.commandService.emit(command);\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedParameterType = new SimplifiedParameterType();\n        nt.required = this.model().required;\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeParameterTypeCommand(this.item.ownerDocument().getDocumentType(),\n            this.item as any, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n    public addExample(exampleData: any): void {\n        var param = <Oas30Parameter> this.item;\n        let command: ICommand = CommandFactory.createAddParameterExampleCommand(param,\n            exampleData.value, exampleData.name, null, null);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.item);\n        nodePath.appendSegment(\"examples\", false);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public deleteExample(example: Oas30Example): void {\n        console.info(\"[QueryParamRowComponent] Deleting an example of a query parameter.\");\n        let command: ICommand = CommandFactory.createDeleteParameterExampleCommand(example);\n        this.commandService.emit(command);\n    }\n\n    public deleteAllExamples(): void {\n        var param = <Oas30Parameter> this.item;\n        let command: ICommand = CommandFactory.createDeleteAllParameterExamplesCommand(param);\n        this.commandService.emit(command);\n    }\n\n    public editExample(event: EditExampleEvent): void {\n        console.info(\"[QueryParamRowComponent] Changing the value of a Parameter example.\");\n        if (this.item.ownerDocument().getDocumentType() === DocumentType.openapi3) {\n            let command: ICommand = CommandFactory.createSetParameterExampleCommand(<Oas30Parameter>this.item,\n                event.value, event.example.getName());\n            this.commandService.emit(command);\n        }\n    }\n\n    public schemaForExample(): Schema {\n        var param = <Oas30Parameter> this.item;\n        return param.schema;\n    }\n\n    public override(): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.item.parent() as any,\n            this.item.name, \"query\", null, null, true);\n        this.commandService.emit(command);\n\n        let nodePath = Library.createNodePath(this.item.parent());\n        let index: number = (this.item.parent() as any).parameters.findIndex(p => p.name === this.item.name); // TODO hackish\n        nodePath.appendSegment(\"parameters\", false);\n        nodePath.appendSegment(String(index), true);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    public isMissing(): boolean {\n        return this.missingFlag && !this.overrideFlag;\n    }\n\n    public isExists(): boolean {\n        return !this.missingFlag;\n    }\n\n    public isOverride(): boolean {\n        return !this.missingFlag && this.overrideFlag;\n    }\n\n    public isOverridable(): boolean {\n        return this.missingFlag && this.overrideFlag;\n    }\n\n    public isLocalOnly(): boolean {\n        return !this.overrideFlag && !this.missingFlag;\n    }\n\n    public getOverriddenParam(param: OasParameter): OasParameter {\n        let viz: DetectOverrideVisitor = new DetectOverrideVisitor(param);\n        param.parent().accept(viz);\n        return viz.overriddenParam;\n    }\n\n    private detectParentType(): string {\n        let viz: DetectParentTypeVisitor = new DetectParentTypeVisitor();\n        this.item.parent().accept(viz);\n        return viz.parentType;\n    }\n\n}\n\n\nclass DetectOverrideVisitor extends CombinedVisitorAdapter {\n\n    public overriddenParam: OasParameter = null;\n\n    constructor(private param: OasParameter) {\n        super();\n    }\n\n    public visitOperation(node: OasOperation): void {\n        this.overriddenParam = (<OasPathItem>node.parent()).getParameter(this.param.in, this.param.name) as OasParameter;\n    }\n\n}\n\n\nclass DetectParentTypeVisitor extends CombinedVisitorAdapter {\n\n    public parentType: string = null;\n\n    public visitOperation(node: OasOperation): void {\n        this.parentType = \"operation\";\n    }\n\n    public visitPathItem(node: OasPathItem): void {\n        this.parentType = \"pathItem\";\n    }\n\n}\n","<div class=\"query-param\" [class.expanded]=\"isEditing()\" [class.required]=\"isRequired()\" [class.overridable]=\"isOverridable()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"apicurio-icon-override icon-override\" *ngIf=\"isParentOperation() && isOverride()\"\n                  title=\"Overrides a parameter defined at the Path level.\"></span>\n            <span class=\"apicurio-icon-inherit-d icon-override\" *ngIf=\"isParentOperation() && isOverridable()\"\n                  title=\"Query parameter inherited from the Path level.\"></span>\n            <span class=\"apicurio-icon-local-d icon-override\" *ngIf=\"isParentOperation() && isLocalOnly()\"\n                  title=\"Query parameter defined for this operation only.\"></span>\n            <span title=\"{{ item.name }}\">{{ item.name }}</span>\n        </div>\n        <div class=\"description\" (click)=\"toggleDescription()\" [class.selected]=\"isEditingDescription()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingDescription()\"></span>\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"summary\" (click)=\"toggleSummary()\" [class.selected]=\"isEditingSummary()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingSummary()\"></span>\n            <span class=\"parameter-required\" *ngIf=\"isRequired()\" title=\"This query parameter is required.\">[required]</span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"examples\" (click)=\"toggleExamples()\" [class.selected]=\"isEditingExamples()\" *ngIf=\"is3xDocument()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingExamples()\"></span>\n            <span [class.empty]=\"!hasExamples()\"> {{ displayExamples() }}</span>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\" *ngIf=\"!isOverridable()\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"rename()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n            <button *ngIf=\"isOverridable()\" (click)=\"override()\" title=\"Override the query parameter.\"\n                    class=\"btn btn-default btn-xs btn-override\">Override</button>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"param-description\" *ngIf=\"isEditingDescription()\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'No description.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                    <div class=\"param-content\" *ngIf=\"isEditingSummary()\">\n                        <div class=\"param-required\">\n                            <span class=\"dropdown-label\">Parameter is</span>\n                            <drop-down [id]=\"'api-param-required'\"\n                                       [value]=\"required()\"\n                                       [options]=\"requiredOptions()\"\n                                       (onValueChange)=\"changeRequired($event)\"\n                                       [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                        </div>\n                        <div class=\"param-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"isParameter()\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n                    </div>\n                    <div class=\"param-examples\" *ngIf=\"isEditingExamples()\">\n                        <div class=\"form-label\">Examples</div>\n                        <signpost *ngIf=\"!hasExamples()\">\n                            <span>No examples have been defined.</span>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </signpost>\n                        <div *ngIf=\"hasExamples()\">\n                            <table class=\"table table-striped table-bordered table-examples\">\n                                <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th class=\"pre-actions\">Example</th>\n                                    <th class=\"actions\"></th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                <tr *ngFor=\"let example of paramExamples()\">\n                                    <td class=\"name\">\n                                        <validation-problem [model]=\"example\"></validation-problem>\n                                        <span>{{ example.getName() }}</span>\n                                    </td>\n                                    <td class=\"value pre-actions\">\n                                        <span>{{ exampleValue(example) }}</span>\n                                    </td>\n                                    <td class=\"actions\">\n                                        <div>\n                                            <icon-button (onClick)=\"deleteExample(example)\" [pullRight]=\"true\" type=\"delete\"\n                                                            [title]=\"'Delete example.'\"></icon-button>\n                                            <icon-button (onClick)=\"editExampleDialog.open(example)\" [pullRight]=\"true\" type=\"edit\"\n                                                            [title]=\"'Edit example.'\"></icon-button>\n                                        </div>\n                                    </td>\n                                </tr>\n                                </tbody>\n                            </table>\n                            <a (click)=\"addExampleDialog.open()\">Add an example</a>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n    <add-example-dialog #addExampleDialog (onAdd)=\"addExample($event)\" [schema]=\"schemaForExample()\"></add-example-dialog>\n    <edit-example-dialog #editExampleDialog (onEdit)=\"editExample($event)\" [schema]=\"schemaForExample()\"></edit-example-dialog>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandFactory, DocumentType, ICommand, Library, NodePath, Oas20Response, OasDocument, SimplifiedType} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {EditExample20Event} from \"../../../dialogs/edit-example-20.component\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\n\n\n@Component({\n    selector: \"response-tab\",\n    templateUrl: \"response-tab.component.html\",\n    styleUrls: [ \"response-tab.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResponseTabComponent extends AbstractBaseComponent {\n\n    @Input() response: Oas20Response;\n\n    protected _model: SimplifiedType = null;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    isRef(): boolean {\n        return this.response.$ref !== null && this.response.$ref !== undefined;\n    }\n\n    responseDefRefPrefix(): string {\n        let prefix: string = \"#/components/responses/\";\n        if (this.response.ownerDocument().getDocumentType() === DocumentType.openapi2) {\n            prefix = \"#/responses/\";\n        }\n        return prefix;\n    }\n\n    responseDefPathPrefix(): string {\n        return this.responseDefRefPrefix().substr(1);\n    }\n\n    definitionName(): string {\n        if (this.isRef()) {\n            let prefix: string = this.responseDefRefPrefix();\n            let $ref: string = this.response.$ref;\n            if ($ref.startsWith(prefix)) {\n                return $ref.substr(prefix.length);\n            }\n            return this.response.$ref\n        }\n        return null;\n    }\n\n    navigateToDefinition(): void {\n        let path: NodePath = new NodePath(this.responseDefPathPrefix());\n        path.appendSegment(this.definitionName(), true);\n        this.selectionService.select(path.toString());\n    }\n\n    protected onDocumentChange(): void {\n        this._model = SimplifiedType.fromSchema(this.response.schema);\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        if (changes[\"response\"]) {\n            this._model = SimplifiedType.fromSchema(this.response.schema);\n        }\n    }\n\n    public model(): SimplifiedType {\n        return this._model;\n    }\n\n    public document(): OasDocument {\n        return <OasDocument> this.response.ownerDocument();\n    }\n\n    public hasExamples(): boolean {\n        if (ObjectUtils.isNullOrUndefined(this.response.examples)) {\n            return false;\n        }\n        return this.response.examples.getExampleContentTypes().length > 0;\n    }\n\n    public exampleContentTypes(): string[] {\n        return this.response.examples.getExampleContentTypes();\n    }\n\n    public exampleDisplayValue(contentType: string): string {\n        let evalue: any = this.response.examples.getExample(contentType);\n        if (typeof evalue === \"object\" || Array.isArray(evalue)) {\n            evalue = JSON.stringify(evalue);\n        }\n        return evalue;\n    }\n\n    public exampleValue(contentType: string): string {\n        let evalue: any = this.response.examples.getExample(contentType);\n        return evalue;\n    }\n\n    public displayType(): SimplifiedType {\n        return SimplifiedType.fromSchema(this.response.schema);\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedType = new SimplifiedType();\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangeResponseTypeCommand(this.response, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.response, \"description\",\n            description);\n        this.commandService.emit(command);\n    }\n\n    public deleteExample(contentType: string): void {\n        let command: ICommand = CommandFactory.createDelete20ExampleCommand(this.response, contentType);\n        this.commandService.emit(command);\n    }\n\n    public addExample(exampleData: any): void {\n        let command: ICommand = CommandFactory.createSetExampleCommand(this.document().getDocumentType(), this.response,\n            exampleData.value, exampleData.contentType);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.response);\n        nodePath.appendSegment(\"examples\", false);\n        this.selectionService.select(nodePath.toString());\n    }\n\n    public editExample(event: EditExample20Event): void {\n        let command: ICommand = CommandFactory.createSetExampleCommand(this.document().getDocumentType(), this.response,\n            event.value, event.contentType);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.response);\n        nodePath.appendSegment(\"examples\", false);\n        this.selectionService.select(nodePath.toString());\n    }\n\n}\n","<div class=\"response\">\n    <div class=\"response-description\" *ngIf=\"!isRef()\">\n        <div class=\"form-label\">Description</div>\n        <div class=\"problem-flex\">\n            <validation-problem [model]=\"response\" property=\"description\"></validation-problem>\n            <div class=\"grow\">\n                <inline-markdown-editor [value]=\"response.description\" noValueMessage=\"No description.\"\n                                        [baseNode]=\"response\" nodePath=\"description\"\n                                        (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n            </div>\n        </div>\n    </div>\n    <div class=\"response-type\" *ngIf=\"!isRef()\">\n        <div class=\"form-label\">Response Type</div>\n        <div class=\"problem-flex\">\n            <validation-problem [model]=\"response.schema\"></validation-problem>\n            <div class=\"grow\">\n                <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"false\"\n                                    (onChange)=\"changeType($event)\"></schema-type-editor>\n            </div>\n        </div>\n    </div>\n    <div class=\"response-examples\" *ngIf=\"!isRef()\">\n        <div class=\"form-label\">Examples</div>\n        <div class=\"problem-flex\">\n            <validation-problem [model]=\"response.examples\"></validation-problem>\n            <div class=\"grow\">\n                <table *ngIf=\"hasExamples()\" class=\"table table-striped table-bordered table-examples\">\n                    <thead>\n                    <tr>\n                        <th>Content Type</th>\n                        <th class=\"pre-actions\">Example</th>\n                        <th class=\"actions\"></th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    <tr *ngFor=\"let contentType of exampleContentTypes()\">\n                        <td class=\"content-type\">\n                            <span>{{ contentType }}</span>\n                        </td>\n                        <td class=\"value pre-actions\">{{ exampleDisplayValue(contentType) }}</td>\n                        <td class=\"actions\">\n                            <div>\n                                <icon-button (onClick)=\"deleteExample(contentType)\" [pullRight]=\"true\" type=\"delete\"\n                                             [title]=\"'Delete example.'\"></icon-button>\n                                <icon-button (onClick)=\"editExampleDialog.open(contentType, exampleValue(contentType))\" [pullRight]=\"true\" [type]=\"'edit'\"\n                                             [title]=\"'Edit example.'\"></icon-button>\n                            </div>\n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n                <a (click)=\"addExampleDialog.open()\">Add an example</a>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"response-ref\" *ngIf=\"isRef()\">\n        <div class=\"form-label\">Response Definition</div>\n        <validation-problem [model]=\"response\" property=\"$ref\"></validation-problem>\n        <span>This response references the </span>\n        <em><a (click)=\"navigateToDefinition()\">{{ definitionName() }}</a></em>\n        <span> Response Definition.</span>\n    </div>\n</div>\n<add-example-20-dialog #addExampleDialog (onAdd)=\"addExample($event)\" [schema]=\"response.schema\"></add-example-20-dialog>\n<edit-example-20-dialog #editExampleDialog (onEdit)=\"editExample($event)\" [schema]=\"response.schema\"></edit-example-20-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AaiMessage} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\n@Component({\n    selector: \"[message-item]\",\n    templateUrl: \"message-item.component.html\",\n    styleUrls: [ \"message-item.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MessageItemComponent extends AbstractBaseComponent {\n\n    @Input() message: AaiMessage;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns the name of the message .\n     */\n    public messageName(): string {\n        return this.message.getName();\n    }\n\n    /**\n     * Gets the node path for the message .\n     */\n    public asNodePath(): string {\n        return ModelUtils.nodeToPath(this.message);\n    }\n\n    /**\n     * Returns true iff the message  definition is \"imported\".  A definition is imported if it has a $ref\n     * that refers to an external source (anything other than #/ references).\n     */\n    isImported(): boolean {\n        let $ref: string = this.message.$ref;\n        return ($ref && $ref.indexOf(\"#\") != 0);\n    }\n\n}\n","<span class=\"icon fa fa-fw fa-envelope-square\"></span>\n<span class=\"name\">{{ messageName() }}</span>\n<span class=\"imported label label-info\" *ngIf=\"isImported()\">Imported</span>\n<collaborator-aggregate [nodePath]=\"asNodePath()\"></collaborator-aggregate>\n<validation-aggregate [models]=\"[message]\"></validation-aggregate>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    Aai20NodeFactory, AaiSecurityRequirement,\n    AaiServer,\n    CommandFactory,\n    ICommand,\n    Library,\n    SecurityRequirement\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {\n    ISecurityRequirementEditorHandler,\n    SecurityRequirementEditorComponent,\n    SecurityRequirementEditorEvent\n} from \"../../editors/security-requirement-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\n\n\n@Component({\n    selector: \"aaisecurity-requirement-row\",\n    templateUrl: \"aaisecurity-requirement-row.component.html\",\n    styleUrls: [ \"security-requirements-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AaiSecurityRequirementRowComponent extends AbstractBaseComponent {\n\n    @Input() parent: AaiServer;\n    @Input() global: boolean;\n    @Input() item: AaiSecurityRequirement;\n\n    @Output() onEdit: EventEmitter<SecurityRequirementEditorEvent> = new EventEmitter<SecurityRequirementEditorEvent>();\n    @Output() onDelete: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editorsService: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    public contextHelp(): string {\n        return `\n            Use this section to configure which of the Security Schemes are needed in order to use this\n            specific server.  You can add multiple security requirements, resulting in consumers being allowed to\n            provided any one of them.  Each security requirement consists of one or more\n            Security Scheme and (in the case of certain security types like OAuth) a list of the scopes the\n            consumer must have.`;\n    }\n\n    /**\n     * Called when the user adds a new security requirement.\n     * @param event\n     */\n    public addSecurityRequirement(event: SecurityRequirementEditorEvent): void {\n        console.info(\"[SecurityRequirementsSectionComponent] Adding security requirement: \", event);\n        new Aai20NodeFactory().createSecurityRequirement(this.parent)\n        let requirement: SecurityRequirement = this.parent.createSecurityRequirement();\n        let command: ICommand = CommandFactory.createAddSecurityRequirementCommand(this.parent, requirement);\n        Library.readNode(event.data, requirement);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes an existing Security Requirement.\n     * @param event\n     */\n    public changeSecurityRequirement(event: SecurityRequirementEditorEvent): void {\n        let newRequirement: SecurityRequirement = this.parent.createSecurityRequirement();\n        Library.readNode(event.data, newRequirement);\n        let command: ICommand = CommandFactory.createReplaceSecurityRequirementCommand(event.entity, newRequirement);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Deletes a security requirement.\n     * @param requirement\n     */\n    public deleteSecurityRequirement(requirement: SecurityRequirement): void {\n        let command: ICommand = CommandFactory.createDeleteSecurityRequirementCommand(this.parent, requirement);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Returns a summary of the requirement.\n     * @param requirement\n     */\n    public securityRequirementSummary(requirement: SecurityRequirement): string {\n        return requirement.getSecurityRequirementNames().join(\", \");\n    }\n\n    /**\n     * Opens the security requirement editor for adding or editing a security requirement.\n     * @param requirement\n     */\n    public openSecurityRequirementEditor(requirement?: SecurityRequirement): void {\n        let editor: SecurityRequirementEditorComponent = this.editorsService.getSecurityRequirementEditor();\n        let handler: ISecurityRequirementEditorHandler = {\n            onSave: (event: SecurityRequirementEditorEvent) => {\n                if (requirement) {\n                    this.changeSecurityRequirement(event);\n                } else {\n                    this.addSecurityRequirement(event);\n                }\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.parent, requirement);\n    }\n\n    /**\n     * Returns true if there is at least one security requirement defined.\n     */\n    public hasSecurityRequirements(): boolean {\n        return this.securityRequirements().length > 0;\n    }\n\n    /**\n     * Returns all defined security requirements.\n     */\n    public securityRequirements(): SecurityRequirement[] {\n        return this.parent.security ? this.parent.security : [];\n    }\n\n    public securityRequirementsPath(): string {\n        return ModelUtils.nodeToPath(this.parent) + \"/security\";\n    }\n\n    /**\n     * Returns the set of scopes (if any) needed for a particular requirement+scheme name.\n     * @param requirement\n     * @param schemeName\n     */\n    public requirementScopes(requirement: SecurityRequirement, schemeName: string): string {\n        let scopes: any[] = requirement.getScopes(schemeName);\n        if (scopes && scopes.length > 0) {\n            return scopes.join(\", \");\n        } else {\n            return \"\";\n        }\n    }\n\n    /**\n     * Returns true if the given security requirement represents \"anonymous\" access (no security).\n     * @param requirement\n     */\n    public isAnonSecurity(requirement: SecurityRequirement): boolean {\n        let schemes: string[] = requirement.getSecurityRequirementNames();\n        return !schemes || schemes.length === 0;\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the servers.\n     */\n    public deleteAllSecurityRequirements(): void {\n        let command: ICommand = CommandFactory.createDeleteAllSecurityRequirementsCommand(this.parent);\n        this.commandService.emit(command);\n    }\n\n}\n","<div class=\"security-requirement\">\n    <div class=\"name\">\n        <validation-problem [model]=\"item\" [shallow]=\"true\"></validation-problem>\n        <span class=\"fa fa-lock fa-fw\" *ngIf=\"!isAnonSecurity(item)\"></span>\n        <span class=\"fa fa-unlock fa-fw\" *ngIf=\"isAnonSecurity(item)\"></span>\n        <span class=\"requirement-label\" *ngIf=\"!isAnonSecurity(item)\">{{ item.getSecurityRequirementNames().join(\", \") }}</span>\n        <span class=\"requirement-label no-security\" *ngIf=\"isAnonSecurity(item)\">No Security</span>\n    </div>\n    <div class=\"actions\">\n        <div class=\"dropdown dropdown-kebab-pf\">\n            <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                <span class=\"fa fa-ellipsis-v\"></span>\n            </button>\n            <ul class=\"dropdown-menu dropdown-menu-right\">\n                <li><a (click)=\"openSecurityRequirementEditor(item)\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Edit</span></a></li>\n                <li role=\"separator\" class=\"divider\"></li>\n                <li><a (click)=\"deleteSecurityRequirement(item)\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n            </ul>\n        </div>\n    </div>\n</div>\n\n","/**\n * @license\n * Copyright 2018 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Input, OnChanges, SimpleChanges, ViewEncapsulation} from \"@angular/core\";\nimport * as marked from \"marked\";\n\n@Component({\n    selector: \"markdown\",\n    template: `<div class=\"md-container\" [innerHTML]=\"convertedData\" [class.empty]=\"isEmpty()\"></div>`,\n    styleUrls: [\"markdown.component.css\"],\n    encapsulation: ViewEncapsulation.None\n})\nexport class MarkdownComponent implements OnChanges {\n    @Input(\"data\")\n    data: string;\n    @Input(\"emptyText\")\n    emptyText: string = \"No value.\";\n\n    public convertedData: any;\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.data) {\n            this.convertedData = marked.parse(this.data, {\n                sanitize: true\n            });\n        }\n    }\n\n    public isEmpty(): boolean {\n        return this.data === null || this.data === undefined || this.data.trim().length === 0;\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {AfterViewInit, Component, QueryList, ViewChildren, ViewEncapsulation} from \"@angular/core\";\nimport {TextAreaEditorComponent} from \"./inline-editor.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CodeEditorComponent, CodeEditorMode} from \"./code-editor.component\";\n\n@Component({\n    selector: \"inline-markdown-editor\",\n    templateUrl: \"inline-markdown-editor.component.html\",\n    styleUrls: [ \"inline-markdown-editor.component.css\" ],\n    encapsulation: ViewEncapsulation.None\n})\nexport class InlineMarkdownEditorComponent extends TextAreaEditorComponent implements AfterViewInit {\n\n    @ViewChildren(\"codeEditor\") codeEditor: QueryList<CodeEditorComponent>;\n\n    constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    ngAfterViewInit(): void {\n        this.codeEditor.changes.subscribe(changes => {\n            if (changes.last) {\n                changes.last.focus();\n            }\n        });\n    }\n\n    public codeEditorMode(): CodeEditorMode {\n        return CodeEditorMode.Markdown;\n    }\n\n    protected getValueForSave(): string {\n        return this.codeEditor.first.text;\n    }\n\n}\n","<div class=\"md-description inline-markdown-editor-label\" *ngIf=\"!editing\" (click)=\"onStartEditing()\" title=\"Click to edit.\">\n    <markdown [data]=\"displayValue()\" *ngIf=\"!isEmpty()\"></markdown>\n    <div *ngIf=\"isEmpty()\">\n        <span class=\"empty\">{{ noValueMessage }}</span>\n        <i class=\"glyphicon glyphicon-pencil\"></i>\n    </div>\n</div>\n<div class=\"inline-editor inline-markdown-editor\" *ngIf=\"editing\" (keyup)=\"onInputKeypress($event)\">\n    <code-editor [mode]=\"codeEditorMode()\" #codeEditor\n                 [debounceTime]=\"150\"\n                 [(text)]=\"evalue\"\n                 wordWrap=\"true\"\n                 [editorStyle]=\"{ position: 'relative', height: '220px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n    <button title=\"Save changes.\" class=\"btn btn-xs btn-primary\" (click)=\"onSave()\"><span class=\"fa fa-fw fa-check\"></span></button>\n    <button title=\"Cancel changes.\" class=\"btn btn-xs btn-default\" (click)=\"onCancel()\"><span class=\"fa fa-fw fa-close\"></span></button>\n</div>\n","/**\n * @license\n * Copyright 2019 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ApiEditorComponentFeatures {\n    validationSettings: boolean = false;\n    componentImports: boolean = false;\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AaiOperationTraitDefinition} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\n@Component({\n    selector: \"[operationtrait-item]\",\n    templateUrl: \"operationtrait-item.component.html\",\n    styleUrls: [ \"operationtrait-item.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OperationTraitItemComponent extends AbstractBaseComponent {\n\n    @Input() operationTrait: AaiOperationTraitDefinition;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns the name of the operation trait.\n     */\n    public operationTraitName(): string {\n        return this.operationTrait.getName();\n    }\n\n    /**\n     * Gets the node path for the operation trait.\n     */\n    public asNodePath(): string {\n        return ModelUtils.nodeToPath(this.operationTrait);\n    }\n\n    /**\n     * Returns true if the operation trait definition is \"imported\".  A definition is imported if it has a $ref\n     * that refers to an external source (anything other than #/ references).\n     */\n    isImported(): boolean {\n        let $ref: string = this.operationTrait.$ref;\n        return ($ref && $ref.indexOf(\"#\") != 0);\n    }\n\n}\n","<span class=\"icon fa fa-fw fa-cog\"></span>\n<span class=\"name\">{{ operationTraitName() }}</span>\n<span class=\"imported label label-info\" *ngIf=\"isImported()\">Imported</span>\n<collaborator-aggregate [nodePath]=\"asNodePath()\"></collaborator-aggregate>\n<validation-aggregate [models]=\"[operationTrait]\"></validation-aggregate>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {OasDocument, Library, CommandFactory} from \"@apicurio/data-models\";\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {ICommand} from \"@apicurio/data-models\";\nimport {EditorsService} from \"../../_services/editors.service\";\n\n\n@Component({\n    selector: \"main-form\",\n    templateUrl: \"main-form.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MainFormComponent extends SourceFormComponent<OasDocument> {\n\n    _document: OasDocument;\n    @Input()\n    set document(doc: OasDocument) {\n        this._document = doc;\n        this.sourceNode = doc;\n        this.revertSource();\n    }\n    get document(): OasDocument {\n        return this._document;\n    }\n\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n                       protected selectionService: SelectionService,\n                       protected commandService: CommandService,\n                       protected documentService: DocumentService,\n                       private editors: EditorsService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    /**\n     * Returns true if the form is for an OpenAPI 3.x document.\n     */\n    public is3xForm(): boolean {\n        return this.document.is3xDocument();\n    }\n\n    protected createEmptyNodeForSource(): OasDocument {\n        return <OasDocument> Library.createDocument(this.document.getDocumentType());\n    }\n\n    protected createReplaceNodeCommand(node: OasDocument): ICommand {\n        return CommandFactory.createReplaceDocumentCommand(this.document, node);\n    }\n\n    public saveSource(): void {\n        super.saveSource();\n        this.sourceNode = this._document;\n    }\n\n}\n","<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n\n    <!-- Info about the API -->\n    <info-section [document]=\"document\"></info-section>\n\n    <!-- Contact Info -->\n    <contact-section [document]=\"document\"></contact-section>\n\n    <!-- License -->\n    <license-section [document]=\"document\"></license-section>\n\n    <!-- Global Tags -->\n    <tags-section [document]=\"document\"></tags-section>\n\n    <!-- Global Servers -->\n    <servers-section *ngIf=\"is3xForm()\" [parent]=\"document\" [collapsed]=\"false\"\n                     [description]=\"'Configure global servers for your API in this section.  Once defined, servers indicate where to access the API (e.g. host and port).'\"></servers-section>\n\n    <!-- Security Schemes -->\n    <security-schemes-section [document]=\"document\"></security-schemes-section>\n\n    <!-- Security Requirements -->\n    <security-requirements-section [parent]=\"document\" [global]=\"true\"></security-requirements-section>\n\n    <!-- Vendor Extensions -->\n    <extensions-section [parent]=\"document\"></extensions-section>\n\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from \"@angular/core\";\n\n@Component({\n    selector: \"signpost\",\n    templateUrl: \"signpost.component.html\",\n    styleUrls: [\"signpost.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SignpostComponent {\n\n}\n","<div class=\"container-fluid api-signpost\">\n    <div class=\"row-fluid\">\n        <ng-content></ng-content>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ElementRef, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {OasDocument} from \"@apicurio/data-models\";\n\n@Component({\n    selector: \"add-path-dialog\",\n    templateUrl: \"add-path.component.html\"\n})\nexport class AddPathDialogComponent {\n\n    @Output() onAdd: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"addPathModal\") addPathModal: QueryList<ModalDirective>;\n    @ViewChildren(\"addPathInput\") addPathInput: QueryList<ElementRef>;\n\n    private _isOpen: boolean = false;\n\n    path: string = \"\";\n\n    paths: string[] = [];\n    pathExists: boolean = false;\n\n    /**\n     * Called to open the dialog.\n     * @param document\n     * @param path\n     */\n    public open(document: OasDocument, path?: string): void {\n        this.path = path;\n        if (!path) {\n            this.path = \"\";\n        }\n        if (!this.path.endsWith(\"/\")) {\n            this.path = this.path + \"/\";\n        }\n        this._isOpen = true;\n        this.addPathModal.changes.subscribe( thing => {\n            if (this.addPathModal.first) {\n                this.addPathModal.first.show();\n            }\n        });\n\n        this.paths = [];\n        this.pathExists = false;\n        if (document.paths) {\n            document.paths.getPathItems().forEach( pathItem => {\n                this.paths.push(pathItem.getPath());\n            });\n        }\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.path = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        this.onAdd.emit(this.path);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addPathModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Called to initialize the selection/focus to the addPathInput field.\n     */\n    doSelect(): void {\n        this.addPathInput.first.nativeElement.focus();\n        this.addPathInput.first.nativeElement.selectionStart = this.addPathInput.first.nativeElement.selectionEnd = this.path.length\n    }\n\n    /**\n     * Called whenever the user types anything in the path field - this validates that the path entered\n     * is OK.\n     * @param newPath\n     */\n    validatePath(newPath: string) {\n        this.pathExists = this.paths.indexOf(newPath) != -1;\n    }\n}\n","<!-- Add Path Dialog -->\n<div bsModal #addPathModal=\"bs-modal\" class=\"modal fade\" id=\"addPathModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addPathModalLabel\"\n     role=\"dialog\" aria-hidden=\"true\" (onShown)=\"doSelect()\" [config]=\"{ backdrop: true }\"\n     (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addPathModalLabel\">Add Path</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter a new resource path below and then click Add.</p>\n                <form id=\"addpath-form\" class=\"form-horizontal\" (submit)=\"add()\" #addPathForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label required\" for=\"path\">Path</label>\n                        <div class=\"col-sm-10\">\n                            <input #addPathInput name=\"path\" type=\"text\" id=\"path\" class=\"form-control\" placeholder=\"Enter a Path\"\n                                   pattern=\"(\\/[^{}\\/]*(\\{[a-zA-Z_][0-9a-zA-Z_]*\\})?)+\" required [(ngModel)]=\"path\"\n                                   (ngModelChange)=\"validatePath($event)\" #thepath=\"ngModel\">\n                            <div class=\"form-error-message error\" *ngIf=\"pathExists\">Path already exists.</div>\n                            <form-error-message [inputModel]=\"thepath\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid path.</form-error-message>\n                            <form-error-message [inputModel]=\"thepath\" [type]=\"'required'\">Path is required.</form-error-message>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!addPathForm.form.valid || pathExists\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Input, ViewChild} from \"@angular/core\";\nimport {LoggerService} from \"../../services/logger.service\";\nimport {EditorComponent} from \"./editor.component\";\nimport {WindowRef} from \"../../services/window-ref.service\";\nimport {ApiDefinition} from \"../../editor/_models/api.model\";\nimport {AaiEditorComponent} from \"../../editor/aaieditor.component\";\n\n\n@Component({\n    selector: \"asyncapi-editor\",\n    templateUrl: \"asyncapi-editor.component.html\",\n    styleUrls: [\"asyncapi-editor.component.css\"]\n})\nexport class AsyncApiEditorComponent implements EditorComponent {\n\n    // @ts-ignore\n    @Input() api: ApiDefinition;\n\n    @ViewChild(\"apiEditor\") apiEditor: AaiEditorComponent | undefined;\n\n    /**\n     * Constructor.\n     */\n    constructor(private logger: LoggerService, private window: WindowRef) {\n    }\n\n    /**\n     * Called whenever the API definition is changed by the user.\n     */\n    public documentChanged(): any {\n        this.logger.info(\"[AsyncApiEditorComponent] Detected a document change\");\n        const newValue: ApiDefinition = this.apiEditor.getValue();\n        const message: any = {\n            type: \"apicurio_onChange\",\n            data: {\n                content: newValue.spec\n            }\n        };\n        this.window.window.top.postMessage(message, \"*\");\n    }\n\n    public getValue(): string {\n        const value: ApiDefinition = this.apiEditor.getValue();\n        return JSON.stringify(value.spec, null, 4);\n    }\n\n}\n","<div class=\"openapi-editor\" id=\"openapi-editor\">\n    <aai-editor #apiEditor [api]=\"api\" [embedded]=\"true\" (onCommandExecuted)=\"documentChanged()\"\n                (onUndo)=\"documentChanged()\" (onRedo)=\"documentChanged()\"\n                [features]=\"{ componentImports: false, validationSettings: false }\"></aai-editor>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n@Component({\n    selector: \"undo-icon\",\n    templateUrl: \"undo-icon.component.html\",\n    styleUrls: [\"undo-icon.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UndoIconComponent extends AbstractBaseComponent {\n\n    @Input() commandStackCount: number;\n    @Output() onClick: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public isUndoable(): boolean {\n        return this.commandStackCount > 0;\n    }\n}\n","<div class=\"undo-icon\">\n    <button class=\"btn btn-link nav-item-iconic\" [class.enabled]=\"isUndoable()\"\n            title=\"Click to undo the last change.\" (click)=\"onClick.emit(true)\">\n        <span class=\"fa fa-share fa-flip-horizontal\"></span>\n    </button>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    IOasParameterParent,\n    Library,\n    Node,\n    Oas20Operation,\n    Oas20Parameter,\n    Oas20PathItem,\n    Oas30Operation,\n    Oas30Parameter,\n    Oas30PathItem,\n    OasOperation,\n    OasParameter,\n    OasPathItem\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {\n    IParameterEditorHandler,\n    ParameterData,\n    ParameterEditorComponent\n} from \"../../editors/parameter-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\n\n@Component({\n    selector: \"header-params-section\",\n    templateUrl: \"header-params-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderParamsSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: IOasParameterParent;\n    @Input() path: OasPathItem;\n\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    private _headerParameters: OasParameter[] = null;\n\n    public showSectionBody: boolean;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private commandService: CommandService,\n                private documentService: DocumentService, private editors: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        this._headerParameters = null;\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showSectionBody = this.hasHeaderParameters();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        this._headerParameters = null;\n    }\n\n    public isPathItem(): boolean {\n        return this.parent === this.path;\n    }\n\n    public contextHelp(): string {\n        if (this.isPathItem()) {\n            return `\n                Use this section to define HTTP Header Parameters for all of the Operations in this\n                path.  These header parameters will apply to all operations and can be overridden\n                (though not removed) at the operation level.`;\n        } else {\n            return `\n                An operation may, optionally, allow additional options to be sent via HTTP header\n                parameters.  This section allows you to document what header parameters are\n                accepted/expected by this operation.`;\n        }\n    }\n\n    public hasParameters(type: string): boolean {\n        return this.parent.getParametersIn(type).length > 0\n    }\n\n    public hasHeaderParameters(): boolean {\n        return this.parent.getParametersIn(\"header\").length > 0 || this.path.getParametersIn(\"header\").length > 0;\n    }\n\n    public parameters(paramType: string): OasParameter[] {\n        let params: OasParameter[] = this.parent.getParametersIn(paramType);\n        return params.sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n    }\n\n    public headerParameters(): OasParameter[] {\n        if (this.isPathItem()) {\n            return this.parameters(\"header\");\n        }\n\n        if (this._headerParameters !== null) {\n            return this._headerParameters;\n        }\n\n        let opParams: OasParameter[] = this.parameters(\"header\");\n        let piParams: OasParameter[] = this.path.getParametersIn(\"header\");\n        let hasOpParam = function(param: OasParameter): boolean {\n            var found: boolean = false;\n            opParams.forEach( opParam => {\n                if (opParam.name === param.name) {\n                    found = true;\n                }\n            });\n            return found;\n        };\n        piParams.forEach( param => {\n            if (!hasOpParam(param)) {\n                let missingParam: OasParameter = this.parent.createParameter();\n                Library.readNode(Library.writeNode(param), missingParam);\n                missingParam.setAttribute(\"missing\", true);\n                opParams.push(missingParam);\n            }\n        });\n        this._headerParameters = opParams.sort((param1, param2) => {\n            return param1.name.localeCompare(param2.name);\n        });\n        return this._headerParameters;\n    }\n\n    public headerParameterPaths(): string[] {\n        return this.parent.getParametersIn(\"header\").map( param => {\n            return ModelUtils.nodeToPath(param);\n        });\n    }\n\n    public openAddHeaderParamEditor(): void {\n        let editor: ParameterEditorComponent = this.editors.getParameterEditor();\n        editor.setParamType(\"header\");\n        let handler: IParameterEditorHandler = {\n            onSave: (event) => {\n                this.addHeaderParam(event.data);\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, <OasPathItem | OasOperation> this.parent);\n    }\n\n    public deleteAllHeaderParams(): void {\n        let command: ICommand = CommandFactory.createDeleteAllParametersCommand(this.parent, \"header\");\n        this.commandService.emit(command);\n    }\n\n    public deleteParam(parameter: OasParameter): void {\n        let command: ICommand = CommandFactory.createDeleteParameterCommand(parameter);\n        this.commandService.emit(command);\n    }\n\n    public addHeaderParam(data: ParameterData): void {\n        let command: ICommand = CommandFactory.createNewParamCommand(this.parent, data.name,\n            \"header\", data.description, data.type, false);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath((this.parent as any) as Node); // This should be OK for now, but still unsafe, TODO fix\n        let index: number = this.parent.getParameters().findIndex(p => p.name === data.name); // TODO hackish\n        nodePath.appendSegment(\"parameters\", false);\n        nodePath.appendSegment(String(index), true);\n        this.__selectionService.select(nodePath.toString());\n    }\n\n    /**\n     * Opens the rename parameter dialog.\n     * @param parameter\n     */\n    public openRenameDialog(parameter: OasParameter): void {\n        let parent: IOasParameterParent = <any>parameter.parent();\n        let paramNames: string[] = parent.getParametersIn(\"header\").map( param => { return param.name; });\n        this.renameDialog.open(parameter, parameter.name, newName => {\n            return paramNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the parameter.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        let parameter: OasParameter = <any>event.entity;\n        let parent: OasPathItem | OasOperation = <any>parameter.parent();\n        let command: ICommand = CommandFactory.createRenameParameterCommand(parent, parameter.name, event.newName, \"header\");\n        this.commandService.emit(command);\n    }\n\n}\n","<!-- Header Parameters Section -->\n<section type=\"header-parameters\" label=\"HEADER PARAMETERS\"\n         [counterItems]=\"headerParameters()\"\n         [contextHelp]=\"contextHelp()\" [expanded]=\"showSectionBody\"\n         [collaborationNodePath]=\"headerParameterPaths()\"\n         [validationModels]=\"headerParameters()\">\n    <span actions>\n        <icon-button (onClick)=\"openAddHeaderParamEditor()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a new header parameter.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllHeaderParams()\" [disabled]=\"!hasHeaderParameters()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete all header parameters.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasHeaderParameters()\">\n            <span>No header parameters have been defined.</span>\n            <a (click)=\"openAddHeaderParamEditor()\">Add a header parameter</a>\n        </signpost>\n\n        <!-- The list of header parameters -->\n        <div class=\"container-fluid header-parameters typed-item-list\" *ngIf=\"hasHeaderParameters()\">\n            <header-param-row *ngFor=\"let param of headerParameters()\" [item]=\"param\"\n                              (onRename)=\"openRenameDialog(param)\"\n                              (onDelete)=\"deleteParam(param)\"></header-param-row>\n        </div>\n    </div>\n</section>\n<rename-entity-dialog #renameDialog\n                      type=\"Header\"\n                      title=\"Rename Header\"\n                      warning=\"Renaming a Header may also update any headers with the same name depending on path and operation hierarchies.\"\n                      validationPattern=\"[a-zA-Z0-9\\.\\-_\\$]+\"\n                      validationError=\"Enter a valid name (only alpha-numeric characters, ., -, _ and $ are allowed - no whitespace).\"\n                      (onRename)=\"rename($event)\"></rename-entity-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Library,\n    OasDocument,\n    OasOperation,\n    OasSecurityRequirement\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {\n    ISecurityRequirementEditorHandler,\n    SecurityRequirementEditorComponent,\n    SecurityRequirementEditorEvent\n} from \"../../editors/security-requirement-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\n\n\n@Component({\n    selector: \"security-requirements-section\",\n    templateUrl: \"security-requirements-section.component.html\",\n    styleUrls: [ \"security-requirements-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SecurityRequirementsSectionComponent extends AbstractBaseComponent {\n\n    @Input() parent: OasDocument | OasOperation;\n    @Input() global: boolean;\n\n    public showSectionBody: boolean;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editorsService: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n        this.showSectionBody = this.global;\n    }\n\n    public contextHelp(): string {\n        if (this.global) {\n            return `\n                Use this section to configure which of the Security Schemes are needed in order to invoke operations\n                in the API.  You can add multiple security requirements, resulting in consumers being allowed to\n                provided any one of them.  Each security requirement consists of one or more\n                Security Scheme and (in the case of certain security types like OAuth) a list of the scopes the\n                consumer must have.`;\n        } else {\n            return `\n                Use this section to configure which of the Security Schemes are needed in order to invoke this\n                specific operation.  You can add multiple security requirements, resulting in consumers being allowed to\n                provided any one of them.  Each security requirement consists of one or more\n                Security Scheme and (in the case of certain security types like OAuth) a list of the scopes the\n                consumer must have.`;\n        }\n    }\n\n    /**\n     * Called when the user adds a new security requirement.\n     * @param event\n     */\n    public addSecurityRequirement(event: SecurityRequirementEditorEvent): void {\n        console.info(\"[SecurityRequirementsSectionComponent] Adding security requirement: \", event);\n        let requirement: OasSecurityRequirement = this.parent.createSecurityRequirement();\n        Library.readNode(event.data, requirement);\n        let command: ICommand = CommandFactory.createAddSecurityRequirementCommand(this.parent, requirement);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes an existing Security Requirement.\n     * @param event\n     */\n    public changeSecurityRequirement(event: SecurityRequirementEditorEvent): void {\n        let newRequirement: OasSecurityRequirement = this.parent.createSecurityRequirement();\n        Library.readNode(event.data, newRequirement);\n        let command: ICommand = CommandFactory.createReplaceSecurityRequirementCommand(event.entity, newRequirement);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Deletes a security requirement.\n     * @param requirement\n     */\n    public deleteSecurityRequirement(requirement: OasSecurityRequirement): void {\n        let command: ICommand = CommandFactory.createDeleteSecurityRequirementCommand(this.parent, requirement);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Returns a summary of the requirement.\n     * @param requirement\n     */\n    public securityRequirementSummary(requirement: OasSecurityRequirement): string {\n        return requirement.getSecurityRequirementNames().join(\", \");\n    }\n\n    /**\n     * Opens the security requirement editor for adding or editing a security requirement.\n     * @param requirement\n     */\n    public openSecurityRequirementEditor(requirement?: OasSecurityRequirement): void {\n        let editor: SecurityRequirementEditorComponent = this.editorsService.getSecurityRequirementEditor();\n        let handler: ISecurityRequirementEditorHandler = {\n            onSave: (event: SecurityRequirementEditorEvent) => {\n                if (requirement) {\n                    this.changeSecurityRequirement(event);\n                } else {\n                    this.addSecurityRequirement(event);\n                }\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.parent, requirement);\n    }\n\n    /**\n     * Returns true if there is at least one security requirement defined.\n     */\n    public hasSecurityRequirements(): boolean {\n        return this.securityRequirements().length > 0;\n    }\n\n    /**\n     * Returns all defined security requirements.\n     */\n    public securityRequirements(): OasSecurityRequirement[] {\n        return this.parent.security ? this.parent.security : [];\n    }\n\n    public securityRequirementsPath(): string {\n        if (this.parent.ownerDocument() === this.parent) {\n            return \"/security\";\n        } else {\n            return ModelUtils.nodeToPath(this.parent) + \"/security\";\n        }\n    }\n\n    /**\n     * Returns the set of scopes (if any) needed for a particular requirement+scheme name.\n     * @param requirement\n     * @param schemeName\n     */\n    public requirementScopes(requirement: OasSecurityRequirement, schemeName: string): string {\n        let scopes: any[] = requirement.getScopes(schemeName);\n        if (scopes && scopes.length > 0) {\n            return scopes.join(\", \");\n        } else {\n            return \"\";\n        }\n    }\n\n    /**\n     * Returns true if the given security requirement represents \"anonymous\" access (no security).\n     * @param requirement\n     */\n    public isAnonSecurity(requirement: OasSecurityRequirement): boolean {\n        let schemes: string[] = requirement.getSecurityRequirementNames();\n        return !schemes || schemes.length === 0;\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the servers.\n     */\n    public deleteAllSecurityRequirements(): void {\n        let command: ICommand = CommandFactory.createDeleteAllSecurityRequirementsCommand(this.parent);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"security-requirements\" label=\"SECURITY REQUIREMENTS\"\n         [counterItems]=\"securityRequirements()\"\n         [collaborationNodePath]=\"securityRequirementsPath()\"\n         [contextHelp]=\"contextHelp()\" [validationModels]=\"securityRequirements()\">\n    <span actions>\n        <icon-button (onClick)=\"openSecurityRequirementEditor()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"global ? 'Add a security requirement to the API.' : 'Add a security requirement for the operation.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllSecurityRequirements()\" [disabled]=\"!hasSecurityRequirements()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     title=\"Delete all security requirements.\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasSecurityRequirements()\">\n            <span>No security requirements have been configured.</span>\n            <a (click)=\"openSecurityRequirementEditor()\">Add security requirement</a>\n        </signpost>\n\n        <div *ngIf=\"hasSecurityRequirements()\">\n            <div *ngIf=\"global\" class=\"api-label\">Security Requirements needed to access <strong>Operations in this API</strong> (clients must choose one combination):</div>\n            <div *ngIf=\"!global\" class=\"api-label\">Security Requirements needed to access <strong>this Operation</strong> (clients must choose one combination):</div>\n            <div class=\"security-requirement\" *ngFor=\"let requirement of securityRequirements()\">\n                <div class=\"name\">\n                    <validation-problem [model]=\"requirement\" [shallow]=\"true\"></validation-problem>\n                    <span class=\"fa fa-lock fa-fw\" *ngIf=\"!isAnonSecurity(requirement)\"></span>\n                    <span class=\"fa fa-unlock fa-fw\" *ngIf=\"isAnonSecurity(requirement)\"></span>\n                    <span class=\"requirement-label\" *ngIf=\"!isAnonSecurity(requirement)\">{{ requirement.getSecurityRequirementNames().join(\", \") }}</span>\n                    <span class=\"requirement-label no-security\" *ngIf=\"isAnonSecurity(requirement)\">No Security</span>\n                </div>\n                <div class=\"actions\">\n                    <div class=\"dropdown dropdown-kebab-pf\">\n                        <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                            <span class=\"fa fa-ellipsis-v\"></span>\n                        </button>\n                        <ul class=\"dropdown-menu dropdown-menu-right\">\n                            <li><a (click)=\"openSecurityRequirementEditor(requirement)\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Edit</span></a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a (click)=\"deleteSecurityRequirement(requirement)\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterViewInit, ElementRef, EventEmitter, Input, OnChanges, Output, QueryList, SimpleChanges, ViewChildren, Directive } from \"@angular/core\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {Node} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {KeypressUtils} from \"../../_util/keypress.util\";\n\n\n/**\n * Base class for all inline editors.\n */\n@Directive()\nexport abstract class AbstractInlineEditor<T> {\n\n    static s_activeEditor: any = null;\n\n    @Input() enabled = true;\n    @Input() labelClass = \"\";\n    @Input() inputClass = \"\";\n    @Input() formClass = \"\";\n\n    @Input() baseNode: Node;\n    @Input() nodePath: string;\n\n    @Output() onChange: EventEmitter<T> = new EventEmitter<T>();\n\n    public editing: boolean = false;\n\n    public inputFocus: boolean = false;\n\n    /**\n     * Current value in the edit area\n     */\n    public evalue: T;\n\n    protected constructor(protected selectionService: SelectionService) {}\n\n    public onStartEditing(): void {\n        if (!this.enabled) {\n            return;\n        }\n\n        // If the baseNode and/or nodePath are set, then we want to fire a selection event\n        // whenever the user starts editing.\n        if (this.nodePath || this.baseNode) {\n            let path: string = \"\";\n            if (this.baseNode) {\n                path = ModelUtils.nodeToPath(this.baseNode);\n            }\n            if (this.nodePath) {\n                if (!this.nodePath.startsWith(\"/\")) {\n                    path += \"/\";\n                }\n                path += this.nodePath;\n            }\n            this.selectionService.simpleSelect(path);\n        }\n\n        this.evalue = this.initialValueForEditing();\n        this.inputFocus = true;\n        this.editing = true;\n\n        if (AbstractInlineEditor.s_activeEditor != null && AbstractInlineEditor.s_activeEditor !== this) {\n            AbstractInlineEditor.s_activeEditor.onCancel();\n        }\n        AbstractInlineEditor.s_activeEditor = this;\n    }\n\n    protected abstract initialValueForEditing(): T;\n\n    public onSave(): void {\n        let value: T = this.getValueForSave();\n        this.onChange.emit(value);\n        this.editing = false;\n        AbstractInlineEditor.s_activeEditor = null;\n    }\n\n    protected getValueForSave(): T {\n        return this.evalue;\n    }\n\n    public onCancel(): void {\n        this.editing = false;\n        AbstractInlineEditor.s_activeEditor = null;\n        this.evalue = this.initialValueForEditing();\n    }\n\n    isEditedValueEmpty(): boolean {\n        return this.evalue === undefined || this.evalue === null;\n    }\n\n    public onInputKeypress(event: KeyboardEvent): void {\n        if (this.isEscapeKey(event)) {\n            this.onCancel();\n        }\n    }\n\n    public onInputFocus(isFocus: boolean): void {\n        if (this.inputFocus !== isFocus) {\n            this.inputFocus = isFocus;\n        }\n    }\n\n    protected isEscapeKey(event: KeyboardEvent): boolean {\n        return KeypressUtils.isEscapeKey(event);\n    }\n\n    protected isEnterKey(event: KeyboardEvent): boolean {\n        return KeypressUtils.isEnterKey(event);\n    }\n\n}\n\n\n\n/**\n * Base class for any inline editor that edits a single value of an arbitrary type.\n */\n@Directive()\nexport abstract class AbstractInlineValueEditor<T> extends AbstractInlineEditor<T> implements OnChanges {\n\n    @Input() value: T;\n    @Input() noValueMessage: string;\n\n    protected constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        // If the @Input \"value\" changes, stop editing and throw away any changes!\n        if (changes[\"value\"]) {\n            this.onCancel();\n        }\n    }\n\n    displayValue(): string {\n        if (this.isEmpty()) {\n            return this.noValueMessage;\n        }\n        return this.formatValue(this.value);\n    }\n\n    protected abstract formatValue(value: T): string;\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null;\n    }\n\n    protected initialValueForEditing(): T {\n        return this.value;\n    }\n\n}\n\n/**\n * Base class for any inline editor that is built on a single text input element.  The template\n * must include an 'input' element named #newvalue.\n */\n@Directive()\nexport abstract class TextInputEditorComponent extends AbstractInlineValueEditor<string> implements AfterViewInit {\n\n    @ViewChildren(\"newvalue\") input: QueryList<ElementRef>;\n\n    /**\n     * C'tor.\n     * @param selectionService\n     */\n    protected constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    ngAfterViewInit(): void {\n        this.input.changes.subscribe(changes => {\n            if (changes.last) {\n                changes.last.nativeElement.focus();\n            }\n        });\n    }\n\n    isEmpty(): boolean {\n        return super.isEmpty() || this.value.length === 0;\n    }\n\n    isEditedValueEmpty(): boolean {\n        return super.isEditedValueEmpty() || this.evalue.length === 0;\n    }\n\n    protected formatValue(value: string): string {\n        return value;\n    }\n\n    protected getValueForSave(): string {\n        let val: string = this.evalue;\n        if (val) {\n            val = val.trim();\n        }\n        if (!val || val.length === 0) {\n            val = null;\n        }\n        return val;\n    }\n\n}\n\n\n/**\n * Base class for any inline editor that is built on a single textarea element.  The template\n * must include a 'textarea' element named #newvalue.\n */\n@Directive()\nexport abstract class TextAreaEditorComponent extends TextInputEditorComponent {\n\n    /**\n     * C'tor.\n     * @param selectionService\n     */\n    protected constructor(selectionService: SelectionService) {\n        super(selectionService);\n    }\n\n    /**\n     * Called when a keypress happens.\n     * @param event\n     */\n    public onInputKeypress(event: KeyboardEvent): void {\n        super.onInputKeypress(event);\n\n        if (KeypressUtils.isCtrlEnterKey(event) && this.isValid()) {\n            this.onSave();\n        }\n    }\n\n    /**\n     * Subclasses can override this to provide validation status of the current value.\n     */\n    protected isValid(): boolean {\n        return true;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {DIVIDER, DropDownOption, DropDownOptionValue} from \"../_components/common/drop-down.component\";\n\nexport class HttpCode {\n\n    private code: number;\n    private name: string;\n\n    public constructor(code: number, name: string) {\n        this.code = code;\n        this.name = name;\n    }\n\n    public getCode(): number {\n        return this.code;\n    }\n\n    public getName(): string {\n        return this.name;\n    }\n}\n\nexport class HttpCodeService {\n\n    private static HTTP_CODE_LIST_COMMON: HttpCode[] = [\n        new HttpCode(200, \"OK\"),\n        new HttpCode(201, \"Created\"),\n        new HttpCode(204, \"No Content\"),\n        new HttpCode(400, \"Bad Request\"),\n        new HttpCode(401, \"Unauthorized\"),\n        new HttpCode(403, \"Forbidden\"),\n        new HttpCode(404, \"Not Found\")\n    ];\n\n    private static HTTP_CODE_LIST: HttpCode[] = [\n        new HttpCode(100, \"Continue\"),\n        new HttpCode(101, \"Switching Protocols\"),\n        new HttpCode(102, \"Processing\"),\n        new HttpCode(200, \"OK\"),\n        new HttpCode(201, \"Created\"),\n        new HttpCode(202, \"Accepted\"),\n        new HttpCode(203, \"Non_Authoritative\"),\n        new HttpCode(204, \"No Content\"),\n        new HttpCode(205, \"Reset Content\"),\n        new HttpCode(206, \"Partial Content\"),\n        new HttpCode(207, \"Multi-Status\"),\n        new HttpCode(208, \"Already Reported\"),\n        new HttpCode(226, \"IM Used\"),\n        new HttpCode(300, \"Multiple Choices\"),\n        new HttpCode(301, \"Moved Permanently\"),\n        new HttpCode(302, \"Found\"),\n        new HttpCode(303, \"See Other\"),\n        new HttpCode(304, \"Not Modified\"),\n        new HttpCode(305, \"Use Proxy\"),\n        new HttpCode(306, \"Switch Proxy\"),\n        new HttpCode(307, \"Temporary Redirect\"),\n        new HttpCode(308, \"Permanent Redirect\"),\n        new HttpCode(400, \"Bad Request\"),\n        new HttpCode(401, \"Unauthorized\"),\n        new HttpCode(402, \"Payment Required\"),\n        new HttpCode(403, \"Forbidden\"),\n        new HttpCode(404, \"Not Found\"),\n        new HttpCode(405, \"Method Not Allowed\"),\n        new HttpCode(406, \"Not Acceptable\"),\n        new HttpCode(407, \"Proxy Authentication Required\"),\n        new HttpCode(408, \"Request Time-Out\"),\n        new HttpCode(409, \"Conflict\"),\n        new HttpCode(410, \"Gone\"),\n        new HttpCode(411, \"Length Required\"),\n        new HttpCode(412, \"Precondition Failed\"),\n        new HttpCode(413, \"Payload Too Large\"),\n        new HttpCode(414, \"URI Too Long\"),\n        new HttpCode(415, \"Unsupported Media Type\"),\n        new HttpCode(416, \"Range Not Satisfiable\"),\n        new HttpCode(417, \"Expectation Failed\"),\n        new HttpCode(418, \"I'm a teapot!\"),\n        new HttpCode(421, \"Misdirected Request\"),\n        new HttpCode(422, \"Unprocessable Entity\"),\n        new HttpCode(423, \"Locked\"),\n        new HttpCode(424, \"Failed Dependency\"),\n        new HttpCode(426, \"Upgrade Required\"),\n        new HttpCode(428, \"Precondition Required\"),\n        new HttpCode(429, \"Too Many Requests\"),\n        new HttpCode(431, \"Request Header Fields Too Large\"),\n        new HttpCode(451, \"Unavailable For Legal Reasons\"),\n        new HttpCode(500, \"Internal Server Error\"),\n        new HttpCode(501, \"Not Implemented\"),\n        new HttpCode(502, \"Bad Gateway\"),\n        new HttpCode(503, \"Service Unavailable\"),\n        new HttpCode(504, \"Gateway Time-Out\"),\n        new HttpCode(505, \"HTTP Version Not Supported\"),\n        new HttpCode(506, \"Variant Also Negotiates\"),\n        new HttpCode(507, \"Insufficient Storage\"),\n        new HttpCode(508, \"Loop Detected\"),\n        new HttpCode(510, \"Not Extended\"),\n        new HttpCode(511, \"Network Authentication Required\")\n    ];\n\n    /**\n     * Returns the list of commonly used HTTP codes.\n     */\n    public static getCommonlyUsedHttpCodeList() : HttpCode[] {\n        // TODO defensive copy? Make non-static?\n        return HttpCodeService.HTTP_CODE_LIST_COMMON;\n    }\n\n    /**\n     * Returns the full list of HTTP codes.\n     */\n    public static getHttpCodeList() : HttpCode[] {\n        // TODO defensive copy? Make non-static?\n        return HttpCodeService.HTTP_CODE_LIST;\n    }\n\n    /**\n     * Resolves a single code (returns the HttpCode object for a given response code).\n     * @param code\n     */\n    public static getCode(code: string): HttpCode {\n        for (let c of HttpCodeService.HTTP_CODE_LIST) {\n            if (c.getCode().toString() === code) {\n                return c;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * Returns true if the current date is April 1.\n     */\n    private static isAprilFirst(): boolean {\n        let d: Date = new Date();\n        return d.getMonth() === 3 && d.getDate() === 1;\n    }\n\n    /**\n     * Called to generate an array of dropdown options for all of the HTTP codes.\n     */\n    public static generateDropDownOptions(): DropDownOption[] {\n        // TODO cache this?\n        let res: DropDownOption[] = HttpCodeService.HTTP_CODE_LIST_COMMON.map(e => {\n            let strcode = String(e.getCode());\n            return new DropDownOptionValue(strcode + \" \" + e.getName(), strcode);\n        });\n        res.push(DIVIDER);\n\n        let nextDividerAfter = 199;\n        HttpCodeService.HTTP_CODE_LIST.forEach(e => {\n            if(e.getCode() > nextDividerAfter) {\n                nextDividerAfter += 100;\n                res.push(DIVIDER);\n            }\n            let strcode = String(e.getCode());\n            res.push(new DropDownOptionValue(strcode + \" \" + e.getName(), strcode));\n        });\n\n        return res.filter(e => e.isDivider() || HttpCodeService.isAprilFirst() || e.getValue() !== \"418\");\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory, Constants,\n    ICommand,\n    Library,\n    Oas20Operation,\n    Oas20Response,\n    Oas30Operation,\n    Oas30Response,\n    OasDocument,\n    OasResponse\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../../_services/command.service\";\nimport {EditorsService} from \"../../../../_services/editors.service\";\nimport {AddResponseDialogComponent, AddResponseDialogData} from \"../../../dialogs/add-response.component\";\nimport {CloneResponseDialogComponent} from \"../../../dialogs/clone-response.component\";\nimport {AbstractBaseComponent} from \"../../../common/base-component\";\nimport {DocumentService} from \"../../../../_services/document.service\";\nimport {SelectionService} from \"../../../../_services/selection.service\";\nimport {HttpCode, HttpCodeService} from \"../../../../_services/httpcode.service\";\nimport {ModelUtils} from \"../../../../_util/model.util\";\n\n\n@Component({\n    selector: \"responses-section\",\n    templateUrl: \"responses-section.component.html\",\n    styleUrls: [ \"responses-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResponsesSectionComponent extends AbstractBaseComponent {\n\n    @Input() operation: Oas20Operation | Oas30Operation;\n\n    @ViewChild(\"addResponseDialog\", { static: true }) public addResponseDialog: AddResponseDialogComponent;\n    @ViewChild(\"cloneResponseDialog\", { static: true }) public cloneResponseDialog: CloneResponseDialogComponent;\n\n    private _responseTab: string;\n\n    /**\n     * Constructor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param editors\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editors: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        super.ngOnChanges(changes);\n        if (this.operation && this.operation.responses) {\n            this.selectDefaultTab();\n        }\n    }\n\n    public responsesPath(): string {\n        return ModelUtils.nodeToPath(this.operation) + \"/responses\";\n    }\n\n    public selectDefaultTab(): void {\n        let responses: OasResponse[] = this.operation.responses.getResponses();\n        if (responses && responses.length > 0) {\n            this._responseTab = (responses[0] as Oas20Response | Oas30Response).getStatusCode();\n        }\n    }\n\n    public is20Document(): boolean {\n        return (<OasDocument>this.operation.ownerDocument()).is2xDocument();\n    }\n\n    public is30Document(): boolean {\n        return (<OasDocument>this.operation.ownerDocument()).is3xDocument();\n    }\n\n    public openAddResponseModal(): void {\n        this.addResponseDialog.open(this.operation, this.nextAvailableResponseCode());\n    }\n\n    public openCloneResponseModal(currentResponse: (Oas20Response | Oas30Response)): void {\n        this.cloneResponseDialog.open(this.operation, this.nextAvailableResponseCode());\n    }\n\n    public addResponse(data: AddResponseDialogData): void {\n        let nodePath = Library.createNodePath(this.operation);\n        nodePath.appendSegment(Constants.PROP_RESPONSES);\n        nodePath.appendSegment(data.code.toString(), true);\n\n        // Add the response - aggregate command if we're adding a $ref, otherwise not.\n        if (data.ref && data.ref.length > 0) {\n            let command: ICommand = CommandFactory.createAggregateCommand(\"NewResponseWithRef\", { \"$ref\": data.ref }, [\n                CommandFactory.createNewResponseCommand(this.operation, data.code, null),\n                CommandFactory.createSetPropertyCommand(nodePath, Constants.PROP_$REF, data.ref)\n            ]);\n            this.commandService.emit(command);\n        } else {\n            let command: ICommand = CommandFactory.createNewResponseCommand(this.operation, data.code, null);\n            this.commandService.emit(command);\n        }\n\n        // Select the newly created response.\n        this.selectionService.select(nodePath.toString());\n        this._responseTab = data.code;\n    }\n\n    public cloneResponse(statusCode: string): void {\n        const selectedStatusCode = this._responseTab;\n        const originalResponse = this.operation.responses.getResponse(selectedStatusCode);\n        let command: ICommand = CommandFactory.createNewResponseCommand(this.operation, statusCode, originalResponse);\n        this.commandService.emit(command);\n        let nodePath = Library.createNodePath(this.operation);\n        nodePath.appendSegment(statusCode, true);\n        this.selectionService.select(nodePath.toString());\n    }\n\n    public deleteAllResponses(): void {\n        let command: ICommand = CommandFactory.createDeleteAllResponsesCommand(this.operation);\n        this.commandService.emit(command);\n    }\n\n    public responses(): (Oas20Response | Oas30Response)[] {\n        if (!this.operation.responses) {\n            return [];\n        }\n        let rval: (Oas20Response|Oas30Response)[] = [];\n        for (let scode of this.operation.responses.getResponseStatusCodes()) {\n            let response: Oas20Response | Oas30Response = this.operation.responses.getResponse(scode) as Oas20Response | Oas30Response;\n            rval.push(response);\n        }\n        return rval.sort((a, b) => {\n            return a.getStatusCode().localeCompare(b.getStatusCode());\n        });\n    }\n\n    public hasResponses(): boolean {\n        if (!this.operation.responses) {\n            return false;\n        }\n        if (this.operation.responses.getResponseStatusCodes().length === 0) {\n            return false;\n        }\n\n        return true;\n    }\n\n    public deleteResponse(response: Oas20Response | Oas30Response): void {\n        let command: ICommand = CommandFactory.createDeleteResponseCommand(response);\n        this.commandService.emit(command);\n        if (this.isTabActive(response)) {\n            this.selectDefaultTab();\n        }\n    }\n\n    public statusCodeLine(code: string): string {\n        let httpCode: HttpCode = HttpCodeService.getCode(code);\n        if (httpCode) {\n            return httpCode.getName();\n        }\n        return \"\";\n    }\n\n    public statusCodeType(code: string): string {\n        if (code === \"default\") {\n            return \"default\";\n        }\n\n        var icode: number = parseInt(code);\n        if (icode >= 200 && icode < 300) {\n            return \"success\";\n        }\n\n        if (icode >= 300 && icode < 400) {\n            return \"redirect\";\n        }\n\n        if (icode >= 400 && icode < 500) {\n            return \"problem\";\n        }\n\n        if (icode >= 500 && icode < 600) {\n            return \"error\";\n        }\n\n        return \"\";\n    }\n\n    public isTabActive(response: Oas20Response | Oas30Response): boolean {\n        return response.getStatusCode() === this._responseTab;\n    }\n\n    public setTab(response: Oas20Response | Oas30Response): void {\n        this._responseTab = response.getStatusCode();\n    }\n\n    public currentResponse(): Oas20Response | Oas30Response {\n        if (this._responseTab) {\n            return this.operation.responses.getResponse(this._responseTab) as Oas20Response | Oas30Response;\n        }\n        return null;\n    }\n\n    public nextAvailableResponseCode(): string {\n        if (this.operation.responses) {\n            for (let httpCode of HttpCodeService.getCommonlyUsedHttpCodeList()) {\n                let code: string = httpCode.getCode().toString();\n                if (code.indexOf(\"1\") === 0) {\n                    continue;\n                }\n                let response: any = this.operation.responses.getResponse(code);\n                if (!response) {\n                    return code;\n                }\n            }\n        }\n        return \"200\";\n    }\n\n}\n","<section type=\"responses\" label=\"RESPONSES\" [counterItems]=\"responses()\"\n         contextHelp=\"Use this section to configure the operation's Responses (e.g. 200, 404, 500).\"\n         [collaborationNodePath]=\"responsesPath()\"\n         [validationModels]=\"responses()\">\n    <span actions>\n        <icon-button (onClick)=\"openAddResponseModal()\" [pullRight]=\"true\" type=\"add\"\n                     [title]=\"'Add a response to the operation.'\"></icon-button>\n        <icon-button (onClick)=\"deleteAllResponses()\" [disabled]=\"!hasResponses()\"\n                     [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete all responses from the operation.'\"></icon-button>\n    </span>\n    <div body>\n\n        <signpost *ngIf=\"!hasResponses()\">\n            <validation-problem [model]=\"operation\" [code]=\"'OP-007'\" *ngIf=\"is20Document()\"></validation-problem>\n            <validation-problem [model]=\"operation\" [code]=\"'OP-3-004'\" *ngIf=\"is30Document()\"></validation-problem>\n            <span>No responses have been defined.</span>\n            <a (click)=\"openAddResponseModal()\">Add a response</a>\n        </signpost>\n\n        <!-- The list of responses -->\n        <div class=\"response-tabs\" *ngIf=\"hasResponses()\">\n            <div class=\"tab statusCode {{ statusCodeType(response.getStatusCode()) }}\" [class.active]=\"isTabActive(response)\" *ngFor=\"let response of responses()\">\n                <a (click)=\"setTab(response)\">\n                    <span>{{ response.getStatusCode() }}</span>\n                    <span>&nbsp;</span>\n                    <span>{{ statusCodeLine(response.getStatusCode()) }}</span>\n                </a>\n                <validation-aggregate [models]=\"[ response ]\"></validation-aggregate>\n            </div>\n            <div class=\"actions\">\n                <div class=\"dropdown dropdown-kebab-pf\">\n                    <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\">\n                        <span class=\"fa fa-ellipsis-v\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu dropdown-menu-right\">\n                        <li><a (click)=\"deleteResponse(currentResponse())\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete Response</span></a></li>\n                        <li><a (click)=\"openCloneResponseModal(currentResponse())\"><span class=\"fa fa-fw fa-clone\"></span><span>Clone Response</span></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n        <div class=\"response-tab-content\" *ngIf=\"hasResponses()\">\n            <response-tab [response]=\"currentResponse()\" *ngIf=\"is20Document()\"></response-tab>\n            <response-tab-30 [response]=\"currentResponse()\" *ngIf=\"is30Document()\"></response-tab-30>\n        </div>\n    </div>\n</section>\n<add-response-dialog #addResponseDialog (onAdd)=\"addResponse($event)\"></add-response-dialog>\n<clone-response-dialog #cloneResponseDialog (onClone)=\"cloneResponse($event)\"></clone-response-dialog>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component} from \"@angular/core\";\nimport {\n    Oas20ResponseDefinition,\n    Oas30ResponseDefinition,\n    OasDocument,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {FindResponseDefinitionsVisitor} from \"../../_visitors/response-definitions.visitor\";\n\n\nexport interface ResponseData {\n    name: string;\n    description: string;\n}\n\nexport interface ResponseEditorEvent extends EntityEditorEvent<Oas20ResponseDefinition | Oas30ResponseDefinition> {\n    data: ResponseData;\n}\n\nexport interface IResponseEditorHandler extends IEntityEditorHandler<Oas20ResponseDefinition | Oas30ResponseDefinition, ResponseEditorEvent> {\n    onSave(event: ResponseEditorEvent): void;\n    onCancel(event: ResponseEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"response-editor\",\n    templateUrl: \"response-editor.component.html\",\n    styleUrls: [\"response-editor.component.css\"]\n})\nexport class ResponseEditorComponent extends EntityEditor<Oas20ResponseDefinition | Oas30ResponseDefinition, ResponseEditorEvent> {\n\n    responses: string[] = [];\n    respExists: boolean = false;\n\n    public model: ResponseData = {\n        name: \"\",\n        description: \"\"\n    };\n\n    public doAfterOpen(): void {\n        this.responses = [];\n        this.respExists = false;\n        let responses: (Oas20ResponseDefinition | Oas30ResponseDefinition)[] = this.getResponses(<OasDocument> this.context.ownerDocument());\n        this.responses = responses.map(definition => FindResponseDefinitionsVisitor.definitionName(definition));\n    }\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: Oas20ResponseDefinition | Oas30ResponseDefinition): void {\n        // Note: nothing to do here because data types aren't editable via the full screen editor.\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            name: \"\",\n            description: \"\"\n        };\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        return this.model.name !== null && this.model.name.trim().length > 0 && !this.respExists;\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): ResponseEditorEvent {\n        let event: ResponseEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    private getResponses(document: OasDocument): (Oas20ResponseDefinition | Oas30ResponseDefinition)[] {\n        let vizzy: FindResponseDefinitionsVisitor = new FindResponseDefinitionsVisitor(null);\n        VisitorUtil.visitTree(document, vizzy, TraverserDirection.down);\n        return vizzy.getSortedResponseDefinitions()\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"response\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define a New Response\" [valid]=\"isValid() && nameInput.valid\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Basic Information</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter a name and description for the new response.\n                </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"rsp_name\">Name</label>\n                <div>\n                    <input name=\"name\" type=\"text\" id=\"rsp_name\" class=\"form-control\" required #nameInput=\"ngModel\"\n                           [(ngModel)]=\"model.name\" placeholder=\"Enter a unique response name.\" pattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                           (ngModelChange)=\"respExists = responses.indexOf($event) != -1\" autocomplete=\"off\">\n                    <form-error-message [inputModel]=\"nameInput\" type=\"required\">Name is required.</form-error-message>\n                    <form-error-message [inputModel]=\"nameInput\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid name (only alpha-numeric characters are allowed - no whitespace).</form-error-message>\n                    <div class=\"form-error-message error\" *ngIf=\"respExists\">Response named <strong>{{ model.name }}</strong> already exists.</div>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                    <markdown-editor [(value)]=\"model.description\" id=\"description\"\n                                     [editorStyle]=\"{ position: 'relative', height: '100px', border: '1px solid #ccc', width: '100%' }\"></markdown-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {ValidationProblem} from \"@apicurio/data-models\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n@Component({\n    selector: \"validation-icon\",\n    templateUrl: \"validation-icon.component.html\",\n    styleUrls: [\"validation-icon.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ValidationIconComponent extends AbstractBaseComponent {\n\n    @Input() validationErrors: ValidationProblem[] = [];\n    @Output() onClick: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public message(): string {\n        if (this.hasErrors()) {\n            return \"Found \" + this.numErrors() + \" validation problems.\"\n        } else {\n            return \"No validation errors/warnings found.\";\n        }\n    }\n\n    public hasErrors(): boolean {\n        return this.validationErrors.length > 0;\n    }\n\n    public numErrors(): number {\n        return this.validationErrors.length;\n    }\n\n}\n","<div class=\"validation-icon\" [class.has-errors]=\"hasErrors()\">\n    <button class=\"btn btn-link nav-item-iconic drawer-pf-trigger-icon\" title=\"{{ message() }}\" (click)=\"onClick.emit(true)\">\n        <span class=\"fa icon\" [class.fa-exclamation-circle]=\"hasErrors()\" [class.fa-check-circle]=\"!hasErrors()\"></span>\n        <span class=\"issues-label\">Issues</span>\n        <span>(</span><span>{{ numErrors() }}</span><span>)</span>\n    </button>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {CombinedVisitorAdapter, Oas20ResponseDefinition, Oas30ResponseDefinition} from \"@apicurio/data-models\";\n\n/**\n * Visitor used to find schema definitions.\n */\nexport class FindResponseDefinitionsVisitor extends CombinedVisitorAdapter {\n\n    responseDefinitions: (Oas20ResponseDefinition|Oas30ResponseDefinition)[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria\n     */\n    constructor(private filterCriteria: string) {\n        super();\n    }\n\n    /**\n     * Called when a schema definition is visited.\n     * @param node\n     */\n    visitResponseDefinition(node: Oas20ResponseDefinition | Oas30ResponseDefinition): void {\n        let name: string = FindResponseDefinitionsVisitor.definitionName(node);\n        if (this.acceptThroughFilter(name)) {\n            this.responseDefinitions.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the path items.\n     */\n    public getSortedResponseDefinitions(): (Oas20ResponseDefinition | Oas30ResponseDefinition)[] {\n        return this.responseDefinitions.sort( (def1, def2) => {\n            let name1: string = FindResponseDefinitionsVisitor.definitionName(def1);\n            let name2: string = FindResponseDefinitionsVisitor.definitionName(def2);\n            return name1.localeCompare(name2);\n        });\n    }\n\n    /**\n     * Figures out the definition name regardless of the version of the model.\n     * @param definition\n     */\n    public static definitionName(definition: Oas20ResponseDefinition|Oas30ResponseDefinition): string {\n        return definition.getName();\n    }\n\n    /**\n     * Returns true if the given name is accepted by the current filter criteria.\n     * @param name\n     */\n    private acceptThroughFilter(name: string): boolean {\n        //console.info(\"Accepting: %s through filter: %s\", name, this.filterCriteria);\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n    }\n\n}\n","<div *ngIf=\"isVisible()\" class=\"form-error-message\" [class.error]=\"isError()\"><ng-content></ng-content></div>\n","/**\n * @license\n * Copyright 2017 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, Input} from \"@angular/core\";\nimport {NgModel} from \"@angular/forms\";\n\n\n@Component({\n    selector: \"form-error-message\",\n    templateUrl: \"form-error-message.component.html\"\n})\nexport class FormErrorMessageComponent {\n\n    @Input() inputModel: NgModel;\n    @Input() type: string;\n    @Input() alwaysOn: boolean;\n\n    public isError(): boolean {\n        return this.inputModel.invalid && (this.inputModel.dirty || this.inputModel.touched) && this.inputModel.errors[this.type];\n    }\n\n    public isVisible(): boolean {\n        return this.alwaysOn || this.isError();\n    }\n}\n","/**\n * @license\n * Copyright 2017 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, ElementRef, Input, forwardRef, OnInit, NgZone, OnDestroy} from \"@angular/core\";\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from \"@angular/forms\";\nimport \"brace\";\nimport \"brace/theme/eclipse\";\nimport \"brace/theme/monokai\";\nimport \"brace/theme/twilight\";\nimport \"brace/mode/json\";\nimport \"brace/mode/html\";\nimport \"brace/mode/markdown\";\nimport \"brace/mode/xml\";\nimport \"brace/mode/yaml\";\nimport \"brace/mode/graphqlschema\";\n\ndeclare var ace: any;\n\n@Component({\n    selector: 'ace-editor',\n    template: '',\n    styles: [':host { display:block;width:100%; }'],\n    providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => AceEditorComponent),\n        multi: true\n    }]\n})\nexport class AceEditorComponent implements ControlValueAccessor, OnInit, OnDestroy {\n    @Output() textChanged = new EventEmitter();\n    @Output() textChange = new EventEmitter();\n    @Input() style: any = {};\n    _options: any = {};\n    _readOnly: boolean = false;\n    _theme: string = \"monokai\";\n    _mode: any = \"html\";\n    _autoUpdateContent: boolean = true;\n    _editor: any;\n    _durationBeforeCallback: number = 0;\n    _wordWrap: boolean = false;\n    _text: string = \"\";\n    oldText: any;\n    timeoutSaving: any;\n\n    /**\n     * C'tor.\n     * @param elementRef\n     * @param zone\n     */\n    constructor(elementRef: ElementRef, private zone: NgZone) {\n        let el = elementRef.nativeElement;\n        zone.runOutsideAngular(() => {\n            this._editor = ace[\"edit\"](el);\n            this._editor.$blockScrolling = Infinity;\n        });\n    }\n\n    ngOnInit() {\n        this.init();\n        this.initEvents();\n    }\n\n    ngOnDestroy() {\n        this.destroy();\n    }\n\n    init() {\n        this.setOptions(this._options || {});\n        this.setTheme(this._theme);\n        this.setMode(this._mode);\n        this.setReadOnly(this._readOnly);\n    }\n\n    initEvents() {\n        this._editor.on('change', () => this.updateText());\n        this._editor.on('paste', () => this.updateText());\n    }\n\n    destroy() {\n        this._editor.destroy();\n    }\n\n    focus(): void {\n        this._editor.focus();\n    }\n\n    updateText() {\n        let newVal = this._editor.getValue(), that = this;\n        if (newVal === this.oldText) {\n            return;\n        }\n        if (!this._durationBeforeCallback) {\n            this._text = newVal;\n            this.zone.run(() => {\n                this.textChange.emit(newVal);\n                this.textChanged.emit(newVal);\n                this._onChange(newVal);\n            });\n        } else {\n            if (this.timeoutSaving) {\n                clearTimeout(this.timeoutSaving);\n            }\n\n            this.timeoutSaving = setTimeout(function () {\n                that._text = newVal;\n                this.zone.run( () => {\n                    that.textChange.emit(newVal);\n                    that.textChanged.emit(newVal);\n                    that.timeoutSaving = null;\n                });\n            }, this._durationBeforeCallback);\n        }\n        this.oldText = newVal;\n    }\n\n    @Input() set options(options: any) {\n        this.setOptions(options);\n    }\n\n    setOptions(options: any) {\n        this._options = options;\n        this._editor.setOptions(options || {});\n    }\n\n    @Input() set readOnly(readOnly: any) {\n        this.setReadOnly(readOnly);\n    }\n\n    setReadOnly(readOnly: any) {\n        this._readOnly = readOnly;\n        this._editor.setReadOnly(readOnly);\n    }\n\n    @Input() set theme(theme: any) {\n        this.setTheme(theme);\n    }\n\n    setTheme(theme: any) {\n        this._theme = theme;\n        this._editor.setTheme(`ace/theme/${theme}`);\n    }\n\n    @Input() set mode(mode: any) {\n        this.setMode(mode);\n    }\n\n    setMode(mode: any) {\n        this._mode = mode;\n        if (typeof this._mode === 'object') {\n            this._editor.getSession().setMode(this._mode);\n        } else {\n            this._editor.getSession().setMode(`ace/mode/${this._mode}`);\n        }\n    }\n\n    get value() {\n        return this.text;\n    }\n\n    @Input()\n    set value(value: string) {\n        this.setText(value);\n    }\n\n    writeValue(value: any) {\n        this.setText(value);\n    }\n\n    private _onChange = (_: any) => {\n    };\n\n    registerOnChange(fn: any) {\n        this._onChange = fn;\n    }\n\n    private _onTouched = () => {\n    };\n\n    registerOnTouched(fn: any) {\n        this._onTouched = fn;\n    }\n\n    get wordWrap() {\n        return this._wordWrap;\n    }\n\n    @Input()\n    set wordWrap(wordWrap: boolean) {\n        this.setWordWrap(wordWrap);\n    }\n\n    setWordWrap(wordWrap: boolean) {\n        this._wordWrap = wordWrap;\n        this._editor.getSession().setUseWrapMode(true);\n    }\n\n    get text() {\n        return this._text;\n    }\n\n    @Input()\n    set text(text: string) {\n        this.setText(text);\n    }\n\n    setText(text: any) {\n        if (text === null || text === undefined) {\n            text = \"\";\n        }\n        if (this._text !== text && this._autoUpdateContent === true) {\n            this._text = text;\n            this._editor.setValue(text);\n            this._onChange(text);\n            this._editor.clearSelection();\n        }\n    }\n\n    @Input() set autoUpdateContent(status: any) {\n        this.setAutoUpdateContent(status);\n    }\n\n    setAutoUpdateContent(status: any) {\n        this._autoUpdateContent = status;\n    }\n\n    @Input() set durationBeforeCallback(num: number) {\n        this.setDurationBeforeCallback(num);\n    }\n\n    setDurationBeforeCallback(num: number) {\n        this._durationBeforeCallback = num;\n    }\n\n    getEditor() {\n        return this._editor;\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\nimport {\n    CommandFactory, DocumentType,\n    ICommand,\n    Oas20Schema,\n    Oas30Schema,\n    SimplifiedParameterType,\n    SimplifiedPropertyType, SimplifiedType\n} from \"@apicurio/data-models\";\nimport Oas20PropertySchema = Oas20Schema.Oas20PropertySchema;\nimport Oas30PropertySchema = Oas30Schema.Oas30PropertySchema;\nimport {DropDownOption, DropDownOptionValue} from \"../../common/drop-down.component\";\n\n\n@Component({\n    selector: \"property-row\",\n    templateUrl: \"property-row.component.html\",\n    styleUrls: [ \"property-row.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PropertyRowComponent extends AbstractRowComponent<Oas20PropertySchema | Oas30PropertySchema, SimplifiedPropertyType> {\n\n    @Output() onDelete: EventEmitter<void> = new EventEmitter<void>();\n    @Output() onRename: EventEmitter<void> = new EventEmitter<void>();\n\n    _ptab: string = null;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        this._model = SimplifiedPropertyType.fromPropertySchema(this.item);\n    }\n\n    public isParameter(): boolean {\n        return false;\n    }\n\n    public hasDescription(): boolean {\n        if (this.item.description) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public hasType(): boolean {\n        if (this.item.type) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public example(): string {\n        return this.item.example\n    }\n\n    public minimum(): number {\n        return this.item.minimum\n    }\n\n    public maximum(): number {\n        return this.item.maximum\n    }\n\n    public isRequired(): boolean {\n        let required: string[] = this.item.parent()[\"required\"];\n        if (required && required.length > 0) {\n            return required.indexOf(this.item.getPropertyName()) != -1;\n        }\n        return false;\n    }\n\n    public required(): string {\n        return this.isRequired() ? \"required\" : \"not-required\";\n    }\n\n    public requiredOptions(): DropDownOption[] {\n        return [\n            new DropDownOptionValue(\"Required\", \"required\"),\n            new DropDownOptionValue(\"Not Required\", \"not-required\")\n        ];\n    }\n\n    public minimumIsSet(): string | null {\n        return  this.item.minimum ? this.item.minimum.toString() : null;\n    }\n\n    public maximumIsSet(): string | null {\n        return this.item.maximum ? this.item.maximum.toString() : null;\n    }\n\n    public multipleOfIsSet(): string | null {\n        return this.item.multipleOf ? this.item.multipleOf.toString() : null;\n    }\n\n    public minItemsIsSet(): string | null {\n        return  this.item.minItems ? this.item.minItems.toString() : null;\n    }\n\n    public maxItemsIsSet(): string | null {\n        return this.item.maxItems ? this.item.maxItems.toString() : null;\n    }\n\n    public minLengthIsSet(): string | null {\n        return  this.item.minLength ? this.item.minLength.toString() : null;\n    }\n\n    public maxLengthIsSet(): string | null {\n        return this.item.maxLength ? this.item.maxLength.toString() : null;\n    }\n\n    public exclusiveMinIsSet(): boolean | null {\n        return  this.item.exclusiveMinimum ? this.item.exclusiveMinimum : false;\n    }\n\n    public uniqueItemsIsSet(): boolean | null {\n        return  this.item.uniqueItems ? this.item.uniqueItems : false;\n    }\n\n    public readOnlyIsSet(): boolean | null {\n        return  this.item.readOnly ? this.item.readOnly : false;\n    }\n\n    public writeOnlyIsSet(): boolean | null {\n        if (this.item.ownerDocument().getDocumentType() == DocumentType.openapi3) {\n            return (<Oas30PropertySchema>this.item).writeOnly ? true : false;\n        }\n        return false;\n    }\n\n    public minPropertiesIsSet(): string | null {\n        return  this.item.minProperties ? this.item.minProperties.toString() : null;\n    }\n\n    public maxPropertiesIsSet(): string | null {\n        return  this.item.maxProperties ? this.item.maxProperties.toString() : null;\n    }\n\n    // public writeOnlyIsSet(): boolean | null {\n    //     return  this.item.writeOnly ? this.item.writeOnly : false; TODO nullable not exist in dataModels\n    // }\n\n    // public nullableIsSet(): boolean | null {\n    //     return  this.item.nullable ? this.item.nullable : false; TODO nullable not exist in dataModels\n    // }\n\n    public exclusiveMaxIsSet(): boolean | null {\n        return  this.item.exclusiveMaximum ? this.item.exclusiveMaximum : false;\n    }\n\n    public isEditingDescription(): boolean {\n        return this.isEditingTab(\"description\");\n    }\n\n    public isEditingSummary(): boolean {\n        return this.isEditingTab(\"summary\");\n    }\n\n    public isEditingExample(): boolean {\n        return this.isEditingTab(\"example\");\n    }\n\n    public isIntFloatEligible(): boolean  {\n        return this.item.type === \"integer\" || this.item.type === \"float\"\n    }\n\n    public isStringEligible(): boolean  {\n        return this.item.type === \"string\"\n    }\n\n    public isArrayEligible(): boolean  {\n        return this.item.type === \"array\"\n    }\n\n    public toggleDescription(): void {\n        this.toggleTab(\"description\");\n    }\n\n    public toggleSummary(): void {\n        this.toggleTab(\"summary\");\n    }\n\n    public toggleExample(): void {\n        this.toggleTab(\"example\");\n    }\n\n    public delete(): void {\n        this.onDelete.emit();\n    }\n\n    public displayType(): SimplifiedParameterType {\n        return SimplifiedPropertyType.fromPropertySchema(this.item);\n    }\n\n    public rename(): void {\n        this.onRename.emit();\n    }\n\n    public setDescription(description: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n    public setExample(example: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"example\", example);\n        this.commandService.emit(command);\n    }\n\n    public setNumValue(val: string, name: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<number>(this.item, name, Number(val));\n        this.commandService.emit(command);\n    }\n\n    public setArrayValue(val: string, name: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<Array<any>>(this.item, name, Array(val));\n        this.commandService.emit(command);\n    }\n\n    public setPattern(pattern: string): void {\n            let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"pattern\", pattern);\n            this.commandService.emit(command);\n    }\n\n    public changeRequired(newValue: string): void {\n        this.model().required = newValue === \"required\";\n        let nt: SimplifiedPropertyType = SimplifiedPropertyType.fromPropertySchema(this.item);\n        nt.required = this.model().required;\n        let command: ICommand = CommandFactory.createChangePropertyTypeCommand(this.item, nt);\n        this.commandService.emit(command);\n    }\n\n    public changeType(newType: SimplifiedType): void {\n        let nt: SimplifiedPropertyType = new SimplifiedPropertyType();\n        nt.required = this.model().required;\n        nt.type = newType.type;\n        nt.enum_ = newType.enum_;\n        nt.of = newType.of;\n        nt.as = newType.as;\n        let command: ICommand = CommandFactory.createChangePropertyTypeCommand(this.item, nt);\n        this.commandService.emit(command);\n        this._model = nt;\n        this._ptab = null;\n    }\n\n    public setBoolean(val: boolean, name: string): void {\n        let command: ICommand = CommandFactory.createChangePropertyCommand<boolean>(this.item, name, val);\n        this.commandService.emit(command);\n    }\n\n}\n","<div class=\"property\" [class.expanded]=\"isEditing()\" [class.required]=\"isRequired()\">\n    <div class=\"header\">\n        <div class=\"name\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span title=\"{{ item.getPropertyName() }}\">{{ item.getPropertyName() }}</span>\n        </div>\n        <div class=\"description\" (click)=\"toggleDescription()\" [class.selected]=\"isEditingDescription()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingDescription()\"></span>\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"summary\" (click)=\"toggleSummary()\" [class.selected]=\"isEditingSummary()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingSummary()\"></span>\n            <span class=\"property-required\" *ngIf=\"isRequired()\" title=\"This property is required.\">[required]</span>\n            <schema-type [type]=\"displayType()\"></schema-type>\n        </div>\n        <div class=\"example\" (click)=\"toggleExample()\" [class.selected]=\"isEditingExample()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditingExample()\"></span>\n            <markdown-summary [data]=\"example()\" emptyText=\"No example.\"></markdown-summary>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"rename()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Rename</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"property-description\" *ngIf=\"isEditingDescription()\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'No description.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                    <div class=\"property-content\" *ngIf=\"isEditingSummary()\">\n                        <div class=\"property-required\">\n                            <span class=\"dropdown-label\">Property is</span>\n                            <drop-down id=\"api-property-required\"\n                                       [value]=\"required()\"\n                                       [options]=\"requiredOptions()\"\n                                       (onValueChange)=\"changeRequired($event)\"\n                                       [noSelectionLabel]=\"'Not Required'\"></drop-down>\n                        </div>\n                        <div class=\"property-type\">\n                            <schema-type-editor [document]=\"document()\" [value]=\"model()\" [isParameter]=\"isParameter()\"\n                                                (onChange)=\"changeType($event)\"></schema-type-editor>\n                        </div>\n\n                        <div class=\"property-config-tabs\" *ngIf=\"hasType()\">\n                            <ul class=\"nav nav-tabs nav-tabs-pf\">\n                                <li [class.active]=\"_ptab == null\"><a (click)=\"_ptab = null\">Advanced</a></li>\n                                <li [class.active]=\"_ptab == 'minmax'\" *ngIf=\"isIntFloatEligible()\"><a (click)=\"_ptab = 'minmax'\">Minimum/Maximum</a></li>\n                                <li [class.active]=\"_ptab == 'length'\" *ngIf=\"isStringEligible()\"><a (click)=\"_ptab = 'length'\">Min/Max Length</a></li>\n                                <li [class.active]=\"_ptab == 'exclusive'\" *ngIf=\"isStringEligible()\"><a (click)=\"_ptab = 'exclusive'\">Min/Max Exclusive</a></li>\n                                <li [class.active]=\"_ptab == 'items'\" *ngIf=\"isArrayEligible()\"><a (click)=\"_ptab = 'items'\">Min/Max/Unique Items</a></li>\n                            </ul>\n                        </div>\n                        <div class=\"property-config-tabcontent\" *ngIf=\"hasType()\">\n                            <!-- Advanced tab content -->\n                            <div class=\"tabcontent-advanced\" *ngIf=\"_ptab == null\">\n                                <div class=\"property-readOnly\">\n                                    <checkbox-input [defaultValue]=\"readOnlyIsSet()\" [name]=\"'readOnly'\" label=\"Read Only\"\n                                                    id=\"read-only\" [baseNode]=\"item\" nodePath=\"readOnly\"\n                                                    (onChange)=\"setBoolean($event,'readOnly')\"></checkbox-input>\n                                </div>\n                                <div class=\"property-writeOnly\">\n                                    <checkbox-input [defaultValue]=\"writeOnlyIsSet()\" [name]=\"'writeOnly'\" label=\"Write Only\"\n                                                    id=\"write-only\" [baseNode]=\"item\" nodePath=\"writeOnly\"\n                                                    (onChange)=\"setBoolean($event,'writeOnly')\"></checkbox-input>\n                                </div>\n\n                                <div class=\"property-pattern\" *ngIf=\"isStringEligible()\">\n                                    <div class=\"property-label\">\n                                        <label for=\"pattern\">Pattern</label>\n                                    </div>\n                                    <div class=\"property-value\">\n                                        <pf-inline-text-editor [value]=\"item.pattern\"\n                                                               noValueMessage=\"No pattern.\"\n                                                               id=\"pattern\"\n                                                               [baseNode]=\"item\"\n                                                               nodePath=\"pattern\"\n                                                               (onChange)=\"setPattern($event)\"></pf-inline-text-editor>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Min/max tab content -->\n                            <div class=\"tabcontent-minmax\" *ngIf=\"_ptab == 'minmax'\">\n                                <div class=\"property-minimum\">\n                                    <div class=\"property-label\">\n                                        <label for=\"minimum\">Minimum</label>\n                                    </div>\n                                    <div class=\"property-value\">\n                                        <pf-inline-text-editor [value]=\"minimumIsSet()\" noValueMessage=\"No minimum.\"\n                                                                [baseNode]=\"item\" nodePath=\"minimum\" id=\"minimum\"\n                                                                (onChange)=\"setNumValue($event,'minimum')\"></pf-inline-text-editor>\n                                    </div>\n                                </div>\n\n                                <div class=\"property-maximum\">\n                                    <div class=\"property-label\">\n                                        <label for=\"maximum\">Maximum</label>\n                                    </div>\n                                    <div class=\"property-value\">\n                                        <pf-inline-text-editor [value]=\"maximumIsSet()\" noValueMessage=\"No maximum.\"\n                                                                [baseNode]=\"item\" nodePath=\"maximum\" id=\"maximum\"\n                                                                (onChange)=\"setNumValue($event,'maximum')\"></pf-inline-text-editor>\n                                    </div>\n                                </div>\n\n                                <div class=\"property-multipleOf\">\n                                    <div class=\"property-label\">\n                                        <label for=\"multiple-of\">MultipleOf</label>\n                                    </div>\n                                    <div class=\"property-value\">\n                                        <pf-inline-text-editor [value]=\"multipleOfIsSet()\" noValueMessage=\"No multipleOf.\"\n                                                                [baseNode]=\"item\" nodePath=\"multipleOf\" id=\"multiple-of\"\n                                                                (onChange)=\"setNumValue($event,'multipleOf')\"></pf-inline-text-editor>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Min/Max Length tab content -->\n                            <div class=\"tabcontent-length\" *ngIf=\"_ptab == 'length'\">\n                                <div class=\"property-min-length\">\n                                    <div class=\"property-label\">\n                                        <label for=\"min-length\">Minimum Length</label>\n                                    </div>\n                                    <pf-inline-text-editor [value]=\"minLengthIsSet()\" noValueMessage=\"No minLength.\"\n                                                            [baseNode]=\"item\" nodePath=\"minLength\" id=\"min-length\"\n                                                            (onChange)=\"setNumValue($event,'minLength')\"></pf-inline-text-editor>\n                                </div>\n\n                                <div class=\"property-max-length\">\n                                    <div class=\"property-label\">\n                                        <label for=\"max-length\">Maximum Length</label>\n                                    </div>\n                                    <div class=\"property-value\">\n                                        <pf-inline-text-editor [value]=\"maxLengthIsSet()\" noValueMessage=\"No maxLength.\"\n                                                                [baseNode]=\"item\" nodePath=\"maxLength\" id=\"max-length\"\n                                                                (onChange)=\"setNumValue($event,'maxLength')\"></pf-inline-text-editor>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <!-- Exclusive min/max tab content -->\n                            <div class=\"tabcontent-exclusive\" *ngIf=\"_ptab == 'exclusive'\">\n                                <div class=\"property-exclusive-minimum\">\n                                    <checkbox-input [defaultValue]=\"exclusiveMinIsSet()\" name=\"exclusive-minimum\" label=\"Exclusive Min\"\n                                                    id=\"exclusive-minimum\" [baseNode]=\"item\" nodePath=\"exclusiveMinimum\"\n                                                    (onChange)=\"setBoolean($event,'exclusiveMinimum')\"></checkbox-input>\n                                </div>\n                                <div class=\"property-exclusive-maximum\">\n                                    <checkbox-input [defaultValue]=\"exclusiveMaxIsSet()\" name=\"exclusive-maximum\" label=\"Exclusive Max\"\n                                                    id=\"exclusive-maximum\" [baseNode]=\"item\" nodePath=\"exclusiveMaximum\"\n                                                    (onChange)=\"setBoolean($event,'exclusiveMaximum')\"></checkbox-input>\n                                </div>\n                            </div>\n\n                            <!-- Min/max Items tab content -->\n                            <div class=\"tabcontent-items\" *ngIf=\"_ptab == 'items'\">\n                                <div class=\"property-min-items\">\n                                    <div class=\"property-label\">\n                                        <label for=\"min-items\">Minimum Items</label>\n                                    </div>\n                                    <div class=\"property-value\">\n                                        <pf-inline-text-editor [value]=\"minItemsIsSet()\" noValueMessage=\"No minItems.\"\n                                                                [baseNode]=\"item\" nodePath=\"minItems\" id=\"min-items\"\n                                                                (onChange)=\"setNumValue($event,'minItems')\"></pf-inline-text-editor>\n                                    </div>\n                                </div>\n\n                                <div class=\"property-max-items\">\n                                    <div class=\"property-label\">\n                                        <label for=\"max-items\">Maximum Items</label>\n                                    </div>\n                                    <div class=\"property-value\">\n                                        <pf-inline-text-editor [value]=\"maxItemsIsSet()\" noValueMessage=\"No maxItems.\"\n                                                                [baseNode]=\"item\" nodePath=\"maxItems\" id=\"max-items\"\n                                                                (onChange)=\"setNumValue($event,'maxItems')\"></pf-inline-text-editor>\n                                    </div>\n                                </div>\n\n                                <div class=\"property-unique-items\">\n                                    <checkbox-input [defaultValue]=\"uniqueItemsIsSet()\" name=\"unique-items\" label=\"Unique Items\"\n                                                    id=\"unique-items\" [baseNode]=\"item\" nodePath=\"uniqueItems\"\n                                                    (onChange)=\"setBoolean($event,'uniqueItems')\"></checkbox-input>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"property-example\" *ngIf=\"isEditingExample()\">\n                        <div class=\"form-label\">Example</div>\n                        <inline-markdown-editor [value]=\"item.example\" [noValueMessage]=\"'No example.'\"\n                                                [baseNode]=\"item\" nodePath=\"example\"\n                                                (onChange)=\"setExample($event)\"></inline-markdown-editor>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport * as YAML from 'js-yaml';\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {Oas20Schema} from \"@apicurio/data-models\";\nimport {ObjectUtils, StringUtils} from \"apicurio-ts-core\";\nimport {CodeEditorComponent, CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\n\n\n@Component({\n    selector: \"add-example-20-dialog\",\n    templateUrl: \"add-example-20.component.html\",\n    styleUrls: [ \"add-example.component.css\" ]\n})\nexport class AddExample20DialogComponent {\n\n    @Input() schema: Oas20Schema;\n    @Output() onAdd: EventEmitter<any> = new EventEmitter<any>();\n\n    @ViewChildren(\"addExampleModal\") addExampleModal: QueryList<ModalDirective>;\n    @ViewChildren(\"codeEditor\") codeEditor: QueryList<CodeEditorComponent>;\n\n    private _isOpen: boolean = false;\n\n    model: any = {\n        contentType: \"application/json\",\n        value: null,\n        format: CodeEditorMode.JSON,\n        valid: true\n    };\n\n    get value() {\n        return this.model.value;\n    }\n\n    set value(value: string) {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        }\n        this.model.value = value;\n    }\n\n    /**\n     * Called to open the dialog.\n     */\n    public open(): void {\n        this._isOpen = true;\n        this.model = {\n            contentType: \"application/json\",\n            value: null,\n            format: CodeEditorMode.JSON,\n            valid: true\n        };\n\n        this.addExampleModal.changes.subscribe(() => {\n            if (this.addExampleModal.first) {\n                this.addExampleModal.first.show();\n            }\n        });\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        let event: any = {\n            contentType: this.model.contentType,\n            value: this.model.value\n        };\n\n        // Convert to jsobject if the data is JSON and is valid\n        if (this.model.valid && this.model.format === CodeEditorMode.JSON) {\n            try {\n                event.value = JSON.parse(this.model.value)\n            } catch (e) { // should never happen!\n                console.error(\"[AddExample20DialogComponent] Failed to parse example.\");\n            }\n        }\n        this.onAdd.emit(event);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addExampleModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    valueEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    valueEditorMode(): CodeEditorMode {\n        return this.model.format;\n    }\n\n    hasValue(): boolean {\n        return !ObjectUtils.isNullOrUndefined(this.model.value);\n    }\n\n    canGenerateExample(): boolean {\n        return this.schema !== null && this.schema !== undefined;\n    }\n\n    generate(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.schema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.codeEditor.first.setText(exampleStr);\n    }\n\n}\n","<!-- Add Example Dialog -->\n<div>\n    <div bsModal #addExampleModal=\"bs-modal\" class=\"modal fade\" id=\"addExampleModal\" tabindex=\"-1\" role=\"dialog\"\n         aria-labelledby=\"addExampleModalLabel\" aria-hidden=\"true\" *ngIf=\"isOpen()\" [config]=\"{ backdrop: true }\"\n         (onShown)=\"addExampleInput.focus()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"addExampleModalLabel\">Add Example</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter the example content-type (mime type) and value below and then click Add.</p>\n                    <form id=\"addexample-form\" class=\"form-horizontal\" #addExampleForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"form-group\">\n                            <label class=\"col-sm-2 control-label required\" for=\"exampleName\">Name</label>\n                            <div class=\"col-sm-10\">\n                                <input #addExampleInput name=\"exampleName\" type=\"text\" id=\"exampleName\" class=\"form-control\"\n                                       placeholder=\"Enter an Example Content Type\" #name=\"ngModel\"\n                                       required [(ngModel)]=\"model.contentType\">\n                                <form-error-message [inputModel]=\"name\" [type]=\"'required'\">Name is required.</form-error-message>\n                            </div>\n                        </div>\n\n                        <div class=\"example\">\n                            <code-editor [theme]=\"valueEditorTheme()\"\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"150\"\n                                         [(text)]=\"value\"\n                                         #codeEditor\n                                         [editorStyle]=\"{ position: 'relative', height: '300px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generate()\"\n                                    *ngIf=\"canGenerateExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\"\n                            [disabled]=\"!addExampleForm.form.valid || !hasValue()\">Add</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Injectable} from \"@angular/core\";\nimport {Document} from \"@apicurio/data-models\";\nimport {Topic} from \"apicurio-ts-core\";\n\n/**\n * A service providing document related functionality, including the ability to\n * easily access the current document being edited and document related notifications\n * such as when it is changed.\n */\n@Injectable()\nexport class DocumentService {\n\n    private _document: Document;\n    private _change: Topic<void>;\n\n    constructor() {\n        this.reset();\n    }\n\n    public setDocument(document: Document): void {\n        this._document = document;\n    }\n\n    public currentDocument(): Document {\n        return this._document;\n    }\n\n    public emitChange(): void {\n        this._change.send(null);\n    }\n\n    public change(): Topic<void> {\n        return this._change;\n    }\n\n    public reset(): void {\n        this._document = null;\n        this._change = new Topic<void>();\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {ObjectUtils, StringUtils} from \"apicurio-ts-core\";\nimport {CodeEditorComponent, CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\nimport * as YAML from 'js-yaml';\nimport {Aai20Schema} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\n\n\nexport interface EditExampleEvent {\n    example: any;\n    payloadValue: any;\n    headersValue: any;\n}\n\n@Component({\n    selector: \"edit-aai-example-dialog\",\n    templateUrl: \"edit-aai-example.component.html\",\n    styleUrls: [ \"edit-aai-example.component.css\" ]\n})\nexport class EditAsyncApiExampleDialogComponent {\n\n    @Input() payloadSchema: Aai20Schema;\n    @Input() headersSchema: Aai20Schema;\n    @Output() onEdit: EventEmitter<EditExampleEvent> = new EventEmitter<EditExampleEvent>();\n\n    @ViewChildren(\"editExampleModal\") editExampleModal: QueryList<ModalDirective>;\n    @ViewChildren(\"payloadCodeEditor\") payloadCodeEditor: QueryList<CodeEditorComponent>;\n    @ViewChildren(\"headersCodeEditor\") headersCodeEditor: QueryList<CodeEditorComponent>;\n\n    private example: any;\n    private _isOpen: boolean = false;\n\n    model: any = {\n        payloadValue: null,\n        headersValue: null,\n        format: CodeEditorMode.JSON,\n        valid: true\n    };\n\n    get payloadValue() {\n        return this.model.payloadValue;\n    }\n    get headersValue() {\n        return this.model.headersValue;\n    }\n\n    set payloadValue(value: string) {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        }\n        this.model.payloadValue = value;\n    }\n    set headersValue(value: string) {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {\n            }\n        }\n        this.model.headersValue = value;\n    }\n\n    /**\n     * Called to open the dialog.\n     * @param example\n     */\n    public open(example: any): void {\n        this._isOpen = true;\n        this.example = example;\n        this.model = {\n            payloadValue: null,\n            headersValue: null,\n            format: CodeEditorMode.JSON,\n            valid: true\n        };\n\n        // Try to detect if it's an example created with Apicurio (name is\n        // the only first key) or generic example.\n        if (Object.keys(example).length == 1) {\n            let name: string = Object.keys(example)[0];\n            let pvalue: any = example[name].payload;\n            if (typeof pvalue === \"object\" || Array.isArray(pvalue)) {\n                pvalue = JSON.stringify(pvalue);\n            }\n            this.model.payloadValue = pvalue;\n            this.setValueFormatFromValue(pvalue);\n\n            let hvalue: any = example[name].headers;\n            if (typeof hvalue === \"object\" || Array.isArray(hvalue)) {\n                hvalue = JSON.stringify(hvalue);\n            }\n            this.model.headersValue = hvalue;\n        } else {\n            let val: any = example;\n            if (typeof val === \"object\" || Array.isArray(val)) {\n                val = JSON.stringify(val, null, 4);\n            }\n            this.model.value = val;\n            this.setValueFormatFromValue(val);\n        }\n\n        this.editExampleModal.changes.subscribe( () => {\n            if (this.editExampleModal.first) {\n                this.editExampleModal.first.show();\n            }\n        });\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"edit\".\n     */\n    edit(): void {\n        let event: EditExampleEvent = {\n            example: this.example,\n            payloadValue: this.model.payloadValue,\n            headersValue: this.model.headersValue,\n        };\n\n        // Convert to jsobject if the data is JSON and is valid\n        if (this.model.valid && this.model.format === CodeEditorMode.JSON) {\n            try {\n                event.payloadValue = JSON.parse(this.model.payloadValue);\n                event.headersValue = JSON.parse(this.model.headersValue);\n            } catch (e) {\n                console.error(\"[EditAsyncApiExampleDialogComponent] Failed to parse example.\");\n            }\n        }\n        this.onEdit.emit(event);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.editExampleModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    valueEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    valueEditorMode(): CodeEditorMode {\n        return this.model.format;\n    }\n\n    hasValue(): boolean {\n        return !ObjectUtils.isNullOrUndefined(this.model.payloadValue);\n    }\n\n    /**\n     * @param value\n     */\n    private setValueFormatFromValue(value: string): void {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {}\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {}\n        }\n    }\n\n    canGeneratePayloadExample(): boolean {\n        return this.payloadSchema !== null && this.payloadSchema !== undefined;\n    }\n    canGenerateHeadersExample(): boolean {\n        return this.headersSchema !== null && this.headersSchema !== undefined;\n    }\n\n    generatePayload(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.payloadSchema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.payloadCodeEditor.first.setText(exampleStr);\n    }\n    generateHeaders(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.headersSchema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.headersCodeEditor.first.setText(exampleStr);\n    }\n\n}\n","<!-- Edit Example Dialog -->\n<div>\n    <div bsModal #editExampleModal=\"bs-modal\" class=\"modal fade\" id=\"editExampleModal\" tabindex=\"-1\" role=\"dialog\" [config]=\"{ backdrop: true }\"\n         aria-labelledby=\"editExampleModalLabel\" role=\"dialog\" aria-hidden=\"true\" *ngIf=\"isOpen()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"editExampleModalLabel\">Edit Example</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter the new example payload value below and then click Edit.</p>\n                    <form id=\"editexample-form\" class=\"form-horizontal\" #editExampleForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"example\">\n                            <label class=\"control-label required\">Payload</label>\n                            <code-editor [theme]=\"valueEditorTheme()\" #codeEditor\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"200\"\n                                         [(text)]=\"payloadValue\"\n                                         [editorStyle]=\"{ position: 'relative', height: '200px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generatePayload()\"\n                                    *ngIf=\"canGeneratePayloadExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                        <div class=\"example\">\n                            <label class=\"control-label required\">Headers</label>\n                            <code-editor [theme]=\"valueEditorTheme()\" #codeEditor\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"200\"\n                                         [(text)]=\"headersValue\"\n                                         [editorStyle]=\"{ position: 'relative', height: '200px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generateHeaders()\"\n                                    *ngIf=\"canGenerateHeadersExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"edit()\"\n                            [disabled]=\"!editExampleForm.form.valid || !hasValue()\">Edit</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {ChangeLicenseCommand, CommandFactory, ICommand, Library, AaiDocument, AaiLicense} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {ILicense, LicenseService} from \"../../../_services/license.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\n\n\n@Component({\n    selector: \"aailicense-section\",\n    templateUrl: \"aailicense-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AsyncApiLicenseSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: AaiDocument;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, public licenseService: LicenseService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns true if a license has been configured for this API.\n     */\n    public hasLicense(): boolean {\n        if (this.document.info && this.document.info.license) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns the resolved license or null if not found.\n     */\n    public license(): ILicense {\n        return this.licenseService.findLicense(this.licenseUrl());\n    }\n\n    /**\n     * Returns the license model.\n     */\n    public licenseModel(): AaiLicense {\n        if (this.document.info && this.document.info.license) {\n            return this.document.info.license;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * returns the license name.\n     */\n    public licenseName(): string {\n        if (this.document.info && this.document.info.license) {\n            return this.document.info.license.name;\n        } else {\n            return \"\";\n        }\n    }\n\n    /**\n     * returns the license url.\n     */\n    public licenseUrl(): string {\n        if (this.document.info && this.document.info.license) {\n            return this.document.info.license.url;\n        } else {\n            return \"\";\n        }\n    }\n\n    /**\n     * Called when the user chooses a new license in the Choose License dialog.\n     * @param licenseInfo\n     */\n    public setLicense(licenseInfo: any): void {\n        let command: ICommand = CommandFactory.createChangeLicenseCommand(licenseInfo.name, licenseInfo.url);\n        this.commandService.emit(command);\n        let path = Library.createNodePath(this.document);\n        path.appendSegment(\"info\", false);\n        path.appendSegment(\"license\", false);\n        this.selectionService.select(path.toString());\n    }\n\n    /**\n     * Called when the user chooses to remove the license.\n     */\n    public deleteLicense(): void {\n        let command: ICommand = CommandFactory.createDeleteLicenseCommand(this.document.info);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"license\" label=\"LICENSE\" contextHelp=\"Does your API have a license?  If it does, you can configure it here.\" collaborationNodePath=\"/info/license\" [validationModels]=\"[licenseModel()]\">\n    <span actions>\n        <icon-button (onClick)=\"deleteLicense()\" [disabled]=\"!hasLicense()\" [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete the license information.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasLicense()\">\n            <span>No license has been set.</span>\n            <a (click)=\"setLicenseDialog.open()\">Set license</a>\n        </signpost>\n\n        <div *ngIf=\"hasLicense() && license() === null\" class=\"container-fluid license\">\n            <div class=\"row\">\n                <div class=\"col-md-8\">\n                    <h2><a href=\"{{ licenseUrl() }}\" target=\"_blank\">{{ licenseName() }}</a><span class=\"fa fa-fw fa-external-link\"></span></h2>\n                    <p>You have configured a license that we are not familiar with. For information about the license, click the link above! Or else click the button below to choose a different license...</p>\n                    <button class=\"btn btn-sm btn-default\" (click)=\"setLicenseDialog.open()\">Change License</button>\n                </div>\n            </div>\n        </div>\n\n        <div *ngIf=\"license() !== null\" class=\"container-fluid license\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h2><a href=\"{{ license().url }}\" target=\"_blank\">{{ license().name }}</a><span class=\"fa fa-fw fa-external-link\"></span></h2>\n                    <p>{{ license().description }}</p>\n                    <button class=\"btn btn-sm btn-default\" (click)=\"setLicenseDialog.open()\">Change License</button>\n                    <a class=\"pull-right\" href=\"{{ license().moreInfoUrl }}\" target=\"_blank\">View full {{ license().fullName }} »</a>\n                </div>\n                <div class=\"col-md-2\">\n                    <h3>Permissions</h3>\n                    <ul class=\"permissions\">\n                        <li *ngFor=\"let permission of license().permissions\"><span title=\"{{ licenseService.permissionDescription(permission) }}\">{{ licenseService.permissionName(permission) }}</span></li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <h3>Conditions</h3>\n                    <ul class=\"conditions\">\n                        <li *ngFor=\"let condition of license().conditions\"><span title=\"{{ licenseService.conditionDescription(condition) }}\">{{ licenseService.conditionName(condition) }}</span></li>\n                    </ul>\n                </div>\n                <div class=\"col-md-2\">\n                    <h3>Limitations</h3>\n                    <ul class=\"limitations\">\n                        <li *ngFor=\"let limitation of license().limitations\"><span title=\"{{ licenseService.limitationDescription(limitation) }}\">{{ licenseService.limitationName(limitation) }}</span></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<set-license-dialog #setLicenseDialog (onLicenseChosen)=\"setLicense($event)\"></set-license-dialog>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand,\n    Library,\n    AaiDocument,\n    AaiOperationTraitDefinition,\n    ReferenceUtil,\n    SimplifiedType,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\n\nimport {SourceFormComponent} from \"./source-form.base\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {EditorsService} from \"../../_services/editors.service\";\nimport {ApiCatalogService} from \"../../_services/api-catalog.service\";\n\n@Component({\n    selector: \"operationtrait-form\",\n    templateUrl: \"operationtrait-form.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OperationTraitFormComponent extends SourceFormComponent<AaiOperationTraitDefinition> {\n\n    protected _operationTrait: AaiOperationTraitDefinition;\n\n    @Input()\n    set operationTrait(messageTrait: AaiOperationTraitDefinition) {\n        this._operationTrait = messageTrait;\n        this.sourceNode = messageTrait;\n        this.revertSource();\n    }\n    get operationTrait(): AaiOperationTraitDefinition {\n        return this._operationTrait;\n    }\n\n     /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param selectionService\n     * @param commandService\n     * @param documentService\n     * @param editors\n     * @param catalog\n     */\n    public constructor(protected changeDetectorRef: ChangeDetectorRef,\n            protected selectionService: SelectionService,\n            protected commandService: CommandService,\n            protected documentService: DocumentService,\n            private editors: EditorsService,\n            private catalog: ApiCatalogService) {\n        super(changeDetectorRef, selectionService, commandService, documentService);\n    }\n\n    protected createEmptyNodeForSource(): AaiOperationTraitDefinition {\n        throw new Error(\"Method not implemented.\");\n    }\n    protected createReplaceNodeCommand(node: AaiOperationTraitDefinition): ICommand {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    public enableSourceMode(): void {\n        this.sourceNode = this.operationTrait;\n        super.enableSourceMode();\n    }\n\n    public changeSummary(newSummary: string): void {\n        console.info(\"[OperationTraitFormComponent] Changing message summary to: \", newSummary);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.operationTrait,\n                \"summary\", newSummary);\n        this.commandService.emit(command);\n    }\n\n    public changeDescription(newDescription: string): void {\n        console.info(\"[OperationTraitFormComponent] Changing message description to: \", newDescription);\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.operationTrait,\n                \"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n    public changeTags(newTags: string[]): void {\n        console.info(\"[OperationTraitFormComponent] User changed the tags.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.operationTrait, \"tags\", newTags);\n        this.commandService.emit(command);\n    }\n\n    public tagDefs(): ()=>string[] {\n        return ()=> {\n            if (this.operationTrait.ownerDocument().tags && this.operationTrait.ownerDocument().tags.length > 0) {\n                let tagDefs: string[] = this.operationTrait.ownerDocument().tags.map(tagDef => tagDef.name);\n                tagDefs.sort();\n                return tagDefs;\n            } else {\n                return [];\n            }\n        }\n    }\n}\n","<div class=\"detail-title\">\n    <div operationtrait-item class=\"detail-label\" [operationTrait]=\"operationTrait\"></div>\n    <div class=\"detail-actions\">\n\n    </div>\n</div>\n<div class=\"detail-tabs\">\n    <ul class=\"nav nav-tabs nav-tabs-pf\">\n        <li [class.active]=\"isDesignMode()\" [class.disabled]=\"canSaveSource()\"><a (click)=\"enableDesignMode()\">Design</a></li>\n        <li [class.active]=\"isSourceMode()\"><a (click)=\"enableSourceMode()\">Source</a></li>\n    </ul>\n</div>\n\n<!-- Source Mode -->\n<div class=\"detail-actionbar\" *ngIf=\"isSourceMode()\">\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canFormatSource()\" (click)=\"formatSource()\"><span class=\"fa fa-fw fa-indent\"></span> <span>Format</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canRevertSource()\" (click)=\"revertSource()\"><span class=\"fa fa-fw fa-undo\"></span> <span>Revert</span></button>\n    <button class=\"btn btn-primary btn-xs\" [disabled]=\"!canSaveSource()\" (click)=\"saveSource()\"><span class=\"pficon pficon-save\"></span> <span>Save</span></button>\n    <button class=\"btn btn-default btn-xs\" [disabled]=\"!canToggleSourceFormat()\" (click)=\"toggleSourceFormat()\">\n        <span class=\"fa fa-fw fa-code\"></span>\n        <span *ngIf=\"isSourceFormatYaml()\">As JSON</span>\n        <span *ngIf=\"isSourceFormatJson()\">As YAML</span>\n    </button>\n</div>\n<div class=\"detail-content\" style=\"position: relative\" *ngIf=\"isSourceMode()\">\n    <code-editor #sourceEditor\n                 [(text)]=\"source\"\n                 [theme]=\"sourceEditorTheme()\"\n                 [mode]=\"sourceEditorMode()\"\n                 [debounceTime]=\"250\"\n                 [editorStyle]=\"{ position: 'absolute', top: 0, bottom: 0, left: 0, right: 0, 'margin-top': '1px' }\"></code-editor>\n</div>\n\n<!-- Design Mode -->\n<div class=\"detail-content\" *ngIf=\"isDesignMode()\">\n\n    <div class=\"api-path-detail\">\n        <div class=\"tab-content\">\n            <div role=\"tabpanel\" class=\"tab-pane active\" id=\"apipath-2-get\">\n                <!-- Summary -->\n                <div class=\"section-field-label\">\n                    <validation-problem [model]=\"operationTrait\" [shallow]=\"true\" [property]=\"'summary'\"></validation-problem>\n                    <span>Summary</span>\n                </div>\n                <div class=\"section-field summary\">\n                    <pf-inline-text-editor [value]=\"operationTrait.summary\" [noValueMessage]=\"'No summary.'\"\n                                            [labelClass]=\"'api-version'\"\n                                            [inputClass]=\"'api-item-editor api-operationId-editor api-item-operationId'\"\n                                            [baseNode]=\"operationTrait\" nodePath=\"summary\"\n                                            (onChange)=\"changeSummary($event)\"></pf-inline-text-editor>\n                </div>\n\n                <!-- Description -->\n                <div class=\"section-field-label\">\n                    <validation-problem [model]=\"operationTrait\" [shallow]=\"true\" [property]=\"'description'\"></validation-problem>\n                    <span>Description</span>\n                </div>\n                <div class=\"section-field description\">\n                    <inline-markdown-editor [value]=\"operationTrait.description\" [noValueMessage]=\"'No description.'\"\n                                            [labelClass]=\"'api-item-editor api-description-editor operation-description api-item-description'\"\n                                            [inputClass]=\"'api-item-description'\"\n                                            [formClass]=\"'api-description-editor-form'\"\n                                            [baseNode]=\"operationTrait\" nodePath=\"description\"\n                                            (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n                </div>\n\n                <!-- Tags -->\n                <div class=\"section-field-label\">\n                    <validation-problem [model]=\"operationTrait\" [shallow]=\"true\" [property]=\"'tags'\"></validation-problem>\n                    <span>Tags</span>\n                </div>\n                <div class=\"section-field tags\">\n                    <inline-array-editor noValueMessage=\"No tags configured.\" [value]=\"operationTrait.tags\" [items]=\"tagDefs()\"\n                                        [baseNode]=\"operationTrait\" nodepath=\"tags\"\n                                        (onChange)=\"changeTags($event)\"></inline-array-editor>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedVisitorAdapter,\n    CommandFactory,\n    ICommand,\n    Library,\n    Oas20Document,\n    Oas20SecurityDefinitions,\n    Oas20SecurityScheme,\n    Oas30Document,\n    Oas30SecurityScheme,\n    OasDocument,\n    SecurityScheme,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {\n    ISecuritySchemeEditorHandler,\n    SecurityScheme20Data,\n    SecurityScheme30Data,\n    SecuritySchemeEditorComponent,\n    SecuritySchemeEditorEvent\n} from \"../../editors/security-scheme-editor.component\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {Scope} from \"../../../_models/scope.model\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"../../dialogs/rename-entity.component\";\n\n\n@Component({\n    selector: \"security-schemes-section\",\n    templateUrl: \"security-schemes-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SecuritySchemesSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument;\n\n    @ViewChild(\"renameDialog\", { static: true }) renameDialog: RenameEntityDialogComponent;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param editors\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private editors: EditorsService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Opens the security scheme dialog.\n     * @param scheme\n     */\n    public openSecuritySchemeModal(scheme?: SecurityScheme): void {\n        let editor: SecuritySchemeEditorComponent = this.editors.getSecuritySchemeEditor();\n        let handler: ISecuritySchemeEditorHandler = {\n            onSave: (event: SecuritySchemeEditorEvent) => {\n                if (!scheme) {\n                    this.addSecurityScheme(event.data);\n                } else {\n                    this.changeSecurityScheme(event.data);\n                }\n            },\n            onCancel: () => {}\n        };\n        editor.open(handler, this.document, scheme);\n    }\n\n    /**\n     * Returns true if there is at least one security scheme defined.\n     * @return\n     */\n    public hasSecuritySchemes(): boolean {\n        return this.securitySchemes().length > 0;\n    }\n\n    /**\n     * Returns all defined security schemes.\n     * @return\n     */\n    public securitySchemes(): SecurityScheme[] {\n        if (this.document.is2xDocument()) {\n            let secdefs: Oas20SecurityDefinitions = (this.document as Oas20Document).securityDefinitions;\n            if (secdefs) {\n                return secdefs.getSecuritySchemes().sort( (scheme1, scheme2) => {\n                    return scheme1.getSchemeName().localeCompare(scheme2.getSchemeName());\n                });\n            }\n            return [];\n        } else {\n            let doc: Oas30Document = this.document as Oas30Document;\n            if (doc.components) {\n                let schemes: Oas30SecurityScheme[] = doc.components.getSecuritySchemes();\n                return schemes.sort( (scheme1, scheme2) => {\n                    return scheme1.getSchemeName().localeCompare(scheme2.getSchemeName());\n                });\n            }\n            return [];\n        }\n    }\n\n    /**\n     * Node path that is the base for all security schemes.\n     */\n    public securitySchemesPath(): string {\n        if (this.document.is2xDocument()) {\n            return \"/securityDefinitions\";\n        } else {\n            return \"/components/securitySchemes\"\n        }\n    }\n\n    /**\n     * Called when the user adds a new security scheme.\n     * @param event\n     */\n    public addSecurityScheme(event: SecurityScheme20Data | SecurityScheme30Data): void {\n        if (this.document.is2xDocument()) {\n            let evt : SecurityScheme20Data = event as SecurityScheme20Data;\n            console.info(\"[SecuritySchemesSectionComponent] Adding a security scheme: %s\", event.schemeName);\n            let scheme: Oas20SecurityScheme = (this.document as Oas20Document).createSecurityDefinitions().createSecurityScheme(event.schemeName);\n            scheme.description = event.description;\n            scheme.type = event.type;\n            // TODO set values in the Oas20SecurityScheme only if necessary based on the type - avoid potential of leaking info from the dialog into the data model\n            scheme.name = event.name;\n            scheme.in = event.in;\n            scheme.flow = evt.flow;\n            scheme.authorizationUrl = evt.authorizationUrl;\n            scheme.tokenUrl = evt.tokenUrl;\n            if (scheme.type === \"oauth2\") {\n                scheme.scopes = scheme.createScopes();\n                if (evt.scopes) {\n                    for (let s of evt.scopes) {\n                        scheme.scopes.addScope(s.name, s.description);\n                    }\n                }\n            }\n\n\n            let command: ICommand = CommandFactory.createNewSecuritySchemeCommand(this.document.getDocumentType(), scheme);\n            this.commandService.emit(command);\n            let path = Library.createNodePath(scheme);\n            this.selectionService.select(path.toString());\n        } else {\n            console.info(\"[SecuritySchemesSectionComponent] Adding a security scheme: %s\", event.schemeName);\n            let evt : SecurityScheme30Data = event as SecurityScheme30Data;\n\n            let scheme: Oas30SecurityScheme = (this.document as Oas30Document).createComponents().createSecurityScheme(event.schemeName);\n            this.copySchemeToModel(evt, scheme);\n\n            let command: ICommand = CommandFactory.createNewSecuritySchemeCommand(this.document.getDocumentType(), scheme);\n            this.commandService.emit(command);\n            let path = Library.createNodePath(scheme);\n            this.selectionService.select(path.toString());\n        }\n    }\n\n    /**\n     * Called when the user changes an existing security scheme.\n     * @param event\n     */\n    public changeSecurityScheme(event: SecurityScheme20Data | SecurityScheme30Data): void {\n        if (this.document.is2xDocument()) {\n            let evt : SecurityScheme20Data = event as SecurityScheme20Data;\n            console.info(\"[SecuritySchemesSectionComponent] Changing a 2.0 security scheme: %s\", event.schemeName);\n            let scheme: Oas20SecurityScheme = (this.document as Oas20Document).createSecurityDefinitions().createSecurityScheme(event.schemeName);\n            scheme.description = event.description;\n            scheme.type = event.type;\n            scheme.name = event.name;\n            scheme.in = event.in;\n            scheme.flow = evt.flow;\n            scheme.authorizationUrl = evt.authorizationUrl;\n            scheme.tokenUrl = evt.tokenUrl;\n            if (scheme.type === \"oauth2\") {\n                if (evt.scopes) {\n                    scheme.scopes = scheme.createScopes();\n                    for (let s of evt.scopes) {\n                        scheme.scopes.addScope(s.name, s.description);\n                    }\n                }\n            }\n\n            let command: ICommand = CommandFactory.createChangeSecuritySchemeCommand(this.document.getDocumentType(), scheme);\n            this.commandService.emit(command);\n        } else {\n            console.info(\"[SecuritySchemesSectionComponent] Changing a 3.x security scheme: %s\", event.schemeName);\n            let evt : SecurityScheme30Data = event as SecurityScheme30Data;\n\n            let scheme: Oas30SecurityScheme = (this.document as Oas30Document).createComponents().createSecurityScheme(event.schemeName);\n            this.copySchemeToModel(evt, scheme);\n\n            let command: ICommand = CommandFactory.createChangeSecuritySchemeCommand(this.document.getDocumentType(), scheme);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Deletes a security scheme.\n     * @param scheme\n     */\n    public deleteSecurityScheme(scheme: SecurityScheme): void {\n        let command: ICommand = CommandFactory.createDeleteSecuritySchemeCommand(this.document.getDocumentType(), scheme.getSchemeName());\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Converts from array of scopes to scopes object for data model.\n     * @param scopes\n     */\n    private toScopes(scopes: Scope[]): any {\n        let rval: any = {};\n        scopes.forEach( scope => {\n            rval[scope.name] = scope.description;\n        });\n        return rval;\n    }\n\n    /**\n     * Copy the event data to the data model.\n     * @param event\n     * @param scheme\n     */\n    private copySchemeToModel(event: SecurityScheme30Data, scheme: Oas30SecurityScheme) {\n        scheme.description = event.description;\n        scheme.type = event.type;\n        if (scheme.type === \"http\") {\n            scheme.scheme = event.scheme;\n            if (scheme.scheme === \"Bearer\") {\n                scheme.bearerFormat = event.bearerFormat;\n            }\n        }\n        if (scheme.type === \"apiKey\") {\n            scheme.in = event.in;\n            scheme.name = event.name;\n        }\n        if (scheme.type === \"oauth2\") {\n            scheme.flows = scheme.createOAuthFlows();\n            if (event.flows.implicit.enabled) {\n                scheme.flows.implicit = scheme.flows.createImplicitOAuthFlow();\n                scheme.flows.implicit.authorizationUrl = event.flows.implicit.authorizationUrl;\n                scheme.flows.implicit.tokenUrl = event.flows.implicit.tokenUrl;\n                scheme.flows.implicit.refreshUrl = event.flows.implicit.refreshUrl;\n                scheme.flows.implicit.scopes = this.toScopes(event.flows.implicit.scopes);\n            }\n            if (event.flows.password.enabled) {\n                scheme.flows.password = scheme.flows.createPasswordOAuthFlow();\n                scheme.flows.password.authorizationUrl = event.flows.password.authorizationUrl;\n                scheme.flows.password.tokenUrl = event.flows.password.tokenUrl;\n                scheme.flows.password.refreshUrl = event.flows.password.refreshUrl;\n                scheme.flows.password.scopes = this.toScopes(event.flows.password.scopes);\n            }\n            if (event.flows.clientCredentials.enabled) {\n                scheme.flows.clientCredentials = scheme.flows.createClientCredentialsOAuthFlow();\n                scheme.flows.clientCredentials.authorizationUrl = event.flows.clientCredentials.authorizationUrl;\n                scheme.flows.clientCredentials.tokenUrl = event.flows.clientCredentials.tokenUrl;\n                scheme.flows.clientCredentials.refreshUrl = event.flows.clientCredentials.refreshUrl;\n                scheme.flows.clientCredentials.scopes = this.toScopes(event.flows.clientCredentials.scopes);\n            }\n            if (event.flows.authorizationCode.enabled) {\n                scheme.flows.authorizationCode = scheme.flows.createAuthorizationCodeOAuthFlow();\n                scheme.flows.authorizationCode.authorizationUrl = event.flows.authorizationCode.authorizationUrl;\n                scheme.flows.authorizationCode.tokenUrl = event.flows.authorizationCode.tokenUrl;\n                scheme.flows.authorizationCode.refreshUrl = event.flows.authorizationCode.refreshUrl;\n                scheme.flows.authorizationCode.scopes = this.toScopes(event.flows.authorizationCode.scopes);\n            }\n        }\n        if (scheme.type === \"openIdConnect\") {\n            scheme.openIdConnectUrl = event.openIdConnectUrl;\n        }\n    }\n\n    /**\n     * Called when the user clicks the trash icon to delete all the servers.\n     */\n    public deleteAllSecuritySchemes(): void {\n        let command: ICommand = CommandFactory.createDeleteAllSecuritySchemesCommand();\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Opens the rename security scheme dialog.\n     * @param scheme\n     */\n    public openRenameDialog(scheme: SecurityScheme): void {\n        let schemeNames: string[] = [];\n        VisitorUtil.visitTree(scheme.ownerDocument(), new class extends CombinedVisitorAdapter {\n            public visitSecurityScheme(node: SecurityScheme): void {\n                schemeNames.push(node.getSchemeName());\n            }\n        }, TraverserDirection.down);\n        this.renameDialog.open(scheme, scheme.getSchemeName(), newName => {\n            return schemeNames.indexOf(newName) !== -1;\n        });\n    }\n\n    /**\n     * Renames the security scheme.\n     * @param event\n     */\n    public rename(event: RenameEntityEvent): void {\n        let scheme: SecurityScheme = <any>event.entity;\n        let command: ICommand = CommandFactory.createRenameSecuritySchemeCommand(scheme.getSchemeName(), event.newName);\n        this.commandService.emit(command);\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ICommand, Library, Node} from \"@apicurio/data-models\";\n\nimport * as YAML from 'js-yaml';\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {AbstractBaseComponent} from \"../common/base-component\";\nimport { ChangeDetectorRef, Directive } from \"@angular/core\";\nimport {SectionComponent} from \"./shared/section.component\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\n\n\n/**\n * Base class for all forms that support a \"Source\" tab.\n */\n@Directive()\nexport abstract class SourceFormComponent<T extends Node> extends AbstractBaseComponent {\n\n    private _mode: string = \"design\";\n    private _sourceFormat: CodeEditorMode = CodeEditorMode.YAML;\n    private _sourceNode: T;\n    private _sourceJsObj: any = null;\n    set sourceNode(node: T) {\n        this._sourceNode = node;\n        this._sourceJsObj = null;\n        this._sourceText = null;\n    }\n    get sourceNode(): T {\n        return this._sourceNode;\n    }\n\n    private _source: any = {\n        dirty: false,\n        parseable: false,\n        valid: false,\n        value: null\n    };\n\n    public sourceJs(): any {\n        if (this._sourceJsObj === null) {\n            this._sourceJsObj = Library.writeNode(this.sourceNode);\n        }\n        return this._sourceJsObj;\n    }\n\n    private _sourceText: string;\n    get source() {\n        if (this._sourceText === null || this._sourceText === undefined) {\n            if (this._sourceFormat === CodeEditorMode.YAML) {\n                this._sourceText = YAML.safeDump(this.sourceJs(), {\n                    indent: 4,\n                    lineWidth: 110,\n                    noRefs: true\n                });\n            } else {\n                this._sourceText = JSON.stringify(this.sourceJs(), null, 4);\n            }\n        }\n        return this._sourceText;\n    }\n\n    set source(newSource: string) {\n        this._sourceText = newSource;\n        this._source.dirty = true;\n        this._source.value = null;\n        this._source.parseable = false;\n        this._source.valid = false;\n        try {\n            let newJsObject: any;\n            if (this._sourceFormat === CodeEditorMode.YAML) {\n                newJsObject = YAML.safeLoad(newSource);\n            } else {\n                newJsObject = JSON.parse(newSource);\n            }\n            this._source.parseable = true;\n            let currentJsObj: any = this.sourceJs();\n            this._source.dirty = !ObjectUtils.objectEquals(currentJsObj, newJsObject);\n            let node: Node = this.createEmptyNodeForSource();\n            Library.readNode(newJsObject, node);\n            this._source.value = node;\n            this._source.valid = true;\n        } catch (e) {\n            // OK to suppress this - it's likely the case that the text isn't valid/parseable.\n        }\n    }\n\n    protected constructor(protected changeDetectorRef: ChangeDetectorRef,\n                       protected selectionService: SelectionService,\n                       protected commandService: CommandService,\n                       protected documentService: DocumentService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected onDocumentChange(): void {\n        if (!this._source.dirty) {\n            this._sourceJsObj = null;\n            this._sourceText = null;\n        }\n    }\n\n    protected abstract createEmptyNodeForSource(): T;\n\n    public canFormatSource(): boolean {\n        return this._source.parseable;\n    }\n\n    public canToggleSourceFormat(): boolean {\n        return this._source.parseable;\n    }\n\n    public canRevertSource(): boolean {\n        return this._source.dirty;\n    }\n\n    public canSaveSource(): boolean {\n        return this._source.dirty && this._source.valid;\n    }\n\n    public revertSource(): void {\n        let originalSource: string;\n        if (this._sourceFormat === CodeEditorMode.YAML) {\n            originalSource = YAML.safeDump(this.sourceJs(), {\n                indent: 4,\n                lineWidth: 110,\n                noRefs: true\n            });\n        } else {\n            originalSource = JSON.stringify(this.sourceJs(), null, 4);\n        }\n        this.source = originalSource;\n        this._source.dirty = false;\n        this._source.value = null;\n        this._source.valid = false;\n    }\n\n    public saveSource(): void {\n        let command: ICommand = this.createReplaceNodeCommand(<T>this._source.value);\n        this.commandService.emit(command);\n        this.sourceNode = this._source.value;\n        this._source.dirty = false;\n        this._source.value = null;\n        this._source.valid = true;\n    }\n\n    public isSourceFormatYaml(): boolean {\n        return this._sourceFormat === CodeEditorMode.YAML;\n    }\n\n    public isSourceFormatJson(): boolean {\n        return this._sourceFormat === CodeEditorMode.JSON;\n    }\n\n    public toggleSourceFormat(): void {\n        // 1. parse the source in the editor (either yaml or json)\n        // 2. stringify the resulting object as the other format\n        // 3. this.source = result\n        let parsedSource: any;\n        if (this.isSourceFormatJson()) {\n            parsedSource = JSON.parse(this._sourceText);\n            this.setSourceFormat(CodeEditorMode.YAML);\n        } else {\n            parsedSource = YAML.safeLoad(this._sourceText);\n            this.setSourceFormat(CodeEditorMode.JSON);\n        }\n        if (parsedSource) {\n            let newSource: string;\n            if (this.isSourceFormatJson()) {\n                newSource = JSON.stringify(parsedSource, null, 4);\n            } else {\n                newSource = YAML.safeDump(this.sourceJs(), {\n                    indent: 4,\n                    lineWidth: 110,\n                    noRefs: true\n                });\n            }\n            this.source = newSource;\n        }\n    }\n\n    public setSourceFormat(sourceFormat: CodeEditorMode): void {\n        this._sourceFormat = sourceFormat;\n    }\n\n    public formatSource(): void {\n        // 1. parse the source in the editor (either yaml or json)\n        // 2. stringify the resulting object as either yaml or json\n        // 3. this.source = result\n        let parsedSource: any;\n        if (this.isSourceFormatJson()) {\n            parsedSource = JSON.parse(this._sourceText);\n        } else {\n            parsedSource = YAML.safeLoad(this._sourceText);\n        }\n        if (parsedSource) {\n            let newSource: string;\n            if (this.isSourceFormatJson()) {\n                newSource = JSON.stringify(parsedSource, null, 4);\n            } else {\n                newSource = YAML.safeDump(this.sourceJs(), {\n                    indent: 4,\n                    lineWidth: 110,\n                    noRefs: true\n                });\n            }\n            this.source = newSource;\n        }\n    }\n\n    protected abstract createReplaceNodeCommand(node: T): ICommand;\n\n    public isDesignMode(): boolean {\n        return this._mode === \"design\";\n    }\n\n    public isSourceMode(): boolean {\n        return this._mode === \"source\";\n    }\n\n    public enableDesignMode(): void {\n        // Cannot change tabs if the source editor is dirty.\n        if (this._source.dirty) {\n            return;\n        }\n        this._mode = \"design\";\n        this._sourceText = null;\n        this._sourceJsObj = null;\n    }\n\n    public enableSourceMode(): void {\n        this._mode = \"source\";\n    }\n\n    public sourceEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    public sourceEditorMode(): CodeEditorMode {\n        return this._sourceFormat;\n    }\n\n    public collapseAllSections(): void {\n        SectionComponent.allVisibleSections.forEach( section => {\n            section.collapse();\n        });\n    }\n\n    public expandAllSections(): void {\n        SectionComponent.allVisibleSections.forEach( section => {\n            section.expand();\n        });\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {Injectable} from \"@angular/core\";\n\nvar LICENSE_DATA = [\n    {\n        id: \"agpl-3.0\",\n        name: \"GNU AGPLv3\",\n        fullName: \"GNU Affero General Public License v3.0\",\n        description: \"Permissions of this strongest copyleft license are conditioned on making available complete source code of licensed works and modifications, which include larger works using a licensed work, under the same license. Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. When a modified version is used to provide a service over a network, the complete source code of the modified version must be made available.\",\n        url: \"https://www.gnu.org/licenses/agpl.txt\",\n        urls: [\n            \"https://www.gnu.org/licenses/agpl.html\",\n            \"https://www.gnu.org/licenses/agpl.txt\",\n            \"https://www.gnu.org/licenses/agpl.dbk\",\n            \"https://www.gnu.org/licenses/agpl.texi\",\n            \"https://www.gnu.org/licenses/agpl.tex\",\n            \"https://www.gnu.org/licenses/agpl.md\",\n            \"https://www.gnu.org/licenses/agpl.odt\",\n            \"https://www.gnu.org/licenses/agpl.rtf\"\n        ],\n        moreInfoUrl: \"https://choosealicense.com/licenses/agpl-3.0/\",\n        permissions: [\n            \"commercial_use\", \"distribution\", \"modification\", \"patent_use\", \"private_use\"\n        ],\n        conditions: [\n            \"disclose_source\", \"license_and_copyright_notice\", \"network_use_is_distribution\", \"same_license\", \"state_changes\"\n        ],\n        limitations: [\n            \"liability\", \"warranty\"\n        ]\n    },\n\n    {\n        id: \"gpl-3.0\",\n        name: \"GNU GPLv3\",\n        fullName: \"GNU General Public License v3.0\",\n        description: \"Permissions of this strong copyleft license are conditioned on making available complete source code of licensed works and modifications, which include larger works using a licensed work, under the same license. Copyright and license notices must be preserved. Contributors provide an express grant of patent rights.\",\n        url: \"https://www.gnu.org/licenses/gpl.txt\",\n        urls: [\n            \"https://www.gnu.org/licenses/gpl.html\",\n            \"https://www.gnu.org/licenses/gpl.txt\",\n            \"https://www.gnu.org/licenses/gpl.dbk\",\n            \"https://www.gnu.org/licenses/gpl.texi\",\n            \"https://www.gnu.org/licenses/gpl.tex\",\n            \"https://www.gnu.org/licenses/gpl.md\",\n            \"https://www.gnu.org/licenses/gpl.odt\",\n            \"https://www.gnu.org/licenses/gpl.rtf\"\n        ],\n        moreInfoUrl: \"https://choosealicense.com/licenses/gpl-3.0/\",\n        permissions: [\n            \"commercial_use\", \"distribution\", \"modification\", \"patent_use\", \"private_use\"\n        ],\n        conditions: [\n            \"disclose_source\", \"license_and_copyright_notice\", \"same_license\", \"state_changes\"\n        ],\n        limitations: [\n            \"liability\", \"warranty\"\n        ]\n    },\n\n    {\n        id: \"lgpl-3.0\",\n        name: \"GNU LGPLv3\",\n        fullName: \"GNU Lesser General Public License v3.0\",\n        description: \"Permissions of this copyleft license are conditioned on making available complete source code of licensed works and modifications under the same license or the GNU GPLv3. Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. However, a larger work using the licensed work through interfaces provided by the licensed work may be distributed under different terms and without source code for the larger work.\",\n        url: \"https://www.gnu.org/licenses/lgpl.txt\",\n        urls: [\n            \"https://www.gnu.org/licenses/lgpl.html\",\n            \"https://www.gnu.org/licenses/lgpl.txt\",\n            \"https://www.gnu.org/licenses/lgpl.dbk\",\n            \"https://www.gnu.org/licenses/lgpl.texi\",\n            \"https://www.gnu.org/licenses/lgpl.tex\",\n            \"https://www.gnu.org/licenses/lgpl.md\",\n            \"https://www.gnu.org/licenses/lgpl.odt\",\n            \"https://www.gnu.org/licenses/lgpl.rtf\"\n        ],\n        moreInfoUrl: \"https://choosealicense.com/licenses/lgpl-3.0/\",\n        permissions: [\n            \"commercial_use\", \"distribution\", \"modification\", \"patent_use\", \"private_use\"\n        ],\n        conditions: [\n            \"disclose_source\", \"license_and_copyright_notice\", \"same_license_library\", \"state_changes\"\n        ],\n        limitations: [\n            \"liability\", \"warranty\"\n        ]\n    },\n\n    {\n        id: \"mpl-2.0\",\n        name: \"Mozilla 2.0\",\n        fullName: \"Mozilla Public License 2.0\",\n        description: \"Permissions of this weak copyleft license are conditioned on making available source code of licensed files and modifications of those files under the same license (or in certain cases, one of the GNU licenses). Copyright and license notices must be preserved. Contributors provide an express grant of patent rights. However, a larger work using the licensed work may be distributed under different terms and without source code for files added in the larger work.\",\n        url: \"https://www.mozilla.org/en-US/MPL/2.0/\",\n        urls: [\n            \"https://www.mozilla.org/en-US/MPL/2.0/\",\n            \"https://www.mozilla.org/media/MPL/2.0/index.815ca599c9df.txt\"\n        ],\n        moreInfoUrl: \"https://choosealicense.com/licenses/mpl-2.0/\",\n        permissions: [\n            \"commercial_use\", \"distribution\", \"modification\", \"patent_use\", \"private_use\"\n        ],\n        conditions: [\n            \"disclose_source\", \"license_and_copyright_notice\", \"same_license_file\"\n        ],\n        limitations: [\n            \"liability\", \"trademark_use\", \"warranty\"\n        ]\n    },\n\n    {\n        id: \"apache-2.0\",\n        name: \"Apache 2.0\",\n        fullName: \"Apache License 2.0\",\n        description: \"A permissive license whose main conditions require preservation of copyright and license notices. Contributors provide an express grant of patent rights. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\n        url: \"https://www.apache.org/licenses/LICENSE-2.0\",\n        urls: [\n            \"https://www.apache.org/licenses/LICENSE-2.0\",\n            \"https://www.apache.org/licenses/LICENSE-2.0.txt\",\n            \"http://www.apache.org/licenses/LICENSE-2.0.html\"\n        ],\n        moreInfoUrl: \"https://choosealicense.com/licenses/apache-2.0/\",\n        permissions: [\n            \"commercial_use\", \"distribution\", \"modification\", \"patent_use\", \"private_use\"\n        ],\n        conditions: [\n            \"license_and_copyright_notice\", \"state_changes\"\n        ],\n        limitations: [\n            \"liability\", \"trademark_use\", \"warranty\"\n        ]\n    },\n\n    {\n        id: \"mit\",\n        name: \"MIT License\",\n        fullName: \"MIT License\",\n        description: \"A short and simple permissive license with conditions only requiring preservation of copyright and license notices. Licensed works, modifications, and larger works may be distributed under different terms and without source code.\",\n        url: \"https://opensource.org/licenses/MIT\",\n        urls: [\n            \"https://opensource.org/licenses/MIT\"\n        ],\n        moreInfoUrl: \"https://choosealicense.com/licenses/mit/\",\n        permissions: [\n            \"commercial_use\", \"distribution\", \"modification\", \"private_use\"\n        ],\n        conditions: [\n            \"license_and_copyright_notice\"\n        ],\n        limitations: [\n            \"liability\", \"warranty\"\n        ]\n    },\n\n    {\n        id: \"unlicense\",\n        name: \"The Unlicense\",\n        fullName: \"The Unlicense\",\n        description: \"A license with no conditions whatsoever which dedicates works to the public domain. Unlicensed works, modifications, and larger works may be distributed under different terms and without source code.\",\n        url: \"http://unlicense.org\",\n        urls: [\n            \"http://unlicense.org\"\n        ],\n        moreInfoUrl: \"https://choosealicense.com/licenses/unlicense/\",\n        permissions: [\n            \"commercial_use\", \"distribution\", \"modification\", \"private_use\"\n        ],\n        conditions: [],\n        limitations: [\n            \"liability\", \"warranty\"\n        ]\n    }\n\n];\n\nvar PERMISSIONS = {\n    \"commercial_use\": {\n        \"name\": \"Commercial Use\",\n        \"description\": \"This software and derivatives may be used for commercial purposes.\"\n    },\n    \"distribution\": {\"name\": \"Distribution\", \"description\": \"You may distribute this software.\"},\n    \"modification\": {\"name\": \"Modification\", \"description\": \"This software may be modified.\"},\n    \"patent_use\": {\n        \"name\": \"Patent Use\",\n        \"description\": \"This license provides an express grant of patent rights from the contributor to the recipient.\"\n    },\n    \"private_use\": {\n        \"name\": \"Private Use\",\n        \"description\": \"You may use and modify the software without distributing it.\"\n    }\n};\n\nvar CONDITIONS = {\n    \"disclose_source\": {\n        \"name\": \"Disclose source\",\n        \"description\": \"Source code must be made available when distributing the software.\"\n    },\n    \"license_and_copyright_notice\": {\n        \"name\": \"License and copyright notice\",\n        \"description\": \"Include a copy of the license and copyright notice with the software.\"\n    },\n    \"network_use_is_distribution\": {\n        \"name\": \"Network use is distribution\",\n        \"description\": \"Users who interact with the software via network are given the right to receive a copy of the corresponding source code.\"\n    },\n    \"same_license\": {\n        \"name\": \"Same License\",\n        \"description\": \"Modifications must be released under the same license when distributing the software. In some cases a similar or related license may be used.\"\n    },\n    \"same_license_library\": {\n        \"name\": \"Same License (library)\",\n        \"description\": \"Modifications must be released under the same license when distributing the software. In some cases a similar or related license may be used, or this condition may not apply to works that use the software as a library.\"\n    },\n    \"same_license_file\": {\n        \"name\": \"Same License (file)\",\n        \"description\": \"Modifications of existing files must be released under the same license when distributing the software. In some cases a similar or related license may be used.\"\n    },\n    \"state_changes\": {\"name\": \"State changes\", \"description\": \"Indicate changes made to the code.\"}\n};\n\nvar LIMITATIONS = {\n    \"liability\": {\"name\": \"Liability\", \"description\": \"This license includes a limitation of liability.\"},\n    \"trademark_use\": {\n        \"name\": \"Trademark use\",\n        \"description\": \"This license explicitly states that it does NOT grant you trademark rights, even though licenses without such a statement probably do not grant you any implicit trademark rights.\"\n    },\n    \"warranty\": {\n        \"name\": \"Warranty\",\n        \"description\": \"The license explicitly states that it does NOT provide any warranty.\"\n    }\n};\n\nexport interface ILicense {\n    id: string;\n    name: string;\n    fullName: string;\n    description: string;\n    url: string;\n    moreInfoUrl: string;\n    permissions: string[];\n    conditions: string[];\n    limitations: string[];\n}\n\n/**\n * A simple service providing convenient access to information about different\n * licenses commonly used to license APIs.\n */\n@Injectable()\nexport class LicenseService {\n\n    /**\n     * Returns a list of all licenses.\n     *\n     */\n    public getLicenses(): ILicense[] {\n        return LICENSE_DATA;\n    }\n\n    /**\n     * Resolves a permission code into a name.\n     * @param permission\n     */\n    public permissionName(permission: string): string {\n        return PERMISSIONS[permission].name;\n    }\n\n    /**\n     * Resolves a permission code into a description.\n     * @param permission\n     */\n    public permissionDescription(permission: string): string {\n        return PERMISSIONS[permission].description;\n    }\n\n    /**\n     * Resolves a condition code into a name.\n     * @param condition\n     */\n    public conditionName(condition: string): string {\n        return CONDITIONS[condition].name;\n    }\n\n    /**\n     * Resolves a condition code into a description.\n     * @param condition\n     */\n    public conditionDescription(condition: string): string {\n        return CONDITIONS[condition].description;\n    }\n\n    /**\n     * Resolves a limitation code into a name.\n     * @param limitation\n     */\n    public limitationName(limitation: string): string {\n        return LIMITATIONS[limitation].name;\n    }\n\n    /**\n     * Resolves a limitation code into a description.\n     * @param limitation\n     */\n    public limitationDescription(limitation: string): string {\n        return LIMITATIONS[limitation].description;\n    }\n\n    /**\n     * Finds a license by its URL.  Multiple URLs may resolve to the same\n     * license.\n     * @param url\n     * @return\n     */\n    public findLicense(url: string): ILicense {\n        for (let license of LICENSE_DATA) {\n            if (license.urls.indexOf(url) > -1) {\n                return license;\n            }\n        }\n        return null;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Injectable} from \"@angular/core\";\nimport {EditingInfo} from \"../models/editingInfo.model\";\nimport {LoggerService} from \"./logger.service\";\nimport {WindowRef} from \"./window-ref.service\";\n\nconst DEMO_CONTENT = `{\n    \"openapi\": \"3.0.2\",\n    \"info\": {\n        \"title\": \"Demo API\",\n        \"version\": \"1.0.0\",\n        \"description\": \"A sample API.\",\n        \"termsOfService\": \"http://swagger.io/terms/\"\n    },\n    \"paths\": {},\n    \"components\": {}\n}`;\n\n/**\n * A service used to get access to the config information.\n */\n@Injectable()\nexport class ConfigService {\n\n    private resolve: any;\n    private reject: any;\n\n    private demoMode: boolean = false;\n    private demoUrl: string | null = null;\n\n    constructor(private window: WindowRef, private logger: LoggerService, private winRef: WindowRef) {\n        this.logger.info(\"[ConfigService] Config service created.\");\n\n        const demoValue: string | undefined = this.getQueryParam(\"demo\");\n        if (demoValue !== undefined) {\n            this.demoMode = true;\n            if (demoValue !== \"\") {\n                this.demoUrl = demoValue;\n            }\n        }\n\n        if (!this.isDemoMode()) {\n            this.window.window.onmessage = (evt: MessageEvent) => {\n                this.logger.info(\"[ConfigService] OnMessage received: \", evt);\n                if (evt.data && evt.data.type && evt.data.type === \"apicurio-editingInfo\") {\n                    const ei: EditingInfo = evt.data.data as EditingInfo;\n                    this.logger.info(\"[ConfigService] Editing Info received from parent frame: \", ei);\n                    this.resolve(ei);\n                }\n            };\n        }\n    }\n\n    public get(): Promise<EditingInfo> {\n        if (this.demoMode) {\n            return new Promise((resolve, reject) => {\n                const info: EditingInfo = {\n                    content: {\n                        type: \"OPENAPI\",\n                        value: DEMO_CONTENT\n                    },\n                    features: {\n                        allowImports: false,\n                        allowCustomValidations: false\n                    }\n                };\n                resolve(info);\n            });\n        }\n        return new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n\n    private isDemoMode(): boolean {\n        return this.demoMode;\n    }\n\n    private getQueryParam(name: string): string | undefined {\n        const query: string = this.winRef.window.location.search.substring(1);\n        const vars: string[] = query.split(\"&\");\n        // tslint:disable-next-line:prefer-for-of\n        for (let i = 0; i < vars.length; i++) {\n            const pair = vars[i].split(\"=\");\n            if (pair[0] === name) {\n                if (pair.length > 1) {\n                    return pair[1];\n                } else {\n                    return \"\";\n                }\n            }\n        }\n        return undefined;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, ICommand, AaiContact, AaiDocument} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\n\n\n@Component({\n    selector: \"aaicontact-section\",\n    templateUrl: \"aaicontact-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AsyncApiContactSectionComponent extends AbstractBaseComponent {\n\n    @Input() document: AaiDocument;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns true if the API has Contact Info defined.\n     */\n    public hasContact(): boolean {\n        if (this.document.info && this.document.info.contact) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Returns the current contact object.\n     */\n    public contact(): AaiContact {\n        if (this.hasContact()) {\n            return this.document.info.contact;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Called to add empty contact info to the API definition.\n     */\n    public createEmptyContact(): void {\n        let command: ICommand = CommandFactory.createChangeContactCommand(null, null, null);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user chooses to remove the contact info.\n     */\n    public deleteContact(): void {\n        let command: ICommand = CommandFactory.createDeleteContactCommand(this.document.info);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Returns the contact name.\n     */\n    public contactName(): string {\n        if (this.document.info && this.document.info.contact && this.document.info.contact.name) {\n            return this.document.info.contact.name;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the contact email.\n     */\n    public contactEmail(): string {\n        if (this.document.info && this.document.info.contact && this.document.info.contact.email) {\n            return this.document.info.contact.email;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Returns the contact url.\n     */\n    public contactUrl(): string {\n        if (this.document.info && this.document.info.contact && this.document.info.contact.url) {\n            return this.document.info.contact.url;\n        } else {\n            return null;\n        }\n    }\n\n    /**\n     * Called when the user changes the contact name.\n     * @param newValue\n     */\n    public changeContactName(newValue: string): void {\n        if (!newValue) { newValue = null; }\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.contact(), \"name\", newValue);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the contact email.\n     * @param newValue\n     */\n    public changeContactEmail(newValue: string): void {\n        if (!newValue) { newValue = null; }\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.contact(), \"email\", newValue);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the contact url.\n     * @param newValue\n     */\n    public changeContactURL(newValue: string): void {\n        if (!newValue) { newValue = null; }\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.contact(), \"url\", newValue);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"contact\" label=\"CONTACT\"\n         contextHelp=\"Update the information contained in this section to provide users of the API details about how to contact you should they need help.\"\n         collaborationNodePath=\"/info/contact\"\n         [validationModels]=\"[contact()]\">\n    <span actions>\n        <icon-button (onClick)=\"deleteContact()\" [disabled]=\"!hasContact()\" [pullRight]=\"true\" type=\"delete\"\n                     [title]=\"'Delete the contact information.'\"></icon-button>\n    </span>\n    <div body>\n        <signpost *ngIf=\"!hasContact()\">\n            <span>No contact information has been entered.</span>\n            <a (click)=\"createEmptyContact()\">Add contact info</a>\n        </signpost>\n        <div *ngIf=\"hasContact()\">\n            <!-- Contact Name -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"contact()\" property=\"name\"></validation-problem>\n                <span>Name</span>\n            </div>\n            <div class=\"section-field name\">\n                <pf-inline-text-editor [value]=\"contactName()\"\n                                       [labelClass]=\"'contact-name'\"\n                                       [baseNode]=\"document.info.contact\"\n                                       nodePath=\"name\"\n                                       [noValueMessage]=\"'No name provided.'\" (onChange)=\"changeContactName($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Contact Email -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"contact()\" property=\"email\"></validation-problem>\n                <span>Email</span>\n            </div>\n            <div class=\"section-field email\">\n                <pf-inline-text-editor [value]=\"contactEmail()\"\n                                       [labelClass]=\"'contact-email'\"\n                                       [baseNode]=\"document.info.contact\"\n                                       nodePath=\"email\"\n                                       [noValueMessage]=\"'No email provided.'\" (onChange)=\"changeContactEmail($event)\"></pf-inline-text-editor>\n            </div>\n\n            <!-- Contact URL -->\n            <div class=\"section-field-label\">\n                <validation-problem [model]=\"contact()\" property=\"url\"></validation-problem>\n                <span>URL</span>\n            </div>\n            <div class=\"section-field url\">\n                <pf-inline-text-editor [value]=\"contactUrl()\"\n                                       [labelClass]=\"'contact-url'\"\n                                       [baseNode]=\"document.info.contact\"\n                                       nodePath=\"url\"\n                                       [noValueMessage]=\"'No URL provided.'\" (onChange)=\"changeContactURL($event)\"></pf-inline-text-editor>\n            </div>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {Library, Document, TraverserDirection, OasDocument} from \"@apicurio/data-models\";\nimport {FindSchemaDefinitionsVisitor} from \"../../_visitors/schema-definitions.visitor\";\nimport {DropDownOption, DropDownOptionValue} from \"../common/drop-down.component\";\n\nexport class AddSchemaDialogData {\n    public ref: string;\n}\n\n\n@Component({\n    selector: \"add-schema-dialog\",\n    templateUrl: \"add-schema.component.html\"\n})\nexport class AddSchemaDialogComponent {\n\n    @Output() onAdd: EventEmitter<AddSchemaDialogData> = new EventEmitter<AddSchemaDialogData>();\n\n    @ViewChildren(\"addSchemaModal\") addSchemaModal: QueryList<ModalDirective>;\n\n    private _isOpen: boolean = false;\n\n    doc: OasDocument;\n    refName: string;\n    references: string[] = [];\n\n    /**\n     * Called to open the dialog.\n     * @param parent\n     */\n    public open(doc: Document): void {\n        console.info(\"[AddSchemaDialogComponent] Opening dialog.\");\n        this.doc = doc as OasDocument;\n        this._isOpen = true;\n        this.addSchemaModal.changes.subscribe( thing => {\n            if (this.addSchemaModal.first) {\n                this.addSchemaModal.first.show();\n            }\n        });\n\n        this.references = this.getSchemaDefinitionNames();\n        this.refName = null;\n    }\n\n    /**\n     * Gets a list of all the response definition names in the document.\n     */\n    private getSchemaDefinitionNames(): string[] {\n        let viz: FindSchemaDefinitionsVisitor = new FindSchemaDefinitionsVisitor(null);\n        Library.visitTree(this.doc, viz, TraverserDirection.down);\n        return viz.getSortedSchemaDefinitions().map( response => {\n            return response.getName();\n        });\n    }\n\n    hasReferences(): boolean {\n        return this.references && this.references.length > 0;\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.refName = null\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        if (this.isValid()) {\n            let refPrefix: string = \"#/components/schemas/\";\n            if (this.doc.is2xDocument()) {\n                refPrefix = \"#/definitions/\";\n            }\n\n            let data: AddSchemaDialogData = {\n                ref : refPrefix + this.refName\n            };\n            if (!this.refName) {\n                data.ref = null;\n            }\n            this.onAdd.emit(data);\n            this.cancel();\n        }\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addSchemaModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Check to see if the form is valid.\n     */\n    isValid(): boolean {\n        return this.refName && true;\n    }\n\n    public getReferenceDropDownOptions(): DropDownOption[] {\n        return this.references.map(name => {\n            return new DropDownOptionValue(name, name);\n        });\n    }\n\n    getReference(): string {\n        return this.refName;\n    }\n\n    setReference(newRefName: string): void {\n        this.refName = newRefName;\n    }\n}\n","<!-- Add Schema Dialog -->\n<div bsModal #addSchemaModal=\"bs-modal\" class=\"modal fade\" id=\"addSchemaModal\" tabindex=\"-1\" role=\"dialog\" [config]=\"{ backdrop: true }\"\n     aria-labelledby=\"addSchemaModalLabel\" role=\"dialog\" aria-hidden=\"true\" (onHidden)=\"close()\" *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addSchemaModalLabel\">Add Schema</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Choose a schema to add from the dropdown below and then click Add.</p>\n                <form id=\"addSchema-form\" class=\"form-horizontal\" (submit)=\"add()\" #addSchemaForm=\"ngForm\">\n                    <div class=\"form-group\" *ngIf=\"hasReferences()\">\n                        <label class=\"col-sm-5 control-label required\" for=\"refDropDown\">Schema</label>\n                        <div class=\"col-sm-7\">\n                            <drop-down id=\"refDropDown\" [id]=\"'refDropDown'\"\n                                       [options]=\"getReferenceDropDownOptions()\"\n                                       [value]=\"getReference()\"\n                                       (onValueChange)=\"setReference($event)\"\n                                       [noSelectionLabel]=\"'Schema Reference.'\"></drop-down>\n                        </div>\n                    </div>\n\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!isValid()\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport * as YAML from 'js-yaml';\nimport {Oas30Example, Oas30Schema} from \"@apicurio/data-models\";\nimport {ModelUtils} from \"../../_util/model.util\";\nimport {ObjectUtils, StringUtils} from \"apicurio-ts-core\";\nimport {CodeEditorComponent, CodeEditorMode, CodeEditorTheme} from \"../common/code-editor.component\";\n\n\nexport interface EditExampleEvent {\n    example: Oas30Example;\n    value: any;\n}\n\n@Component({\n    selector: \"edit-example-dialog\",\n    templateUrl: \"edit-example.component.html\",\n    styleUrls: [ \"edit-example.component.css\" ]\n})\nexport class EditExampleDialogComponent {\n\n    @Input() schema: Oas30Schema;\n    @Output() onEdit: EventEmitter<EditExampleEvent> = new EventEmitter<EditExampleEvent>();\n\n    @ViewChildren(\"editExampleModal\") editExampleModal: QueryList<ModalDirective>;\n    @ViewChildren(\"codeEditor\") codeEditor: QueryList<CodeEditorComponent>;\n\n    private example: Oas30Example;\n    private _isOpen: boolean = false;\n\n    model: any = {\n        value: null,\n        format: CodeEditorMode.JSON,\n        valid: true\n    };\n\n    get value() {\n        return this.model.value;\n    }\n    set value(value: string) {\n        this.setValueFormatFromValue(value);\n        this.model.value = value;\n    }\n\n    /**\n     * Called to open the dialog.\n     * @param example\n     */\n    public open(example: Oas30Example): void {\n        this._isOpen = true;\n        this.example = example;\n        this.model = {\n            value: null,\n            format: CodeEditorMode.JSON,\n            valid: true\n        };\n\n        let val: any = example.value;\n        if (typeof val === \"object\" || Array.isArray(val)) {\n            val = JSON.stringify(val, null, 4);\n        }\n\n        this.model.value = val;\n        this.setValueFormatFromValue(val);\n\n        this.editExampleModal.changes.subscribe( () => {\n            if (this.editExampleModal.first) {\n                this.editExampleModal.first.show();\n            }\n        });\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n    }\n\n    /**\n     * Called when the user clicks \"edit\".\n     */\n    edit(): void {\n        let event: EditExampleEvent = {\n            example: this.example,\n            value: this.model.value\n        };\n\n        // Convert to jsobject if the data is JSON and is valid\n        if (this.model.valid && this.model.format === CodeEditorMode.JSON) {\n            try {\n                event.value = JSON.parse(this.model.value);\n            } catch (e) {\n                console.error(\"[EditExampleDialogComponent] Failed to parse example.\");\n            }\n        }\n        this.onEdit.emit(event);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.editExampleModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    valueEditorTheme(): CodeEditorTheme {\n        return CodeEditorTheme.Light;\n    }\n\n    valueEditorMode(): CodeEditorMode {\n        return this.model.format;\n    }\n\n    hasValue(): boolean {\n        return !ObjectUtils.isNullOrUndefined(this.model.value);\n    }\n\n    /**\n     * @param value\n     */\n    private setValueFormatFromValue(value: string): void {\n        if (StringUtils.isJSON(value)) {\n            this.model.format = CodeEditorMode.JSON;\n            try {\n                JSON.parse(value);\n                this.model.valid = true;\n            } catch (e) {}\n        } else if (StringUtils.isXml(value)) {\n            this.model.format = CodeEditorMode.XML;\n        } else {\n            this.model.format = CodeEditorMode.YAML;\n            try {\n                YAML.safeLoad(value);\n                this.model.valid = true;\n            } catch (e) {}\n        }\n    }\n\n    canGenerateExample(): boolean {\n        return this.schema !== null && this.schema !== undefined;\n    }\n\n    generate(): void {\n        let example: any = ModelUtils.generateExampleFromSchema(this.schema);\n        let exampleStr: string = JSON.stringify(example, null, 4);\n        this.codeEditor.first.setText(exampleStr);\n    }\n\n}\n","<!-- Edit Example Dialog -->\n<div>\n    <div bsModal #editExampleModal=\"bs-modal\" class=\"modal fade\" id=\"editExampleModal\" tabindex=\"-1\" role=\"dialog\" [config]=\"{ backdrop: true }\"\n         aria-labelledby=\"editExampleModalLabel\" role=\"dialog\" aria-hidden=\"true\" *ngIf=\"isOpen()\" (onHidden)=\"close()\">\n        <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n                <div class=\"modal-header\">\n                    <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                        <span class=\"pficon pficon-close\"></span>\n                    </button>\n                    <h4 class=\"modal-title\" id=\"editExampleModalLabel\">Edit Example</h4>\n                </div>\n                <div class=\"modal-body\">\n                    <p>Enter the new example value below and then click Edit.</p>\n                    <form id=\"editexample-form\" class=\"form-horizontal\" #editExampleForm=\"ngForm\" data-dismiss=\"modal\">\n                        <div class=\"example\">\n                            <code-editor [theme]=\"valueEditorTheme()\" #codeEditor\n                                         [mode]=\"valueEditorMode()\"\n                                         [debounceTime]=\"200\"\n                                         [(text)]=\"value\"\n                                         [editorStyle]=\"{ position: 'relative', height: '300px', border: '1px solid #ccc', width: '100%' }\"></code-editor>\n                            <button title=\"Generate example.\" class=\"btn btn-xs btn-default btn-generate\" (click)=\"generate()\"\n                                    *ngIf=\"canGenerateExample()\"><span class=\"fa fa-fw fa-code\"></span> Generate</button>\n                        </div>\n                    </form>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"edit()\"\n                            [disabled]=\"!editExampleForm.form.valid || !hasValue()\">Edit</button>\n                    <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\nimport {Debouncer} from \"apicurio-ts-core\";\n\n@Component({\n    selector: \"search\",\n    templateUrl: \"search.component.html\",\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent extends AbstractBaseComponent {\n\n    @Input() initialValue: string;\n    @Input() placeholder: string;\n    @Input() searchId: string;\n\n    @Output() onSearch: EventEmitter<string> = new EventEmitter<string>();\n\n    value: string;\n    valueDebouncer: Debouncer<string> = new Debouncer<string>({ period: 200 }, value => {\n        this.onSearch.emit(value);\n    });\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public changeValue(newValue: string): void {\n        this.valueDebouncer.emit(newValue);\n    }\n\n    public clear(): void {\n        this.value = null;\n        this.onSearch.emit(null);\n    }\n\n    public hasValue(): boolean {\n        return this.value && this.value.length > 0;\n    }\n}\n","<form role=\"form\" class=\"search-pf has-button\">\n    <div class=\"form-group has-clear\">\n        <div class=\"search-pf-input-group\">\n            <label for=\"{{ searchId }}\" class=\"sr-only\">Search</label>\n            <input name=\"search\" id=\"{{ searchId }}\" type=\"search\" class=\"form-control\" placeholder=\"{{ placeholder }}\"\n                   value=\"{{ initialValue }}\" [ngModel]=\"value\" (ngModelChange)=\"changeValue($event)\" autocomplete=\"off\">\n            <button *ngIf=\"hasValue()\" type=\"button\" class=\"clear\" (click)=\"clear()\"><span class=\"pficon pficon-close\"></span></button>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <button class=\"btn btn-default\" type=\"button\"><span class=\"fa fa-search\"></span></button>\n    </div>\n</form>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ElementRef, EventEmitter, Input, Output, QueryList, ViewChildren} from \"@angular/core\";\nimport {ModalDirective} from \"ngx-bootstrap/modal\";\nimport {AaiDocument} from \"@apicurio/data-models\";\n\n\n@Component({\n    selector: \"add-channel-dialog\",\n    templateUrl: \"add-channel.component.html\"\n})\nexport class AddChannelDialogComponent {\n\n    @Input() channelRegex: string = \"\";\n\n    @Output() onAdd: EventEmitter<string> = new EventEmitter<string>();\n\n    @ViewChildren(\"addChannelModal\") addChannelModal: QueryList<ModalDirective>;\n    @ViewChildren(\"addChannelInput\") addChannelInput: QueryList<ElementRef>;\n\n    private _isOpen: boolean = false;\n\n    channel: string = \"\";\n    channels: string[] = [];\n    channelExists: boolean = false;\n\n    constructor(){\n    }\n\n    /**\n     * Called to open the dialog.\n     * @param document\n     * @param channel\n     */\n    public open(document: AaiDocument, channel?: string): void {\n        this.channel = channel;\n        if (!channel) {\n            this.channel = \"\";\n        }\n        this._isOpen = true;\n        this.addChannelModal.changes.subscribe( thing => {\n            if (this.addChannelModal.first) {\n                this.addChannelModal.first.show();\n            }\n        });\n\n        this.channels = [];\n        this.channelExists = false;\n        if (document.channels) {\n            document.getChannels().forEach( channelItem => {\n                this.channels.push(channelItem.getName());\n            });\n        }\n    }\n\n    /**\n     * Called to close the dialog.\n     */\n    close(): void {\n        this._isOpen = false;\n        this.channel = \"\";\n    }\n\n    /**\n     * Called when the user clicks \"add\".\n     */\n    add(): void {\n        this.onAdd.emit(this.channel);\n        this.cancel();\n    }\n\n    /**\n     * Called when the user clicks \"cancel\".\n     */\n    cancel(): void {\n        this.addChannelModal.first.hide();\n    }\n\n    /**\n     * Returns true if the dialog is open.\n     * @return\n     */\n    isOpen(): boolean {\n        return this._isOpen;\n    }\n\n    /**\n     * Called to initialize the selection/focus to the addPathInput field.\n     */\n    doSelect(): void {\n        this.addChannelInput.first.nativeElement.focus();\n        this.addChannelInput.first.nativeElement.selectionStart = this.addChannelInput.first.nativeElement.selectionEnd = this.channel.length\n    }\n\n    /**\n     * Called whenever the user types anything in the channel field - this validates that the channel entered\n     * is OK.\n     * @param newChannel\n     */\n    validateChannel(newChannel: string) {\n        this.channelExists = this.channels.indexOf(newChannel) != -1;\n    }\n\n    channelValidation(): string{\n        return this.channelRegex;\n    }\n}\n","<!-- Add Channel Dialog -->\n<div bsModal #addChannelModal=\"bs-modal\" class=\"modal fade\" id=\"addChannelModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"addChannelModalLabel\" role=\"dialog\" aria-hidden=\"true\" (onShown)=\"doSelect()\" [config]=\"{ backdrop: true }\" (onHidden)=\"close()\"\n    *ngIf=\"isOpen()\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" aria-hidden=\"true\" (click)=\"cancel()\">\n                    <span class=\"pficon pficon-close\"></span>\n                </button>\n                <h4 class=\"modal-title\" id=\"addChannelModalLabel\">Add Channel</h4>\n            </div>\n            <div class=\"modal-body\">\n                <p>Enter a new channel below and then click Add.</p>\n                <form id=\"addchannel-form\" class=\"form-horizontal\" (submit)=\"add()\" #addChannelForm=\"ngForm\" data-dismiss=\"modal\">\n                    <div class=\"form-group\">\n                        <label class=\"col-sm-2 control-label required\" for=\"channel\">Channel</label>\n                        <div class=\"col-sm-10\">\n                            <input #addChannelInput name=\"channel\" type=\"text\" id=\"channel\" class=\"form-control\" placeholder=\"Enter a Channel\" pattern=\"{{channelValidation()}}\" required [(ngModel)]=\"channel\" (ngModelChange)=\"validateChannel($event)\" #thechannel=\"ngModel\">\n                            <div class=\"form-error-message error\" *ngIf=\"channelExists\">Channel already exists.</div>\n                            <form-error-message [inputModel]=\"thechannel\" [type]=\"'pattern'\" [alwaysOn]=\"true\">Enter a valid channel.</form-error-message>\n                            <form-error-message [inputModel]=\"thechannel\" [type]=\"'required'\">Channel is required.</form-error-message>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"notice-of-required modal-notice-of-required\">The fields marked with <span class=\"required-icon\">*</span> are required.</div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"add()\" [disabled]=\"!addChannelForm.form.valid || channelExists\">Add</button>\n                <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">Cancel</button>\n            </div>\n        </div>\n    </div>\n</div>","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {AbstractBaseComponent} from \"./base-component\";\nimport {DocumentService} from \"../../_services/document.service\";\nimport {CommandService} from \"../../_services/command.service\";\nimport {SelectionService} from \"../../_services/selection.service\";\n\n\n@Component({\n    selector: \"[path-item]\",\n    templateUrl: \"path-item.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PathItemComponent extends AbstractBaseComponent {\n\n    @Input() path: string;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public pathSegments(): string[] {\n        let segments: string[] = [];\n        this.path.split(\"{\").forEach( (segment, idx) => {\n            let endBraceIdx: number = segment.indexOf(\"}\");\n            if (idx === 0) {\n                segments.push(segment);\n            } else if (endBraceIdx === -1) {\n                segments.push(\"{\" + segment);\n            } else if (endBraceIdx === (segment.length - 1)) {\n                segments.push(\"{\" + segment);\n            } else {\n                segments.push(\"{\" + segment.substring(0, endBraceIdx + 1));\n                segments.push(segment.substring(endBraceIdx + 1));\n            }\n        });\n        return segments;\n    }\n\n}\n","<span class=\"path-segment\" *ngFor=\"let pathSegment of pathSegments()\" [class.path-param]=\"pathSegment.indexOf('{') === 0\">{{ pathSegment }}</span>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, ICommand, Oas30PathItem} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\n\n\n@Component({\n    selector: \"path-info-section\",\n    templateUrl: \"info-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PathInfoSectionComponent extends AbstractBaseComponent {\n\n    @Input() path: Oas30PathItem;\n\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public pathInfoPaths(): string[] {\n        let basePath: string = ModelUtils.nodeToPath(this.path);\n        return [\n            basePath + \"/summary\",\n            basePath + \"/description\"\n        ];\n    }\n\n    /**\n     * Called when the user changes the summary.\n     * @param newSummary\n     */\n    public changeSummary(newSummary: string): void {\n        console.info(\"[InfoSectionComponent] User changed the summary.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.path, \"summary\", newSummary);\n        this.commandService.emit(command);\n    }\n\n    /**\n     * Called when the user changes the description.\n     * @param newDescription\n     */\n    public changeDescription(newDescription: string): void {\n        console.info(\"[PathInfoSectionComponent] User changed the data type description.\");\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.path,\"description\", newDescription);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"info\" label=\"INFO\"\n         contextHelp=\"In this section you can easily edit the Summary and Description of the Path Item.\"\n         [collaborationNodePath]=\"pathInfoPaths()\"\n         [validationModels]=\"[path]\" [validationProperties]=\"['description']\" [validationShallow]=\"true\">\n    <span actions></span>\n    <div body>\n        <!-- Summary -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"path\" [shallow]=\"true\" [property]=\"'summary'\"></validation-problem>\n            <span>Summary</span>\n        </div>\n        <div class=\"section-field summary\">\n            <pf-inline-text-editor [value]=\"path.summary\" [noValueMessage]=\"'No Summary'\"\n                                   [labelClass]=\"'api-item-title'\"\n                                   [inputClass]=\"'api-item-editor api-summary-editor api-item-title'\"\n                                   [baseNode]=\"path\" nodePath=\"summary\"\n                                   (onChange)=\"changeSummary($event)\"></pf-inline-text-editor>\n        </div>\n\n        <!-- Description -->\n        <div class=\"section-field-label\">\n            <validation-problem [model]=\"path\" property=\"description\" [shallow]=\"true\"></validation-problem>\n            <span>Description</span>\n        </div>\n        <div class=\"section-field description\">\n            <inline-markdown-editor [value]=\"path.description\"\n                                    [labelClass]=\"'api-path-description api-item-description'\"\n                                    [formClass]=\"'api-path-description-editor-form'\"\n                                    [inputClass]=\"'api-item-editor api-description-editor api-path-description api-item-description'\"\n                                    [baseNode]=\"path\" nodePath=\"description\"\n                                    [noValueMessage]=\"'No description.'\" (onChange)=\"changeDescription($event)\"></inline-markdown-editor>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2017 JBoss Inc\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, EventEmitter, Input, Output, ViewChild, ViewEncapsulation} from \"@angular/core\";\nimport {AceEditorComponent} from \"./ace-editor.component\";\nimport {Debouncer} from \"apicurio-ts-core\";\n\n\nexport enum CodeEditorTheme {\n    Light, Dark\n}\n\nexport enum CodeEditorMode {\n    Text, JSON, YAML, Markdown, XML, GRAPHQL\n}\n\n@Component({\n    selector: \"code-editor\",\n    templateUrl: \"code-editor.component.html\",\n    encapsulation: ViewEncapsulation.None\n})\nexport class CodeEditorComponent {\n\n    private static DEFAULT_DEBOUNCE_TIME: number = 200;\n\n    @ViewChild(\"editor\", { static: true }) public editor: AceEditorComponent;\n\n    private _textValueDebouncer: Debouncer<string> = new Debouncer<string>({ period: 200 }, value => {\n        this.textChange.emit(value);\n    });\n\n    @Input() theme: CodeEditorTheme = CodeEditorTheme.Light;\n    @Input() mode: CodeEditorMode = CodeEditorMode.Text;\n    @Input() editorStyle: any;\n    @Input() wordWrap: boolean = false;\n\n    @Input()\n    get text() {\n        return this._textValueDebouncer.getValue();\n    }\n\n    @Output() public textChange = new EventEmitter<string>();\n    set text(value: string) {\n        this._textValueDebouncer.emit(value);\n    }\n\n    @Input()\n    get debounceTime() {\n        return this._textValueDebouncer[\"options\"].period;\n    }\n    set debounceTime(time: number) {\n        let bounce: number = time;\n        if (!bounce) {\n            bounce = CodeEditorComponent.DEFAULT_DEBOUNCE_TIME;\n        }\n        this._textValueDebouncer[\"options\"].period = bounce;\n    }\n\n    public aceMode(): string {\n        switch (this.mode) {\n            case CodeEditorMode.YAML:\n                return 'yaml';\n            case CodeEditorMode.JSON:\n                return 'json';\n            case CodeEditorMode.Text:\n                return 'text';\n            case CodeEditorMode.XML:\n                return 'xml';\n            case CodeEditorMode.Markdown:\n                return 'markdown';\n            case CodeEditorMode.GRAPHQL:\n                return 'graphqlschema';\n            default:\n                return 'text';\n        }\n    }\n\n    public aceTheme(): string {\n        if (this.theme === CodeEditorTheme.Dark) {\n            return \"twilight\";\n        } else {\n            return \"eclipse\";\n        }\n    }\n\n    public focus(): void {\n        this.editor.focus();\n    }\n\n    public setText(text: string): void {\n        this.editor.setText(text);\n    }\n}\n","<ace-editor #editor\n            [theme]=\"aceTheme()\"\n            [mode]=\"aceMode()\"\n            [(text)]=\"text\"\n            [wordWrap]=\"wordWrap\"\n            [ngStyle]=\"editorStyle\"></ace-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    EventEmitter,\n    Output,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    Oas30Document,\n    Oas30Operation,\n    Oas30PathItem,\n    Oas30Server\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {EditorsService} from \"../../../_services/editors.service\";\nimport {ServerEditorComponent, ServerEditorEvent} from \"../../editors/server-editor.component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractRowComponent} from \"../../common/item-row.abstract\";\n\n\n@Component({\n    selector: \"server-row\",\n    templateUrl: \"server-row.component.html\",\n    styleUrls: [\"server-row.component.css\"],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ServerRowComponent extends AbstractRowComponent<Oas30Server, string> {\n\n    @Output() onEdit: EventEmitter<ServerEditorEvent> = new EventEmitter<ServerEditorEvent>();\n    @Output() onDelete: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, private editorsService: EditorsService,\n                selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    protected updateModel(): void {\n        // Nothing to do for this row impl\n    }\n\n    public hasUrl(): boolean {\n        return this.item.url ? true : false;\n    }\n\n    public description(): string {\n        return this.item.description\n    }\n\n    public hasDescription(): boolean {\n        return this.item.description ? true : false;\n    }\n\n    public toggle(): void {\n        this.toggleTab(\"server\");\n    }\n\n    public edit(): void {\n        let serverEditor: ServerEditorComponent = this.editorsService.getServerEditor();\n        let parent: Oas30Document | Oas30PathItem | Oas30Operation = this.item.parent() as any;\n        serverEditor.open({\n            onSave: (data) => this.onEdit.emit(data),\n            onCancel: () => {}\n        }, parent, this.item);\n    }\n\n    public delete(): void {\n        this.onDelete.emit(true);\n    }\n\n    public setDescription(description: string): void {\n        // TODO create a new ChangeServerDescription command as it's a special case when used in a multi-user editing environment (why?)\n        let command: ICommand = CommandFactory.createChangePropertyCommand<string>(this.item, \"description\", description);\n        this.commandService.emit(command);\n    }\n\n}\n","<div class=\"server\" [class.expanded]=\"isEditing()\">\n    <div class=\"header\">\n        <div class=\"expand\" (click)=\"toggle()\">\n            <span class=\"fa fa-angle-right\" [class.fa-angle-down]=\"isEditing()\"></span>\n        </div>\n        <div class=\"url\" (click)=\"toggle()\" [class.empty]=\"!hasUrl()\">\n            <validation-problem [model]=\"item\"></validation-problem>\n            <span class=\"pficon pficon-server entity-icon\"></span>\n            <span server-url [url]=\"item.url\"></span>\n        </div>\n        <div class=\"description\" (click)=\"toggle()\">\n            <markdown-summary [data]=\"description()\" emptyText=\"No description.\"></markdown-summary>\n        </div>\n        <div class=\"actions\">\n            <div class=\"dropdown dropdown-kebab-pf\">\n                <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                    <span class=\"fa fa-ellipsis-v\"></span>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\">\n                    <li><a (click)=\"edit()\"><span class=\"fa fa-fw fa-pencil-square-o\"></span><span>Edit</span></a></li>\n                    <li role=\"separator\" class=\"divider\"></li>\n                    <li><a (click)=\"delete()\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete</span></a></li>\n                </ul>\n            </div>\n        </div>\n    </div>\n    <div class=\"body\" *ngIf=\"isEditing()\">\n        <div class=\"content container-fluid\">\n            <form  class=\"form-horizontal\">\n                <div class=\"col-md-11\">\n                    <div class=\"server-description\">\n                        <div class=\"form-label\">Description</div>\n                        <inline-markdown-editor [value]=\"item.description\" [noValueMessage]=\"'Enter description here.'\"\n                                                [baseNode]=\"item\" nodePath=\"description\"\n                                                (onChange)=\"setDescription($event)\"></inline-markdown-editor>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, ViewEncapsulation} from \"@angular/core\";\nimport {CommandFactory, ICommand, Oas20SchemaDefinition, Oas30SchemaDefinition} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {StringUtils} from \"apicurio-ts-core\";\n\n\n@Component({\n    selector: \"definition-example-section\",\n    templateUrl: \"example-section.component.html\",\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DefinitionExampleSectionComponent extends AbstractBaseComponent {\n\n    @Input() definition: Oas20SchemaDefinition | Oas30SchemaDefinition;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(private changeDetectorRef: ChangeDetectorRef, private documentService: DocumentService,\n                private commandService: CommandService, private selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    /**\n     * Returns the example.  Converts to a string if the example is an object.\n     */\n    public example(): string {\n        let value: string = this.definition.example;\n        if (value !== null && (typeof value === \"object\" || Array.isArray(value))) {\n            value = JSON.stringify(value, null,  4);\n        }\n        return value;\n    }\n\n    /**\n     * Called when the user changes the example.\n     * @param newExample\n     */\n    public onExampleChange(newExample: string): void {\n        console.info(\"[DefinitionExampleSectionComponent] User changed the data type example.\");\n        let newValue: any = newExample;\n        if (StringUtils.isJSON(newValue)) {\n            try {\n                newValue = JSON.parse(newValue);\n            } catch (e) {\n                console.info(\"[DefinitionExampleSectionComponent] Failed to parse example: \", e);\n            }\n        }\n        let command: ICommand = CommandFactory.createChangePropertyCommand(this.definition,\"example\", newValue);\n        this.commandService.emit(command);\n    }\n\n    public exampleNodePath(): string {\n        return ModelUtils.nodeToPath(this.definition) + \"/example\";\n    }\n\n}\n","<section type=\"example\" label=\"EXAMPLE\"\n         contextHelp=\"This section allows you to modify the Data Type's Example.\"\n         [collaborationNodePath]=\"exampleNodePath()\"\n         [validationModels]=\"[definition]\" [validationProperties]=\"['example']\" [validationShallow]=\"true\">\n    <span actions></span>\n    <div body>\n        <div class=\"section-field example\">\n            <inline-example-editor [value]=\"example()\"\n                                   [schema]=\"definition\"\n                                   [labelClass]=\"'api-definition-example api-item-example'\"\n                                   [formClass]=\"'api-definition-example-editor-form'\"\n                                   [inputClass]=\"'api-item-editor api-example-editor api-definition-example api-item-example'\"\n                                   [baseNode]=\"definition\" nodePath=\"example\"\n                                   [noValueMessage]=\"'No example.'\" (onChange)=\"onExampleChange($event)\"></inline-example-editor>\n        </div>\n    </div>\n</section>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport {Injectable} from \"@angular/core\";\nimport {ValidationProblem} from \"@apicurio/data-models\";\n\nvar PROBLEM_SUMMARIES = {\n    // OpenAPI 2.0 Problems\n    \"CTC-001\"  : ``,\n    \"CTC-002\"  : ``,\n    \"ED-002\"   : ``,\n    \"ED-003\"   : ``,\n    \"HEAD-005\" : ``,\n    \"INF-003\"  : ``,\n    \"IT-007\"   : ``,\n    \"LIC-002\"  : ``,\n    \"OP-002\"   : ``,\n    \"OP-005\"   : ``,\n    \"OP-006\"   : ``,\n    \"PAR-010\"  : ``,\n    \"R-004\"    : ``,\n    \"R-005\"    : ``,\n    \"SS-011\"   : ``,\n    \"SS-012\"   : ``,\n    \"TAG-002\"  : ``,\n    \"XML-001\"  : ``,\n    \"EX-001\"   : ``,\n    \"PATH-005\" : ``,\n    \"PDEF-001\" : ``,\n    \"RDEF-001\" : ``,\n    \"RES-003\"  : ``,\n    \"SCPS-001\" : ``,\n    \"SDEF-001\" : ``,\n    \"SS-013\"   : ``,\n    \"HEAD-003\" : ``,\n    \"HEAD-004\" : ``,\n    \"HEAD-006\" : ``,\n    \"HEAD-007\" : ``,\n    \"IT-003\"   : ``,\n    \"IT-004\"   : ``,\n    \"IT-005\"   : ``,\n    \"IT-006\"   : ``,\n    \"OP-001\"   : ``,\n    \"OP-004\"   : ``,\n    \"OP-010\"   : ``,\n    \"PAR-007\"  : ``,\n    \"PAR-008\"  : ``,\n    \"PAR-009\"  : ``,\n    \"PAR-011\"  : ``,\n    \"PAR-012\"  : ``,\n    \"PAR-013\"  : ``,\n    \"PAR-014\"  : ``,\n    \"PAR-015\"  : ``,\n    \"PAR-016\"  : ``,\n    \"PAR-017\"  : ``,\n    \"R-006\"    : ``,\n    \"R-007\"    : ``,\n    \"R-008\"    : ``,\n    \"SREQ-002\" : ``,\n    \"SREQ-003\" : ``,\n    \"SS-008\"   : ``,\n    \"SS-009\"   : ``,\n    \"SS-010\"   : ``,\n    \"XML-002\"  : ``,\n    \"PAR-018\"  : ``,\n    \"PATH-001\" : ``,\n    \"RES-002\"  : ``,\n    \"SCH-001\"  : ``,\n    \"SREQ-001\" : ``,\n    \"OP-009\"   : ``,\n    \"PATH-004\" : ``,\n    \"ED-001\"   : ``,\n    \"HEAD-001\" : ``,\n    \"INF-001\"  : ``,\n    \"INF-002\"  : ``,\n    \"IT-001\"   : ``,\n    \"LIC-001\"  : ``,\n    \"OP-007\"   : ``,\n    \"PAR-001\"  : ``,\n    \"PAR-002\"  : ``,\n    \"R-001\"    : ``,\n    \"R-002\"    : ``,\n    \"R-003\"    : ``,\n    \"RES-001\"  : ``,\n    \"SS-001\"   : ``,\n    \"TAG-001\"  : ``,\n    \"HEAD-002\" : ``,\n    \"IT-002\"   : ``,\n    \"PAR-003\"  : ``,\n    \"PAR-004\"  : ``,\n    \"PAR-005\"  : ``,\n    \"PAR-006\"  : ``,\n    \"SS-002\"   : ``,\n    \"SS-003\"   : ``,\n    \"SS-004\"   : ``,\n    \"SS-005\"   : ``,\n    \"SS-006\"   : ``,\n    \"SS-007\"   : ``,\n    \"OP-003\"   : ``,\n    \"PAR-019\"  : ``,\n    \"PAR-020\"  : ``,\n    \"TAG-003\"  : ``,\n\n    // OpenAPI 3.0.x Problems\n    \"HEAD-3-001\" : ``,\n    \"CTC-3-001\"  : ``,\n    \"CTC-3-002\"  : ``,\n    \"ED-3-001\"   : ``,\n    \"ED-3-003\"   : ``,\n    \"EX-3-001\"   : ``,\n    \"FLOW-3-003\" : ``,\n    \"FLOW-3-004\" : ``,\n    \"FLOW-3-005\" : ``,\n    \"HEAD-3-002\" : ``,\n    \"INF-3-003\"  : ``,\n    \"INF-3-004\"  : ``,\n    \"LIC-3-002\"  : ``,\n    \"LINK-3-004\" : ``,\n    \"OP-3-001\"   : ``,\n    \"PAR-3-005\"  : ``,\n    \"PATH-3-003\" : ``,\n    \"RB-3-001\"   : ``,\n    \"RES-3-002\"  : ``,\n    \"SRV-3-002\"  : ``,\n    \"SRV-3-003\"  : ``,\n    \"SS-3-007\"   : ``,\n    \"SS-3-009\"   : ``,\n    \"SVAR-3-002\" : ``,\n    \"TAG-3-002\"  : ``,\n    \"XML-3-001\"  : ``,\n    \"COMP-3-001\" : ``,\n    \"COMP-3-002\" : ``,\n    \"COMP-3-003\" : ``,\n    \"COMP-3-004\" : ``,\n    \"COMP-3-005\" : ``,\n    \"COMP-3-006\" : ``,\n    \"COMP-3-007\" : ``,\n    \"COMP-3-008\" : ``,\n    \"COMP-3-009\" : ``,\n    \"ENC-3-006\"  : ``,\n    \"PATH-3-004\" : ``,\n    \"RES-3-001\"  : ``,\n    \"SREQ-3-001\" : ``,\n    \"ENC-3-001\"  : ``,\n    \"ENC-3-002\"  : ``,\n    \"ENC-3-003\"  : ``,\n    \"ENC-3-004\"  : ``,\n    \"ENC-3-005\"  : ``,\n    \"HEAD-3-003\" : ``,\n    \"HEAD-3-004\" : ``,\n    \"LINK-3-002\" : ``,\n    \"MT-3-003\"   : ``,\n    \"OP-3-003\"   : ``,\n    \"OP-3-005\"   : ``,\n    \"PAR-3-002\"  : ``,\n    \"PAR-3-006\"  : ``,\n    \"PAR-3-007\"  : ``,\n    \"PAR-3-009\"  : ``,\n    \"PAR-3-010\"  : ``,\n    \"PAR-3-011\"  : ``,\n    \"PAR-3-012\"  : ``,\n    \"PAR-3-013\"  : ``,\n    \"PAR-3-014\"  : ``,\n    \"PAR-3-016\"  : ``,\n    \"PAR-3-018\"  : ``,\n    \"PAR-3-019\"  : ``,\n    \"PATH-3-002\" : ``,\n    \"SCH-3-001\"  : ``,\n    \"SREQ-3-002\" : ``,\n    \"SREQ-3-003\" : ``,\n    \"SS-3-008\"   : ``,\n    \"SS-3-010\"   : ``,\n    \"SS-3-011\"   : ``,\n    \"SS-3-013\"   : ``,\n    \"SVAR-3-003\" : ``,\n    \"XML-3-002\"  : ``,\n    \"CALL-3-001\" : ``,\n    \"EX-3-003\"   : ``,\n    \"HEAD-3-005\" : ``,\n    \"LINK-3-003\" : ``,\n    \"LINK-3-005\" : ``,\n    \"PAR-3-017\"  : ``,\n    \"RB-3-003\"   : ``,\n    \"RES-3-004\"  : ``,\n    \"SCH-3-002\"  : ``,\n    \"SS-3-012\"   : ``,\n    \"EX-3-002\"   : ``,\n    \"HEAD-3-006\" : ``,\n    \"HEAD-3-007\" : ``,\n    \"LINK-3-001\" : ``,\n    \"MT-3-001\"   : ``,\n    \"PAR-3-008\"  : ``,\n    \"PAR-3-015\"  : ``,\n    \"DISC-3-001\" : ``,\n    \"ED-3-002\"   : ``,\n    \"FLOW-3-001\" : ``,\n    \"FLOW-3-002\" : ``,\n    \"FLOW-3-006\" : ``,\n    \"INF-3-001\"  : ``,\n    \"INF-3-002\"  : ``,\n    \"LIC-3-001\"  : ``,\n    \"OP-3-004\"   : ``,\n    \"PAR-3-003\"  : ``,\n    \"PAR-3-004\"  : ``,\n    \"R-3-001\"    : ``,\n    \"R-3-002\"    : ``,\n    \"R-3-003\"    : ``,\n    \"RB-3-002\"   : ``,\n    \"SRV-3-001\"  : ``,\n    \"SS-3-001\"   : ``,\n    \"SS-3-002\"   : ``,\n    \"SS-3-003\"   : ``,\n    \"SS-3-004\"   : ``,\n    \"SS-3-005\"   : ``,\n    \"SS-3-006\"   : ``,\n    \"SVAR-3-001\" : ``,\n    \"TAG-3-001\"  : ``,\n    \"OP-3-002\"   : ``,\n    \"PAR-3-001\"  : ``,\n    \"TAG-3-003\"  : ``\n};\n\n\nvar PROBLEM_EXPLANATIONS = {\n    // OpenAPI 2.0 Problems\n    \"CTC-001\"  : `If a URL is specified for the Contact information, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"CTC-002\"  : `If an email address is specified for the Contact, it must be a valid email format.  Make sure the value supplied is formatted properly.`,\n    \"ED-002\"   : `The description of the External Documentation must be in either plain text or Github-Flavored Markdown format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"ED-003\"   : `If a URL is specified for the External Documentation, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"HEAD-005\" : `The default value provided for the Header does not match its type.  For example, if the type of the Header is \"integer\", any default value must actually be a valid integer.`,\n    \"INF-003\"  : `The description of the API must be in either plain text or Github-Flavored Markdown format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"IT-007\"   : `The default value provided for the parameter's items does not match its type.  For example, if the type of the type is \"integer\", any default value must actually be a valid integer.`,\n    \"LIC-002\"  : `If a URL is specified for the License, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"OP-002\"   : `The description of the Operation must be in either plain text or Github-Flavored Markdown format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"OP-005\"   : `When you indicate that an Operation consumes a particular type of data, you must provide a valid mime-type.  Examples of valid mime types include:  text/plain, application/json, application/x-www-form-urlencoded.`,\n    \"OP-006\"   : `When you indicate that an Operation produces a particular type of data, you must provide a valid mime-type.  Examples of valid mime types include:  text/plain, application/json, application/pdf.`,\n    \"PAR-010\"  : `The description of the Parameter must be in either plain text or Github-Flavored Markdown format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"R-004\"    : `The provided Host information was invalid.  Only the host name (and optionally port) should be included.  An IP address is not allowed, nor is a URL.  Examples of a valid host include \"localhost\", \"api.example.org\", and \"api.example.org:8080\".`,\n    \"R-005\"    : `When providing a Base Path for the API, it must start with a '/' character.  The Base Path is appended to the Scheme and Host information to form a full URL to the API.`,\n    \"SS-011\"   : `An OAuth Security Scheme defintion may include an \"Authorization URL\".  When included, it must be a valid URL format (including scheme, host, port, and path).`,\n    \"SS-012\"   : `An OAuth Security Scheme defintion may include a \"Token URL\".  When included, it must be a valid URL format (including scheme, host, port, and path).`,\n    \"TAG-002\"  : `The description of the Tag must be in either plain text or Github-Flavored Markdown format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"XML-001\"  : `When defining the XML format of a definition, the Namespace must be a valid XML URI/URL.  Check the value and make sure it's a valid XML Namespace URL format.`,\n    \"EX-001\"   : `When defining examples for an Operation Response, each example must correspond to one of the mime-types defined by the Operation.  Note that the Operation can declare its own mime-types (via the \"produces\" property of the Operation) OR it can inherit the mime-types from the API's global \"produces\" property.`,\n    \"PATH-005\" : `The path template is not valid.  All paths must begin with a / and be made up of a sequence of valid path segments and variables.  For example:  '/abc', '/{def}/', '/abc/g{def}'`,\n    \"PATH-006\" : `Path templates must not contain any empty path segments (empty content between two forward slashes).`,\n    \"PATH-007\" : `Path templates must not contain two path variables with the same name.  Path variable names are found in curly braces in the path template.`,\n    \"PDEF-001\" : ``,\n    \"RDEF-001\" : ``,\n    \"RES-003\"  : `All Responses declared for an Operation must correspond to a valid HTTP response status code.  Valid status codes are things like 200, 404, 500.  A full list of status codes can be found here:  https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml`,\n    \"SCPS-001\" : ``,\n    \"SDEF-001\" : ``,\n    \"SS-013\"   : ``,\n    \"HEAD-003\" : `When declaring a Header you must identify the Header's type.  Valid types for Headers include: string, number, integer, boolean, array.  Any other value (or no value at all) is not allowed.`,\n    \"HEAD-004\" : `When declaring a Header, the Header type can be further refined by indicating a \"format\".  Valid formats for Headers include: int32, int64, float, double, byte, binary, date, date-time, passworld.  Not all formats are valid for all types.  For more detailed information go here:  https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat`,\n    \"HEAD-006\" : `Only Headers that are defined as Array type can specify a Collection Format.  For other types (such as string or number) the collection format does not make sense (as these types are not collections).`,\n    \"HEAD-007\" : `When indicating a Collection Format for a Header, the only valid values are: csv, ssv, tsv, pipes`,\n    \"IT-003\"   : `For Parameters that are of type \"array\", the declarating of the Parameter's Items must indicate a type.  This is required so that consumers know what type of data each item of the array must be.  Valid values are: string, number, integer, boolean, array`,\n    \"IT-004\"   : `When defining the type of an array-type parameter's items, the type can be further refined by indicating a \"format\".  Valid formats for parameter Items include: int32, int64, float, double, byte, binary, date, date-time, passworld.  Not all formats are valid for all types.  For more detailed information go here:  https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat`,\n    \"IT-005\"   : `When indicating a Collection Format for an array-style Parameter, the only valid values are: csv, ssv, tsv, pipes`,\n    \"IT-006\"   : `Only Parameters that are defined as Array type can specify a Collection Format.  For other types (such as string or number) the collection format does not make sense (as these types are not collections).`,\n    \"OP-001\"   : `When defining a summary for an Operation, it should be short and descriptive, limited to 120 characters.`,\n    \"OP-004\"   : `Every operation may optionally have an operationId property.  If declared, it should follow standard software programming style (e.g. camelCase).  It must also be unique over all Operations in the API.`,\n    \"OP-010\"   : `When declaring the valid schemes for an Operation, the only valid options are:  http, https, ws, wss`,\n    \"PAR-007\"  : `All Path Parameters must have a name that maps to one of the dynamic elements of the path's template.  For example, if the path template is \"/items/{itemId}/widgets/{widgetId}\" then the only valid values for Path Paramter names are \"itemId\" and \"widgetId\".`,\n    \"PAR-008\"  : `When using Form Data as the input to an Operation, the Operation must indicate that it can consume form data by listing either \"application/x-www-form-urlencoded\" or \"multipart/form-data\" in its list of Consumes mime-types.`,\n    \"PAR-009\"  : `Every parameter must be located in one of the following locations:  URL Query Params, HTTP Headers, the Path Template, Form Data, or the HTTP Request Body.  Therefore, the \"in\" property for any Parameter must be one of:  query, header, path, formData, body.  Make sure your parameter doesn't mistakenly indicate some other value.`,\n    \"PAR-011\"  : `When declaring a Parameter you must identify its type.  Valid types for Parameters include: string, number, integer, boolean, array, file.  Any other value (or no value at all) is not allowed.`,\n    \"PAR-012\"  : `When defining a Parameter's type, it can be further refined by indicating a \"format\".  Valid formats for parameters include: int32, int64, float, double, byte, binary, date, date-time, passworld.  Not all formats are valid for all types.  For more detailed information go here:  https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat`,\n    \"PAR-013\"  : `You can only indicate that empty values are allowed for Parameters that are in the query or in form data.  Other parameters (such as in headers or in the path) cannot be empty.`,\n    \"PAR-014\"  : `Only Parameters that are defined as Array type can specify a Collection Format.  For other types (such as string or number) the collection format does not make sense (as these types are not collections).`,\n    \"PAR-015\"  : `When indicating a Collection Format for an array-style Parameter, the only valid values are: csv, ssv, tsv, pipes, multi`,\n    \"PAR-016\"  : `When specifying \"multi\" as the collection format for a Parameter, the Parameter must be either a Query Param or a Parameter in the Form Data.  This is because only those types of parameters support passing multiple values for a single name.`,\n    \"PAR-017\"  : `If a Parameter is marked as \"required\", then no default value is allowed.  Because a default value is only used when the API consumer invokes the Operation without the Parameter, default values don't make sense for required Parameters.`,\n    \"R-006\"    : `When indicating the default schemes supported by the API, only the following are valid choices: http, https, ws, wss`,\n    \"R-007\"    : `When indicating the default data formats that the API consumes, the values must be valid mime-types.  Examples of valid mime types include:  text/plain, application/json, application/x-www-form-urlencoded.`,\n    \"R-008\"    : `When indicating the default data formats that the API produces, the values must be valid mime-types.  Examples of valid mime types include:  text/plain, application/json, application/pdf.`,\n    \"SREQ-002\" : `Security Requirements can be specified for basic, apiKey, or oauth.  When using basic or apiKey authentication, the security requirement must NOT provide a list of scopes (the list of scopes must be empty).  In other words, scopes are only valid when using OAuth 2 authentication.`,\n    \"SREQ-003\" : `Security Requirements can be specified for basic, apiKey, or oauth.  When using OAuth 2 authentication, the security requirement MUST provide the list of scopes required for the caller to successfully access the API.`,\n    \"SS-008\"   : `The OpenAPI specification only supports the following authentication types:  Basic, API Key, and OAuth 2.  Any other authentication types are not valid.  As a result, the value of \"in\" for a Security Scheme must be one of: basic, apiKey, oauth2`,\n    \"SS-009\"   : `The only valid values for the \"in\" property of a Security Schema are: query, header.  This property indicates where in the Request the security token can be found (either in HTTP Request Headers or in the URL Query Parameters).`,\n    \"SS-010\"   : `When using OAuth 2 authentication, the OAuth flow must be defined and it must be one of the possible supported OAuth flows.  The supported flows are:  implicit, password, application, and accessCode`,\n    \"XML-002\"  : `When defining the XML representation of a definition, one of the options is to declare an element must be wrapped (by another XML element).  However, this is only relevant for \"array\" type properties, since array properties may have multiple values that should be contained within a parent (wrapper) XML element.`,\n    \"PAR-018\"  : `The definition of the Parameter attempts to reference a Parameter found elsewhere (typically globally declared in the same API document) but the reference could not be resolved.  Perhaps the global Parameter was deleted, or there is a typo in the reference.`,\n    \"PATH-001\" : `A Path Item was defined as a reference to an external document, but that document could not be found  (or the referenced Path Item within it could not be found).`,\n    \"RES-002\"  : `The definition of the Response attempts to reference a Response found elsewhere (typically globally declared in the same API document) but the reference could not be resolved.  Perhaps the global Response was deleted, or there is a typo in the reference.`,\n    \"SCH-001\"  : `The definition of the Schema attempts to reference a type Definition found elsewhere (typically globally declared in the same API document) but the reference could not be resolved.  Perhaps the global Definition was deleted, or there is a typo in the reference.`,\n    \"SREQ-001\" : `The names of each security requirement declared for an Operation (or declared globally) must match the name of a globally defined Security Scheme.  Check to make sure that the names of the requirement match up with security schemes previously defined.`,\n    \"OP-009\"   : `It is not possible to use Body and Form Data parameters in the same Operation.  These input types are mutually exclusive, since both are sent via the HTTP Request's body.`,\n    \"PATH-004\" : `It is not possible to use Body and Form Data parameters in the same Operation.  These input types are mutually exclusive, since both are sent via the HTTP Request's body.`,\n    \"ED-001\"   : `When defining your External Documentation, you must provide a URL!`,\n    \"HEAD-001\" : `You need to specify a type when defining a Header.  Valid Header types include: string, number, integer, boolean, array.`,\n    \"INF-001\"  : `The API must have a title provided.`,\n    \"INF-002\"  : `The API must have a version provided.`,\n    \"IT-001\"   : `When defining the items of an array-type Parameter, the type of the items MUST be indicated.  Please make sure you define the type of items for your array-type Parameter.`,\n    \"LIC-001\"  : `When including License information for the API, a Name of the License is required (cannot be blank).`,\n    \"OP-007\"   : `When declaring an Operation (e.g. GET, PUT, POST, etc...) at least one Response MUST be included.  Typically at least a 20x (success) response should be defined.`,\n    \"PAR-001\"  : `All Parameters, regardless of location (query, path, form data) MUST include a name.  Parameters are uniquely identified by the combination of \"in\" (what kind of parameter it is such as query or path) and \"name\".`,\n    \"PAR-002\"  : `Every Parameter must indicate what kind it is, by providing a value for the \"in\" property.  Value values include: query, formData, path, body.`,\n    \"R-001\"    : `Every OpenAPI (version 2.0) document MUST include the root \"swagger\" property, and its value MUST be \"2.0\".`,\n    \"R-002\"    : `Every OpenAPI document MUST include some basic information such as Name and Version.  This meta-data is contained in an \"info\" root property.  Please make sure to add this information to the API.`,\n    \"R-003\"    : `The OpenAPI document must have at least one path defined.  Without any paths, consumers have no endpoints/operations to invoke.  Make sure to add at least one Path.  For example:  \"/items/{itemId}\"`,\n    \"RES-001\"  : `Every Response (in each Operation) must have a description.  Please make sure to add a helpful description to your Responses.`,\n    \"SS-001\"   : `When defining a Security Scheme, a type must be provided.  Possible security scheme types include: basic, apiKey, oauth2`,\n    \"TAG-001\"  : `Tags defined in the OpenAPI document must each have a name (and the name must be unique).  Please make sure each tag defined has a name.`,\n    \"HEAD-002\" : `Whenever a Header is declared to be of type \"array\", the array's items must also be identified.  This manifests as a \"items\" property in the specification.  Please make sure to indicate what type the Header's array items must be.`,\n    \"IT-002\"   : `Whenever a Parameter is declared to be of type \"array\", the array's items must also be identified.  This manifests as a \"items\" property in the specification.  Please make sure to indicate what type the Parameter's array items must be.`,\n    \"PAR-003\"  : `Path style Parameters (dynamic parameters found in the path template of an endpoint) are always required.  Therefore the \"required\" property must be included for all Path Parameters, and its value must be true.`,\n    \"PAR-004\"  : `When declaring a request body style Parameter, a schema must be provided in order to declare the type of data expected in the body.`,\n    \"PAR-005\"  : `You must define the type of the parameter!  Possible parameter types include string, number, integer, boolean, array.`,\n    \"PAR-006\"  : `Whenever a Parameter is declared to be of type \"array\", the array's items must also be identified.  This manifests as a \"items\" property in the specification.  Please make sure to indicate what type the Parameter's array items must be.`,\n    \"SS-002\"   : `When using API Key style authentication, the \"name\" property must be declared to indicate where to find the key information.  The API Key must be passed in the request, either in an HTTP Header or as a Query Parameter.  In both cases, the name of the Header or Parameter must be declared.`,\n    \"SS-003\"   : `When using API Key style authentication, the \"name\" property must be declared to indicate where to find the key information.  The API Key must be passed in the request, either in an HTTP Header or as a Query Parameter.  Therefore, possible values are: query, header`,\n    \"SS-004\"   : `When using OAuth 2 as the authentication style, the \"flow\" property must be defined.  This property is used to indicate the precise OAuth 2 flow supported by the API.  Valid values for this property are: implicit, password, application, accessCode`,\n    \"SS-005\"   : `When using OAuth 2 authentication's Implicit or Access Code flows, you must provide a valid Authorization URL.  The Authorization URL is required in order to properly implement the Implicit or Access Code OAuth 2 flows.`,\n    \"SS-006\"   : `When using OAuth 2 authentication's Password, Application, or Access Code flows, you must provide a valid Token URL.  The Token URL is required in order to properly implement any of these flows.`,\n    \"SS-007\"   : `Whenever OAuth 2 is used as the authentication method, a set of scopes must be defined.  Make sure you have a list of scopes configured for all OAuth 2 security schemes.`,\n    \"OP-003\"   : `Each operation may have an optional \"operationId\" defined for it.  This ID must be unique across all operations in the API.`,\n    \"PAR-019\"  : `Parameters are uniquely defined by their \"name\" and their \"location\" (path, query, formData, etc).  You cannot have two Parameters with the same combination of name and location.  Please make sure that all of your parameters are appropriately unique based on these two criteria.`,\n    \"PAR-020\"  : `Only a single \"body\" parameter may be defined for an Operation.  A body parameter indicates that the operation expects to receive input (typically some JSON data) in the body of the HTTP request.  Since there is only one request body, only one paramet of this type can be specified.`,\n    \"TAG-003\"  : `It was found that two (or more) tags have the same name.  Every tag in the document must have a unique name (different from all other tag names).`,\n    \"UNKNOWN-001\" : `When reading the OpenAPI definition, a property was discovered that is not a part of the specification (and is not an extension property).  The property and its value will be preserved, but is most likely a mistake and should be removed.`,\n\n    // OpenAPI 3.0.x Problems\n    \"HEAD-3-001\" : `When defining headers, most header names except for \"Content-Type\" are allowed.  However, \"Content-Type\" will be ignored because it is already specified in the definition of the Response's Content.`,\n    \"CTC-3-001\"  : `If a URL is specified for the Contact information, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"CTC-3-002\"  : `If an email address is specified for the Contact, it must be a valid email format.  Make sure the value supplied is formatted properly.`,\n    \"ED-3-001\"   : `The description of the External Documentation must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"ED-3-003\"   : `If a URL is specified for the External Documentation, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"EX-3-001\"   : `The description of the Example must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"FLOW-3-003\" : `If an Authorization URL is specified for an OAuth Flow, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"FLOW-3-004\" : `If a Token URL is specified for an OAuth Flow, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"FLOW-3-005\" : `If a Refresh URL is specified for an OAuth Flow, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"HEAD-3-002\" : `The description of the Header must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"INF-3-003\"  : `The description of the API must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"INF-3-004\"  : `If a URL for the API's \"Terms & Services\" is specified, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"LIC-3-002\"  : `If a License URL is specified, it must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"LINK-3-004\" : `The description of the Link must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"OP-3-001\"   : `The description of the Operation must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"PAR-3-005\"  : `The description of the Parameter must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"PATH-3-003\" : `The description of the Path Item must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"RB-3-001\"   : `The description of the Request Body must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"RES-3-002\"  : `The description of the Response must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"SRV-3-002\"  : `The Server URL must be a valid URL template.  A URL template is composed of regular text plus any number of Server Variable replacements.  When evaluated, the result must be a valid URL.`,\n    \"SRV-3-003\"  : `The description of the Server Variable must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"SS-3-007\"   : `When using an OpenId Connect Security Scheme, the \"Open ID Connect URL\" must be a valid URL format.  Double check the value of the URL and make sure there isn't a typo!`,\n    \"SS-3-009\"   : `The description of the Security Scheme must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"SVAR-3-002\" : `The description of the Server Variable must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"TAG-3-002\"  : `The description of the Tag must be in either plain text or CommonMark (http://commonmark.org/) format.  Have a look at the value to make sure it's not something else (asciidoc, html, etc...).`,\n    \"XML-3-001\"  : `When defining the XML format of a definition, the Namespace must be a valid XML URI/URL.  Check the value and make sure it's a valid XML Namespace URL format.`,\n    \"COMP-3-001\" : `When creating re-usable Schema Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-002\" : `When creating re-usable Parameter Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-003\" : `When creating re-usable Response Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-004\" : `When creating re-usable Security Schemes, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-005\" : `When creating re-usable Example Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-006\" : `When creating re-usable Request Body Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-007\" : `When creating re-usable Header Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-008\" : `When creating re-usable Link Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"COMP-3-009\" : `When creating re-usable Callback Definitions, the names you give them must conform to a simple pattern.  Only letters, numbers, and the . (period), - (dash), and _ (underscore) characters are allowed.`,\n    \"ENC-3-006\"  : `The defined encoding property is used to further describe how to encode one of the properties of a schema (when sending data to an Operation within a Request Body).  Therefore the encoding property must match one of the properties specified in the schema.`,\n    \"PATH-3-004\" : `The path template is not valid.  All paths must begin with a / and be made up of a sequence of valid path segments and variables.  For example:  '/abc', '/{def}/', '/abc/g{def}'`,\n    \"PATH-3-005\" : `Path templates must not contain any empty path segments (empty content between two forward slashes).`,\n    \"PATH-3-006\" : `Path templates must not contain two path variables with the same name.  Path variable names are found in curly braces in the path template.`,\n    \"PATH-3-007\" : `Path templates must be semantically unique - which means you cannot have a path /widgets/{widgetId} and also a path /widgets/{id}.`,\n    \"RES-3-001\"  : `All responses must be mapped to valid HTTP response codes.  Note that response code patterns are valid (such as 4XX to indicate all response codes in the 400 range).  You can also use the special response code keyword \"default\" to match all response codes.  You can find the list of valid response codes here:  https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml`,\n    \"SREQ-3-001\" : `When specifying security requirements for e.g. operations, each security requirement must correspond to one of the defined Security Schemes.  Check the list of Security Schemes to see if there is one that matches the name of the Security Requirement.`,\n    \"ENC-3-001\"  : `You can only specify headers in your Encodings for \"multipart\" Media Types.  This is the only scenario where HTTP headers make sense for a specific property and its encoding.`,\n    \"ENC-3-002\"  : `The Encoding style is only relevant for \"application/x-www-form-urlencoded\" Media Types.  The style is needed to determine just how the encoding property is expected to be formatted within the HTTP request's form content.`,\n    \"ENC-3-003\"  : `The \"explode\" option for an Encoding is only relevant for \"application/x-www-form-urlencoded\" Media Types.  This option is needed to determine just how the encoding property is expected to be formatted within the HTTP request's form content.  When this is true, property values of type \"array\" or \"object\" generate separate parameters for each value of the array, or key-value-pair of the map.`,\n    \"ENC-3-004\"  : `The \"allowReserved\" option for an Encoding is only relevant for \"application/x-www-form-urlencoded\" Media Types.  This option is needed to determine just how the encoding property is expected to be formatted within the HTTP request's form content.  Setting the \"explode\" option determines whether the parameter value SHOULD allow reserved characters (as defined by RFC3986) to be included without percent-encoding.`,\n    \"ENC-3-005\"  : `The only valid options for the Encoding Style are \"form\", \"spaceDelimited\", \"pipeDelimited\", and \"deepObject\".  For explanations of each option, go here: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#style-values`,\n    \"HEAD-3-003\" : `When defining a Header, the \"style\" property MUST have a value of \"simple\".  This is currently the only supported style option for Header style parameters.`,\n    \"HEAD-3-004\" : `When specifying the Content of a Header, only one Media Type can be defined.  Unlike Request Body content and Response content, a Header can only support a single content media type.`,\n    \"LINK-3-002\" : `A Link can refer to an Operation either by reference or by operation ID.  When using the latter approach, the API must contain an operation with that ID.  Make sure you have an operation defined with an appropriate ID.`,\n    \"MT-3-003\"   : `Content \"Encoding\" options are only supported when the Request Body Media Type is either a multi-part type or \"application/x-www-form-urlencoded\".  For other content types (e.g. application/json), the concept of encoding the schema properties doesn't make sense.`,\n    \"OP-3-003\"   : `The HTTP specification only supports a body in the HTTP request for the POST, PUT, and OPTIONS methods.  As a result, only these operations may define a Request Body input.`,\n    \"OP-3-005\"   : `Every Operation defined in the API must include at least one Response, so that consumers know what data to expect back as a result of performing the operation.`,\n    \"PAR-3-002\"  : `When defining a Parameter, you must indicate where in the HTTP request the parameter can be found.  The possible values are \"path\", \"query', \"header\", and \"cookie\".`,\n    \"PAR-3-006\"  : `All \"path\" style Parameters must define the \"required\" property and the value of this property must be \"true\".`,\n    \"PAR-3-007\"  : `The \"allowEmptyValue\" option for a parameter only makes sense for \"query\" style parameters.  This option indicates whether the client can send an empty value for the parameter (something that is only possible for query parameters).`,\n    \"PAR-3-009\"  : `The \"style\" property of a Parameter describes how the parameter value will be serialized depending on the type of the parameter value.  The only allowed values are \"matrix\", \"label\", \"form\", \"simple\", \"spaceDelimited\", \"pipeDelimited\", and \"deepObject\".`,\n    \"PAR-3-010\"  : `The \"style\" property of a Parameter describes how the parameter value will be serialized depending on the type of the parameter value.  When the parameter is found in the path, the only allowed values are \"matrix\", \"label\", and \"simple\".`,\n    \"PAR-3-011\"  : `The \"style\" property of a Parameter describes how the parameter value will be serialized depending on the type of the parameter value.  When the parameter is found in the query, the only allowed values are \"form\", \"spaceDelimited\", \"pipeDelimited\", and \"deepObject\".`,\n    \"PAR-3-012\"  : `The \"style\" property of a Parameter describes how the parameter value will be serialized depending on the type of the parameter value.  When the parameter is a Cookie, the only allowed value is \"form\".`,\n    \"PAR-3-013\"  : `The \"style\" property of a Parameter describes how the parameter value will be serialized depending on the type of the parameter value.  When the parameter is an HTTP Header, the only allowed value is \"simple\".`,\n    \"PAR-3-014\"  : `The \"allowReserved\" option for Parameters determines whether the parameter value should allow reserved characters (as defined by RFC3986) to be included without percent-encoding.  This property is only relevant for query parameters (because only query parameters require percent encoding).`,\n    \"PAR-3-016\"  : `When specifying the Content of a Parameter, only one Media Type can be defined.  Unlike Request Body content and Response content, a Parameter can only support a single content media type.`,\n    \"PAR-3-018\"  : `For path style parameters, the name of the parameter must correspond to one of the variables defined in the path template.  For example, if the path template is \"/resource/{resourceId}/{resourceType}\", then the name of the path parameter must be either \"resourceId\" or \"resourceType\".`,\n    \"PAR-3-019\"  : `Because these specific HTTP headers are defined separately within the API definition, header style parameters named \"Accept\", \"Content-Type\", and \"Authorization\" are ignored.  Instead, the Request Body, list of Responses, and Security Requirements drive those header values respectively.`,\n    \"PAR-3-020\"  : `Since path parameters reference path variables found as part of the Path Template, they must be declared as \"required\".`,\n    \"PATH-3-002\" : `There are multiple Path items with the same (or equivalent) path templates.  This is problematic because it is not possible to have different functionality available at the same endpoint URL.  Make sure all of your Path templates are unique.`,\n    \"SCH-3-001\"  : `The \"discriminator\" property (which adds support for data type polymorphism) only makes sense when using \"oneOf\", \"anyOf\", or \"allOf\" schemas.  In all other cases there is nothing to discriminate.`,\n    \"SREQ-3-002\" : `The value of the security requirement must be an array.  For security requirements that reference HTTP or API Key security schemes, the value of the security requirement must be an empty array (since scopes are not supported for those security types),`,\n    \"SREQ-3-003\" : `The value of the security requirement must be an array (it cannot be missing or null).`,\n    \"SS-3-008\"   : `All Security Schemes must have a type.  The supported security scheme types are \"apiKey\", \"http\", \"oauth2\", and \"openIdConnect\".`,\n    \"SS-3-010\"   : `When defining an API Key security scheme, the value of the API Key must be located somewhere in the HTTP request.  For this reason, the \"in\" property is required and must have a value of \"header\", \"query\", or \"cookie\".`,\n    \"SS-3-011\"   : `When defining an HTTP security scheme of type \"bearer\", you must describe the format of the bearer token.  This is done via the \"bearerFormat\" property, which is simply a hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.`,\n    \"SS-3-013\"   : `When defining an HTTP security scheme, the type of security must be specified using the \"scheme\" property.  The value of this property must be the name of the HTTP Authorization scheme to be used in the Authorization header as defined in RFC7235.  Supported values are: \"basic\", \"bearer\", \"digest\", \"hoba\", \"mutual\", \"negotiate\", \"oauth\", \"vapid\", \"scram-sha-1\", and \"scram-sha-256\"`,\n    \"SVAR-3-003\" : `The name of the Server Variable must match a variable found in the Server URL template.  For example, if the server URL template is \"http://{domain}:{port}/ctx/{path}\" then the Server Variable name must be either \"domain\", \"port\", or \"path\".`,\n    \"XML-3-002\"  : `When defining the XML representation of a definition, one of the options is to declare an element must be wrapped (by another XML element).  However, this is only relevant for \"array\" type properties, since array properties may have multiple values that should be contained within a parent (wrapper) XML element.`,\n    \"CALL-3-001\" : `The definition of the Callback attempts to reference a Callback found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Callback was deleted, or there is a typo in the reference.`,\n    \"EX-3-003\"   : `The definition of the Example attempts to reference an Example found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Example was deleted, or there is a typo in the reference.`,\n    \"HEAD-3-005\" : `The definition of the Header attempts to reference a Header found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Header was deleted, or there is a typo in the reference.`,\n    \"LINK-3-003\" : `When present, the Link's \"operationRef\" property must reference an operation.  This operation is typically declared in the same API but may also exist in an external location.  Check to make sure that the reference is valid and that the target Operation exists.`,\n    \"LINK-3-005\" : `The definition of the LInk attempts to reference a Link found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Link was deleted, or there is a typo in the reference.`,\n    \"PAR-3-017\"  : `The definition of the Parameter attempts to reference a Parameter found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Parameter was deleted, or there is a typo in the reference.`,\n    \"RB-3-003\"   : `The definition of the Request Body attempts to reference a Request Body found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Request Body was deleted, or there is a typo in the reference.`,\n    \"RES-3-004\"  : `The definition of the Response attempts to reference a Response found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Response was deleted, or there is a typo in the reference.`,\n    \"SCH-3-002\"  : `The definition of the Schema attempts to reference a Schema found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Schema was deleted, or there is a typo in the reference.`,\n    \"SCH-3-003\"  : `All schemas must have a type and that type must be one of [\"string\", \"number\", \"integer\", \"boolean\", \"array\", \"object\"].`,\n    \"SCH-3-004\"  : `When a Schema is defined as an array, the type of item allowed in the array is defined using the \"items\" property.  This property is only allowed when the Schema is of type array.`,\n    \"SS-3-012\"   : `The definition of the Callback attempts to reference a Callback found elsewhere (typically globally declared Components section of the same API document) but the reference could not be resolved.  Perhaps the global Callback was deleted, or there is a typo in the reference.`,\n    \"EX-3-002\"   : `When defining an Example, either an inline value or an external value must be provided, but not both.`,\n    \"HEAD-3-006\" : `When providing the data type for a header, it must be defined either in a schema or a content object, but not both.`,\n    \"HEAD-3-007\" : `When including an example of a header value, it must be provided either in an \"example\" or \"examples\" property, but not both.`,\n    \"LINK-3-001\" : `Every link must reference an existing Operation, by specifying either a \"operationRef\" or an \"operationId\" (but not both).`,\n    \"MT-3-001\"   : `When including an example of a media type, it must be provided either in an \"example\" or \"examples\" property, but not both.`,\n    \"PAR-3-008\"  : `When providing the data type for a parameter, it must be defined either in a schema or a content object, but not both.`,\n    \"PAR-3-015\"  : `When including an example of a parameter value, it must be provided either in an \"example\" or \"examples\" property, but not both.`,\n    \"DISC-3-001\" : `When using a discriminator, specifying a schema property name is required.`,\n    \"ED-3-002\"   : `Every external documentation must include a URL to the location of the external information.`,\n    \"FLOW-3-001\" : `Both Implicit and Authorization Code style OAuth flows require a valid Authorization URL to be configured.`,\n    \"FLOW-3-002\" : `The Implicit, Authorization Code, and Client Credentials style OAuth flows all require a valid Token URL to be configured.`,\n    \"FLOW-3-006\" : `All OAuth flows must define their allowed set of scopes.`,\n    \"INF-3-001\"  : `A title must be included for every API definition.`,\n    \"INF-3-002\"  : `A version must be included for every API definition.`,\n    \"LIC-3-001\"  : `The name of the License must be provided.`,\n    \"OP-3-004\"   : `Every Operation must include at least one Response.`,\n    \"PAR-3-003\"  : `Every Parameter must have a name.`,\n    \"PAR-3-004\"  : `For every Parameter, where it can be found in the Request must be indicated (e.g. path, query, header).`,\n    \"R-3-001\"    : `The API definition must contain an \"openapi\" property (with a value of e.g. 3.0.2).`,\n    \"R-3-002\"    : `The API definition must include an Info child (which must contain the API title and version).`,\n    \"R-3-003\"    : `Every API definition must include a \"paths\" property even if there are no actual Path Items contained in it.`,\n    \"RB-3-002\"   : `Every Request Body must define its Content so that clients know what format the Operation's input data must be.`,\n    \"SRV-3-001\"  : `The Server definition must include a URL template indicating the real endpoint location of the server.`,\n    \"SS-3-001\"   : `Every Security Scheme must include a type, which indicates what kind of security is required (e.g. HTTP, API Key, etc).`,\n    \"SS-3-002\"   : `Every API Key style Security Scheme must define a name which, along with the \"in\" property, indicates where in the Request the API Key should be found.`,\n    \"SS-3-003\"   : `Every API Key style Security Scheme must define a location within the Request where the API key can be found (e.g. in the headers or query string).`,\n    \"SS-3-004\"   : `Every HTTP style Security Scheme must indicate what HTTP Security scheme should be used (e.g. Basic, Digest).`,\n    \"SS-3-005\"   : `When specifying an OAuth style Security Scheme, at least one OAuth flow must be configured.`,\n    \"SS-3-006\"   : `When specifying an Open Id Connect style Security Scheme, the Open ID Connect URL must be configured.`,\n    \"SVAR-3-001\" : `Every Server Variable must be configured with a default value.`,\n    \"TAG-3-001\"  : `All configured Tags must have a name.`,\n    \"OP-3-002\"   : `If an Operation ID is defined for an Operation, it must be unique across all operations in the API.`,\n    \"PAR-3-001\"  : `Parameters are uniquely defined by their \"name\" and their \"location\" (path, query, formData, etc).  You cannot have two Parameters with the same combination of name and location.  Please make sure that all of your parameters are appropriately unique based on these two criteria.`,\n    \"TAG-3-003\"  : `Each Tag must have a unique name (no duplicate tag names are allowed).`,\n    \"UNKNOWN-3-001\" : `When reading the OpenAPI definition, a property was discovered that is not a part of the specification (and is not an extension property).  The property and its value will be preserved, but is most likely a mistake and should be removed.`\n};\n\n\n\n/**\n * A simple service providing information and functionality about validation problems.\n * This includes providing more information (explanation) about any given problem type\n * as well as \"quick fix\" functionality.\n */\n@Injectable()\nexport class ProblemsService {\n\n    /**\n     * Returns a human-readable summary for the given validation problem.\n     * @param problem\n     */\n    public summary(problem: ValidationProblem): string {\n        let summary: string = PROBLEM_SUMMARIES[problem.errorCode];\n        if (summary === null || summary === undefined || summary === \"\") {\n            summary = problem.message;\n        }\n        return summary;\n    }\n\n    /**\n     * Returns a full human-readable explanation for the given validation problem.\n     * @param problem\n     */\n    public explanation(problem: ValidationProblem): string {\n        let explanation: string = PROBLEM_EXPLANATIONS[problem.errorCode];\n        if (!explanation) {\n            explanation = \"No additional information found.\";\n        }\n        return explanation;\n    }\n\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component,\n    Input,\n    SimpleChanges,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CommandFactory,\n    ICommand,\n    AaiChannelItem,\n    AaiOperation\n} from \"@apicurio/data-models\";\nimport {CommandService} from \"../../../_services/command.service\";\nimport {DocumentService} from \"../../../_services/document.service\";\nimport {ModelUtils} from \"../../../_util/model.util\";\nimport {SelectionService} from \"../../../_services/selection.service\";\nimport {AbstractBaseComponent} from \"../../common/base-component\";\nimport {TopicSubscription} from \"apicurio-ts-core\";\n\n\n@Component({\n    selector: \"channel-operations-section\",\n    templateUrl: \"operations-section.component.html\",\n    styleUrls: [ \"operations-section.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChannelOperationsSectionComponent extends AbstractBaseComponent {\n\n    @Input() channel: AaiChannelItem;\n    protected _nodePath: string;\n\n    public tab: string;\n\n    private _operations: AaiOperation[] = [];\n    private _allOperations: AaiOperation[] = [];\n    private _collaborationPaths: string[] = [];\n    private _selectionSubscription: TopicSubscription<string>;\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param commandService\n     * @param selectionService\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                private commandService: CommandService, selectionService: SelectionService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n\n        this._selectionSubscription = this.__selectionService.selection().subscribe( selection => {\n            this.setOperationTabFromSelection(selection);\n        });\n    }\n\n    protected onDocumentChange(): void {\n        this.refresh();\n    }\n\n    public ngOnChanges(changes: SimpleChanges): void {\n        if (changes[\"channel\"]) {\n            this.refresh();\n            this.setOperationTabFromSelection(this.__selectionService.currentSelection());\n        }\n    }\n\n    public ngOnDestroy(): void {\n        super.ngOnDestroy();\n        this._selectionSubscription.unsubscribe();\n    }\n\n    public operations(): AaiOperation[] {\n        return this._operations;\n    }\n\n    public collaborationPaths(): string[] {\n        return this._collaborationPaths;\n    }\n\n    private refresh(): void {\n        this._operations = this.channelOperations();\n        this._allOperations = this.allChannelOperations();\n        this._collaborationPaths = this.allCollaborationPaths();\n        this._nodePath = ModelUtils.nodeToPath(this.channel);\n    }\n\n    private setOperationTabFromSelection(selection: string): void {\n        console.info(\"[ChannelOperationsSectionComponent] Setting operation tab from selection: \", selection);\n        this.tab = null;\n        let tabs: string[] = [\n            \"publish\", \"subscribe\"\n        ];\n\n        // Choose a tab based on the selection\n        for (let t of tabs) {\n            let tpath: string = this._nodePath + \"/\" + t;\n            if (selection.indexOf(tpath) === 0) {\n                this.tab = t;\n                this.__changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n\n        // Choose a tab based on the availability of actual operations.  I.e. if the path only has\n        // a \"SUBSCRIBE\" operation, then choose that one.\n        for (let operation of this._operations) {\n            console.info(\"[ChannelOperationsSectionComponent] No operations selected, setting tab to: \", operation.getType());\n            this.tab = operation.getType();\n            this.__changeDetectorRef.markForCheck();\n            return;\n        }\n\n        // If all else fails, just default to \"SUBSCRIBE\"\n        this.tab = \"subscribe\";\n        this.__changeDetectorRef.markForCheck();\n    }\n\n    private channelOperations(): AaiOperation[] {\n        return this.allChannelOperations().filter( operation => operation !== null && operation !== undefined);\n    }\n\n    private allChannelOperations(): AaiOperation[] {\n        let ops: AaiOperation[] = [\n            this.channel.publish,\n            this.channel.subscribe\n        ];\n        return ops;\n    }\n\n    private allCollaborationPaths(): string[] {\n        let basePath: string = ModelUtils.nodeToPath(this.channel) + \"/\";\n        let paths: string[] = [ \"publish\", \"subscribe\" ].map( method => {\n            return basePath + method;\n        });\n        return paths;\n    }\n\n    public operation(): AaiOperation {\n        if (this.tab) {\n            return this.channel[this.tab];\n        }\n        return null;\n    }\n\n    public operationPath(operationType: string): string {\n        return this._nodePath + \"/\" + operationType;\n    }\n\n    public isDefined(operationType: string): boolean {\n        let operation: AaiOperation = this.channel[operationType] as AaiOperation;\n        if (operation) {\n            return true;\n        }\n        return false;\n    }\n\n    public isSelected(operation: AaiOperation): boolean {\n        return ModelUtils.isSelected(operation);\n    }\n\n    public selectTab(operationType: string): void {\n        this.__selectionService.select(this._nodePath + \"/\" + operationType);\n    }\n\n    public hasSelectedOperation(): boolean {\n        return this.isDefined(this.tab);\n    }\n\n    public addOperation(): void {\n        // Create the operation via a command.\n        let command: ICommand = CommandFactory.createNewOperationCommand_Aai20(this.channel.getName(), this.tab);\n        this.commandService.emit(command);\n        // And then select the new operation we just created.\n        this.__selectionService.select(ModelUtils.nodeToPath(this.channel) + \"/\" + this.tab);\n    }\n\n    public deleteOperation(operation: AaiOperation): void {\n        if (!operation) {\n            return;\n        }\n        let command: ICommand = CommandFactory.createDeleteOperationCommand_Aai20(operation.getType(),\n            operation.parent() as AaiChannelItem);\n        this.commandService.emit(command);\n    }\n\n    public deleteAllOperations(): void {\n        let command: ICommand = CommandFactory.createDeleteAllOperationsCommand_Aai20(this.channel);\n        this.commandService.emit(command);\n    }\n\n}\n","<section type=\"operations\" label=\"OPERATIONS\" [counterItems]=\"operations()\" [inForm]=\"false\"\n         [collaborationNodePath]=\"collaborationPaths()\"\n         contextHelp=\"In this section you can manage the operations defined for the channel.\"\n         [validationModels]=\"operations()\">\n    <span actions></span>\n    <div body>\n        <div class=\"operation-tabs\">\n            <div class=\"tabs\">\n                <div class=\"operation-tab subscribe-tab\" [class.selected]=\"tab === 'subscribe'\" [class.enabled]=\"isDefined('subscribe')\" (click)=\"selectTab('subscribe')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('subscribe')\"></collaborator-overlay>\n                        <span>Subscribe</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ channel.subscribe ]\"></validation-aggregate>\n                </div>\n                <div class=\"operation-tab publish-tab\" [class.selected]=\"tab === 'publish'\" [class.enabled]=\"isDefined('publish')\" (click)=\"selectTab('publish')\">\n                    <div class=\"tab-label\">\n                        <collaborator-overlay [nodePath]=\"operationPath('publish')\"></collaborator-overlay>\n                        <span>Publish</span>\n                    </div>\n                    <validation-aggregate [models]=\"[ channel.publish ]\"></validation-aggregate>\n                </div>\n            </div>\n            <div class=\"actions\">\n                <div class=\"dropdown dropdown-kebab-pf\">\n                    <button class=\"btn btn-link dropdown-toggle\" type=\"button\" (click)=\"$event.preventDefault()\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\">\n                        <span class=\"fa fa-ellipsis-v\"></span>\n                    </button>\n                    <ul class=\"dropdown-menu dropdown-menu-right\">\n                        <li [class.disabled]=\"!operation()\"><a (click)=\"deleteOperation(operation())\"><span class=\"fa fa-fw fa-trash\"></span><span>Delete Operation</span></a></li>\n                        <li role=\"separator\" class=\"divider\"></li>\n                        <li><a (click)=\"deleteAllOperations()\"><span class=\"fa fa-fw fa-trash-o\"></span><span>Delete All Operations</span></a></li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"operation\" *ngIf=\"hasSelectedOperation()\">\n            <!-- Info Section -->\n            <channel-operation-info-section [operation]=\"operation()\"></channel-operation-info-section>\n\n            <!-- Message Section -->\n            <message-section [operation]=\"operation()\"></message-section>\n        </div>\n\n        <div class=\"no-operation\" *ngIf=\"!hasSelectedOperation()\">\n            <no-operation [method]=\"tab\" (add)=\"addOperation()\"></no-operation>\n        </div>\n    </div>\n</section>\n\n\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {CombinedVisitorAdapter, AaiMessageTraitDefinition} from \"@apicurio/data-models\";\n\n/**\n * Visitor used to find message trait definitions.\n */\nexport class FindMessageTraitDefinitionsVisitor extends CombinedVisitorAdapter {\n\n    public messageTraitDefinitions: AaiMessageTraitDefinition[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria\n     */\n    constructor(private filterCriteria: string) {\n        super();\n    }\n\n    /**\n     * Called when a message trait def is visited.\n     * @param node\n     */\n    visitMessageTraitDefinition(node: AaiMessageTraitDefinition): void {\n        if (this.acceptThroughFilter(node.getName())) {\n            this.messageTraitDefinitions.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the message trait defs.\n     */\n    public getSortedMessageTraitDefinitions(): AaiMessageTraitDefinition[] {\n        return this.messageTraitDefinitions.sort( (messageTraitDefinition1, messageTraitDefinition2) => {\n            return messageTraitDefinition1.getName().localeCompare(messageTraitDefinition2.getName());\n        });\n    }\n\n    /**\n     * Figures out the definition name regardless of the version of the model.\n     * @param definition\n     */\n    public static definitionName(definition: AaiMessageTraitDefinition): string {\n        return definition.getName();\n    }\n\n    /**\n     * Returns true if the given name is accepted by the current filter criteria.\n     * @param name\n     * @return\n     */\n    private acceptThroughFilter(name: string): boolean {\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n    }\n}\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Component, ViewChildren, QueryList} from \"@angular/core\";\nimport {Oas30Server} from \"@apicurio/data-models\";\nimport {EntityEditor, EntityEditorEvent, IEntityEditorHandler} from \"./entity-editor.component\";\nimport {NgModel} from \"@angular/forms\";\n\nexport interface ServerVariableData {\n    default: string;\n    description: string;\n    enum: string[];\n}\n\nexport interface ServerData {\n    url: string;\n    description: string;\n    variables: any; // map of string to ServerVariableData\n}\n\nexport interface ServerEditorEvent extends EntityEditorEvent<Oas30Server> {\n    data: ServerData;\n}\n\nexport interface IServerEditorHandler extends IEntityEditorHandler<Oas30Server, ServerEditorEvent> {\n    onSave(event: ServerEditorEvent): void;\n    onCancel(event: ServerEditorEvent): void;\n}\n\n\n@Component({\n    selector: \"server-editor\",\n    templateUrl: \"server-editor.component.html\",\n    styleUrls: [\"server-editor.component.css\"]\n})\nexport class ServerEditorComponent extends EntityEditor<Oas30Server, ServerEditorEvent> {\n\n    @ViewChildren(\"urlInput\") urlInput: QueryList<NgModel>;\n\n    public model: ServerData = {\n        url: \"\",\n        description: \"\",\n        variables: {}\n    };\n    public url: string;\n    _varSelected: string = null;\n\n    /**\n     * Initializes the editor's data model from a provided entity (initialize the editor data model from an entity).\n     * @param entity\n     */\n    public initializeModelFromEntity(entity: Oas30Server): void {\n        this.model.url = entity.url;\n        this.model.description = entity.description;\n        this.model.variables = {};\n        entity.getServerVariables().forEach( variable => {\n            this.model.variables[variable.getName()] = {\n                \"default\": variable.default_,\n                \"description\": variable.description,\n                \"enum\": variable.enum_\n            };\n        });\n        this.url = this.model.url;\n        this.updateVariables();\n    }\n\n    /**\n     * Initializes the editor's data model to an empty state.\n     */\n    public initializeModel(): void {\n        this.model = {\n            url: \"\",\n            description: \"\",\n            variables: {}\n        };\n        this.url = \"\";\n    }\n\n    /**\n     * Returns true if the data model is valid.\n     */\n    public isValid(): boolean {\n        // TODO should also validate the URL format is OK\n        let hasUrl: boolean = this.model.url ? true : false;\n        return hasUrl && !this.canApply();\n    }\n\n    /**\n     * Creates an entity event specific to this entity editor.\n     */\n    public entityEvent(): ServerEditorEvent {\n        let event: ServerEditorEvent = {\n            entity: this.entity,\n            data: this.model\n        };\n        return event;\n    }\n\n    /**\n     * Called when the URL changes.  The URL will be parsed to find any variable substitutions\n     * present in the URL spec.  The map of variables is then updated to reflect whatever is found.\n     */\n    public updateVariables(): void {\n        console.info(\"[ServerEditorComponent] Updating variables for URL: %s\", this.model.url);\n\n        let url = this.model.url;\n        if (!url) {\n            this.model.variables = {};\n        }\n\n        console.info(\"                           Executing regex against: %s\", url);\n        let regex:RegExp = /{([^}]+)}/gi;\n        let result: RegExpExecArray;\n        let varNames: string[] = [];\n        while ( (result = regex.exec(url)) ) {\n            varNames.push(result[1]);\n        }\n        console.info(\"                           Variable names found: %o\", varNames);\n\n        let newVariables: any = {};\n\n        varNames.forEach( varName => {\n            if (this.model.variables[varName]) {\n                newVariables[varName] = this.model.variables[varName];\n            } else {\n                newVariables[varName] = {};\n            }\n        });\n\n        this.model.variables = newVariables;\n\n        this._varSelected = null;\n        if (varNames.length > 0) {\n            this._varSelected = varNames[0];\n        }\n    }\n\n    /**\n     * Returns true if there are any variables to be configured.\n     * @return\n     */\n    public hasVariables(): boolean {\n        let rval: boolean = false;\n        if (this.model.variables) {\n            for (let v in this.model.variables) {\n                rval = true;\n            }\n        }\n        return rval;\n    }\n\n    /**\n     * Returns the names of the variables.\n     * @return\n     */\n    public variableNames(): string[] {\n        let rval: string[] = [];\n        if (this.model.variables) {\n            for (let v in this.model.variables) {\n                rval.push(v);\n            }\n        }\n        return rval;\n    }\n\n    /**\n     * @param event\n     */\n    public onServerUrlKeypress(event: KeyboardEvent): void {\n        if (event.key === \"Enter\") {\n            this.apply();\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    }\n\n    /**\n     * Returns true if there are URL changes.\n     */\n    public canApply(): boolean {\n        return this.model.url !== this.url;\n    }\n\n    /**\n     * Called when the user clicks the \"apply\" button.\n     */\n    public apply(): void {\n        this.model.url = this.url;\n        this.updateVariables();\n    }\n\n    /**\n     * Called when the user clicks the \"reset\" button.\n     */\n    public reset(): void {\n        this.url = this.model.url;\n    }\n\n}\n","<entity-editor (onClose)=\"close()\" (onSave)=\"save()\" [context]=\"context\" entityType=\"server\" *ngIf=\"isOpen()\"\n               [showRequiredFieldsMessage]=\"true\" heading=\"Define the Server\" [valid]=\"isValid()\">\n\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>1. Enter Server URL</h3>\n            <p class=\"explanation\">\n                <span>\n                    Enter the URL template of the server. Include server variables in the URL template using the following syntax:\n                </span>\n                <br />\n                <code>\n                    http://<span class=\"server-variable\">&#123;domain&#125;</span>.example.com:<span class=\"server-variable\">&#123;port&#125;</span>/api\n                </code>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"form-group\">\n                <label class=\"control-label required\" for=\"serverUrl\">Server URL</label>\n                <div *ngIf=\"_mode === 'create'\">\n                    <table class=\"server-url-wrapper\">\n                        <tr>\n                            <td width=\"100%\">\n                                <input #urlInput=\"ngModel\" name=\"server\" type=\"text\" id=\"serverUrl\" class=\"form-control\"\n                                       placeholder=\"Enter Server URL\" (keypress)=\"onServerUrlKeypress($event)\"\n                                       required [(ngModel)]=\"url\">\n                            </td>\n                            <td>\n                                <button class=\"btn btn-primary url-action\" (click)=\"apply()\" [disabled]=\"!canApply()\">Apply</button>\n                            </td>\n                            <td>\n                                <button class=\"btn btn-default url-action\" (click)=\"reset()\" [disabled]=\"!canApply()\">Reset</button>\n                            </td>\n                        </tr>\n                    </table>\n                    <form-error-message [inputModel]=\"urlInput\" [type]=\"'required'\">Server URL is required.</form-error-message>\n                    <div *ngIf=\"canApply()\" class=\"form-error-message error\">URL has been changed.  Press enter or click \"Apply\" to accept.</div>\n                </div>\n                <div *ngIf=\"_mode === 'edit'\">\n                    <input name=\"server\" type=\"text\" id=\"server_ro\" class=\"form-control\" required\n                           [(ngModel)]=\"model.url\" readonly>\n                </div>\n            </div>\n            <div class=\"form-group\">\n                <label class=\"control-label\" for=\"description\">Description</label>\n                <div>\n                        <textarea name=\"description\" id=\"description\" class=\"form-control\" autosize #descriptionInput\n                                  placeholder=\"Server description\" [(ngModel)]=\"model.description\"></textarea>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row-fluid divider-section\">\n        <div class=\"col-md-12\">\n            <hr />\n        </div>\n    </div>\n    <div class=\"row-fluid body-section\">\n        <div class=\"col-md-12\">\n            <h3>2. Configure Server Variables</h3>\n            <p class=\"explanation\">\n                    <span>\n                        Configure the server variables found in the server URL template.\n                    </span>\n            </p>\n        </div>\n        <div class=\"col-md-12\">\n            <p class=\"empty-state\" *ngIf=\"!hasVariables()\">\n                This server URL does not contain variables.  Server variables are defined in the server URL template.\n            </p>\n\n            <div class=\"server-variables\" *ngIf=\"hasVariables()\">\n                <ul class=\"nav nav-tabs\">\n                    <li *ngFor=\"let varName of variableNames()\" [class.active]=\"varName == _varSelected\"><a (click)=\"_varSelected = varName\">{{ varName }}</a></li>\n                </ul>\n                <div class=\"panel panel-default tab-panel\">\n                    <div *ngFor=\"let varName of variableNames()\" class=\"panel-body\" [class.hidden]=\"varName != _varSelected\">\n                        <div class=\"form-group\">\n                            <label class=\"control-label\">Default Value</label>\n                            <div class=\"\">\n                                <input name=\"defval_{{ varName }}\" type=\"text\" class=\"form-control short\"\n                                       (keypress)=\"onKeypress($event)\"\n                                       placeholder=\"Default value\" [(ngModel)]=\"model.variables[varName].default\">\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"control-label\">Description</label>\n                            <div class=\"\">\n                                    <textarea name=\"description_{{ varName }}\" class=\"form-control\" autosize\n                                              placeholder=\"Variable description\" [(ngModel)]=\"model.variables[varName].description\"></textarea>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    </div>\n\n</entity-editor>\n","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    ChangeDetectorRef,\n    Component, EventEmitter,\n    HostListener,\n    Input, Output,\n    ViewChild,\n    ViewEncapsulation\n} from \"@angular/core\";\nimport {\n    CombinedAllNodeVisitor,\n    CombinedVisitorAdapter,\n    CommandFactory,\n    DocumentType,\n    ICommand, IDefinition,\n    Library,\n    Node,\n    NodePath,\n    Oas20Document,\n    Oas20PathItem,\n    Oas20ResponseDefinition,\n    Oas20SchemaDefinition,\n    Oas30Document,\n    Oas30PathItem,\n    Oas30ResponseDefinition,\n    Oas30SchemaDefinition,\n    OasDocument,\n    OasPathItem,\n    TraverserDirection,\n    VisitorUtil\n} from \"@apicurio/data-models\";\nimport {AddPathDialogComponent} from \"./dialogs/add-path.component\";\nimport {ClonePathDialogComponent} from \"./dialogs/clone-path.component\";\nimport {CloneDefinitionDialogComponent} from \"./dialogs/clone-definition.component\";\nimport {FindPathItemsVisitor} from \"../_visitors/path-items.visitor\";\nimport {FindSchemaDefinitionsVisitor} from \"../_visitors/schema-definitions.visitor\";\nimport {ModelUtils} from \"../_util/model.util\";\nimport {SelectionService} from \"../_services/selection.service\";\nimport {CommandService} from \"../_services/command.service\";\nimport {EditorsService} from \"../_services/editors.service\";\nimport {DataTypeData, DataTypeEditorComponent, IDataTypeEditorHandler} from \"./editors/data-type-editor.component\";\nimport {RestResourceService} from \"../_services/rest-resource.service\";\nimport {RenamePathDialogComponent} from \"./dialogs/rename-path.component\";\nimport {AbstractBaseComponent} from \"./common/base-component\";\nimport {DocumentService} from \"../_services/document.service\";\nimport {RenameEntityDialogComponent, RenameEntityEvent} from \"./dialogs/rename-entity.component\";\nimport {KeypressUtils} from \"../_util/keypress.util\";\nimport {ObjectUtils} from \"apicurio-ts-core\";\nimport {IResponseEditorHandler, ResponseData, ResponseEditorComponent} from \"./editors/response-editor.component\";\nimport {FindResponseDefinitionsVisitor} from \"../_visitors/response-definitions.visitor\";\nimport {CloneResponseDefinitionDialogComponent} from \"./dialogs/clone-response-definition.component\";\nimport {FeaturesService} from \"../_services/features.service\";\nimport {ComponentType} from \"../_models/component-type.model\";\n\n\n/**\n * The component that models the master view of the API editor.  This is the\n * left-hand side of the editor, which lists things like Paths and Definitions.\n * Users will select an item in this master panel which will result in a form\n * being displayed in the detail panel.\n */\n@Component({\n    selector: \"master\",\n    templateUrl: \"master.component.html\",\n    styleUrls: [ \"master.component.css\" ],\n    encapsulation: ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditorMasterComponent extends AbstractBaseComponent {\n\n    @Input() document: OasDocument;\n\n    @Output() onImportComponent: EventEmitter<ComponentType> = new EventEmitter<ComponentType>();\n\n    contextMenuSelection: NodePath = null;\n    contextMenuType: string = null;\n    contextMenuPos: any = {\n        left: \"0px\",\n        top: \"0px\"\n    };\n\n    @ViewChild(\"addPathDialog\", { static: true }) addPathDialog: AddPathDialogComponent;\n    @ViewChild(\"clonePathDialog\", { static: true }) clonePathDialog: ClonePathDialogComponent;\n    @ViewChild(\"renamePathDialog\", { static: true }) renamePathDialog: RenamePathDialogComponent;\n\n    @ViewChild(\"cloneDefinitionDialog\", { static: true }) cloneDefinitionDialog: CloneDefinitionDialogComponent;\n    @ViewChild(\"renameDefinitionDialog\", { static: true }) renameDefinitionDialog: RenameEntityDialogComponent;\n\n    @ViewChild(\"cloneResponseDialog\", { static: true }) cloneResponseDialog: CloneResponseDefinitionDialogComponent;\n    @ViewChild(\"renameResponseDialog\", { static: true }) renameResponseDialog: RenameEntityDialogComponent;\n\n    filterCriteria: string = null;\n    _paths: OasPathItem[];\n    _defs: (Oas20SchemaDefinition | Oas30SchemaDefinition)[];\n    _responses: (Oas20ResponseDefinition | Oas30ResponseDefinition)[];\n\n    /**\n     * C'tor.\n     * @param changeDetectorRef\n     * @param documentService\n     * @param selectionService\n     * @param commandService\n     * @param editors\n     * @param restResourceService\n     * @param features\n     */\n    constructor(changeDetectorRef: ChangeDetectorRef, documentService: DocumentService,\n                selectionService: SelectionService, private commandService: CommandService,\n                private editors: EditorsService, private restResourceService: RestResourceService,\n                private features: FeaturesService) {\n        super(changeDetectorRef, documentService, selectionService);\n    }\n\n    public ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    protected onDocumentChange(): void {\n        this._paths = null;\n        this._defs = null;\n        this._responses = null;\n    }\n\n    public onPathsKeypress(event: KeyboardEvent): void {\n        if (KeypressUtils.isUpArrow(event) || KeypressUtils.isDownArrow(event)) {\n            let paths: OasPathItem[] = this.paths();\n            this.handleArrowKeypress(event, paths);\n        }\n    }\n\n    public onDefinitionsKeypress(event: KeyboardEvent): void {\n        if (KeypressUtils.isUpArrow(event) || KeypressUtils.isDownArrow(event)) {\n            let definitions: (Oas20SchemaDefinition | Oas30SchemaDefinition)[] = this.definitions();\n            this.handleArrowKeypress(event, definitions);\n        }\n    }\n\n    public onResponsesKeypress(event: KeyboardEvent): void {\n        if (KeypressUtils.isUpArrow(event) || KeypressUtils.isDownArrow(event)) {\n            let responses: (Oas20ResponseDefinition | Oas30ResponseDefinition)[] = this.responses();\n            this.handleArrowKeypress(event, responses);\n        }\n    }\n\n    protected handleArrowKeypress(event: KeyboardEvent, items: Node[]): void {\n        console.info(\"[EditorMasterComponent] Up/Down arrow detected.\");\n        let selectedIdx: number = -1;\n        items.forEach( (item, idx) => {\n            if (ModelUtils.isSelected(item)) {\n                selectedIdx = idx;\n            }\n        });\n\n        console.info(\"[EditorMasterComponent] Current selection index: \", selectedIdx);\n\n        // Do nothing if we have no selection and the user hits the UP arrow\n        if (selectedIdx == -1 && KeypressUtils.isUpArrow(event)) {\n            selectedIdx = items.length;\n        }\n\n        if (KeypressUtils.isDownArrow(event)) {\n            selectedIdx++;\n        } else {\n            selectedIdx--;\n        }\n        if (selectedIdx < 0) {\n            selectedIdx = 0;\n        }\n        if (selectedIdx >= items.length) {\n            selectedIdx = items.length - 1;\n        }\n\n        console.info(\"[EditorMasterComponent] New Selection Index: \", selectedIdx);\n\n        let newSelection: Node = items[selectedIdx];\n        this.__selectionService.selectNode(newSelection);\n    }\n\n    /**\n     * Returns an array of paths that match the filter criteria and are sorted alphabetically.\n     */\n    public paths(): OasPathItem[] {\n        if (!this._paths) {\n            let viz: FindPathItemsVisitor = new FindPathItemsVisitor(this.filterCriteria);\n            if (this.document && this.document.paths) {\n                this.document.paths.getPathItems().forEach(pathItem => {\n                    VisitorUtil.visitNode(pathItem, viz);\n                });\n            }\n            this._paths = viz.getSortedPathItems();\n        }\n        return this._paths;\n    }\n\n    /**\n     * Returns the array of definitions, filtered by search criteria and sorted.\n     */\n    public definitions(): (Oas20SchemaDefinition | Oas30SchemaDefinition)[] {\n        let viz: FindSchemaDefinitionsVisitor = new FindSchemaDefinitionsVisitor(this.filterCriteria);\n        if (!this._defs) {\n            if (this.document.is2xDocument() && (this.document as Oas20Document).definitions) {\n                (this.document as Oas20Document).definitions.getDefinitions().forEach( definition => {\n                    VisitorUtil.visitNode(definition, viz);\n                })\n            } else if (this.document.is3xDocument() && (this.document as Oas30Document).components) {\n                (this.document as Oas30Document).components.getSchemaDefinitions().forEach( definition => {\n                    VisitorUtil.visitNode(definition, viz);\n                })\n            }\n            this._defs = viz.getSortedSchemaDefinitions();\n        }\n        return this._defs;\n    }\n\n    public definitionsPath(): string {\n        if (this.document && this.document.is2xDocument()) {\n            return \"/definitions\";\n        } else {\n            return \"/components/schemas\";\n        }\n    }\n\n    /**\n     * Returns an array of responses filtered by the search criteria and sorted.\n     */\n    public responses(): (Oas20ResponseDefinition | Oas30ResponseDefinition)[] {\n        let viz: FindResponseDefinitionsVisitor = new FindResponseDefinitionsVisitor(this.filterCriteria);\n        if (!this._responses) {\n            if (this.document.is2xDocument() && (this.document as Oas20Document).responses) {\n                (this.document as Oas20Document).responses.getResponses().forEach( response => {\n                    VisitorUtil.visitNode(response, viz);\n                })\n            } else if (this.document.is3xDocument() && (this.document as Oas30Document).components) {\n                (this.document as Oas30Document).components.getResponseDefinitions().forEach( response => {\n                    VisitorUtil.visitNode(response, viz);\n                })\n            }\n            this._responses = viz.getSortedResponseDefinitions();\n        }\n        return this._responses;\n    }\n\n    public responsesPath(): string {\n        if (this.document && this.document.is2xDocument()) {\n            return \"/responses\";\n        } else {\n            return \"/components/responses\";\n        }\n    }\n\n    /**\n     * Returns true if the given item is a valid path in the current document.\n     * @param pathItem\n     */\n    protected isValidPathItem(pathItem: OasPathItem): boolean {\n        if (ObjectUtils.isNullOrUndefined(pathItem)) {\n            return false;\n        }\n        if (ObjectUtils.isNullOrUndefined(this.document.paths)) {\n            return false;\n        }\n        let pi: any = this.document.paths.getPathItem(pathItem.getPath());\n        return pi === pathItem;\n    }\n\n    /**\n     * Returns true if the given schema definition is valid and contained within the\n     * current document.\n     * @param definition\n     * @return\n     */\n    protected isValidDefinition(definition: Oas20SchemaDefinition | Oas30SchemaDefinition): boolean {\n        if (ObjectUtils.isNullOrUndefined(definition)) {\n            return false;\n        }\n        return this.definitions().indexOf(definition) !== -1;\n    }\n\n    /**\n     * Returns true if the given response is valid and contained within the\n     * current document.\n     * @param response\n     * @return\n     */\n    protected isValidResponse(response: Oas20ResponseDefinition | Oas30ResponseDefinition): boolean {\n        if (ObjectUtils.isNullOrUndefined(response)) {\n            return false;\n        }\n        return this.responses().indexOf(response) !== -1;\n    }\n\n    /**\n     * Called when the user selects the main/default element from the master area.\n     */\n    public selectMain(): void {\n        this.__selectionService.selectRoot();\n    }\n\n    /**\n     * Called when the user selects a path from the master area.\n     * @param path\n     */\n    public selectPath(path: OasPathItem): void {\n        this.__selectionService.selectNode(path);\n    }\n\n    /**\n     * Called to deselect the currently selected path.\n     */\n    public deselectPath(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Called when the user selects a definition from the master area.\n     * @param def\n     */\n    public selectDefinition(def: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n        this.__selectionService.selectNode(def);\n    }\n\n    /**\n     * Deselects the currently selected definition.\n     */\n    public deselectDefinition(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Called when the user selects a response from the master area.\n     * @param response\n     */\n    public selectResponse(response: Oas20ResponseDefinition | Oas30ResponseDefinition): void {\n        this.__selectionService.selectNode(response);\n    }\n\n    /**\n     * Deselects the currently selected response.\n     */\n    public deselectResponse(): void {\n        this.selectMain();\n    }\n\n    /**\n     * Called whenever the user presses a key.\n     * @param event\n     */\n    public onGlobalKeyDown(event: KeyboardEvent): void {\n        if (KeypressUtils.isEscapeKey(event)) {\n            this.closeContextMenu();\n        }\n    }\n\n    /**\n     * Called to return the currently selected path (if one is selected).  If not, returns \"/\".\n     */\n    public getCurrentPathSelection(): string {\n        let currentSelection: string = this.__selectionService.currentSelection();\n        let npath: NodePath = new NodePath(currentSelection);\n        let node: Node = npath.resolve(this.document);\n        let rval: string = \"/\";\n        if (node && node[\"_path\"]) {\n            rval = node[\"_path\"] + \"/\";\n        } else if (node && node.parent() && node.parent()[\"_path\"]) {\n            rval = node.parent()[\"_path\"] + \"/\";\n        }\n        if (rval.endsWith(\"//\")) {\n            rval = rval.substring(0, rval.length - 1);\n        }\n        return rval;\n    }\n\n    /**\n     * Called when the user fills out the Add Path modal dialog and clicks Add.\n     * @param path\n     */\n    public addPath(path: string): void {\n        let command: ICommand = CommandFactory.createNewPathCommand(path);\n        this.commandService.emit(command);\n        this.selectPath(this.document.paths.getPathItem(path) as OasPathItem);\n    }\n\n    /**\n     * Returns true if the given node is the currently selected item *or* is the parent\n     * of the currently selected item.\n     * @param node\n     * @return\n     */\n    public isSelected(node: Node): boolean {\n        return ModelUtils.isSelected(node);\n    }\n\n    /**\n     * Returns true if the main node should be selected.\n     * @return\n     */\n    public isMainSelected(): boolean {\n        return ModelUtils.isSelected(this.document);\n    }\n\n    /**\n     * Returns true if the given node is the current context menu item.\n     * @param node\n     * @return\n     */\n    public isContexted(node: Node): boolean {\n        if (this.contextMenuSelection === null) {\n            return false;\n        }\n        return this.contextMenuSelection.contains(node);\n    }\n\n    /**\n     * Called when the user fills out the Add Definition modal dialog and clicks Add.\n     */\n    public addDefinition(data: DataTypeData): void {\n        console.info(\"[EditorMasterComponent] Adding a definition: \", data);\n        if (data.template === \"resource\") {\n            let commands: ICommand[] = [];\n            // First, create the \"new schema def\" command\n            let example: any = (data.example === \"\") ? null : data.example;\n            example = this.exampleAsObject(example);\n            let newSchemaCmd: ICommand = CommandFactory.createNewSchemaDefinitionCommand(this.document.getDocumentType(),\n                data.name, example, data.description);\n            commands.push(newSchemaCmd);\n            // Next, add the \"REST Resource\" commands to the list\n            this.restResourceService.generateRESTResourceCommands(data.name, this.document).forEach( cmd => commands.push(cmd));\n            // Now create an aggregate command for them all and emit that\n            let info: any = {\n                dataType: data.name\n            };\n            let command: ICommand = CommandFactory.createAggregateCommand(\"CreateRESTResource\", info, commands);\n            this.commandService.emit(command);\n        } else {\n            let example: any = (data.example === \"\") ? null : data.example;\n            example = this.exampleAsObject(example);\n            let command: ICommand = CommandFactory.createNewSchemaDefinitionCommand(this.document.getDocumentType(),\n                data.name, example, data.description);\n            this.commandService.emit(command);\n        }\n        this.selectDefinition(this.getDefinitionByName(data.name));\n    }\n\n    /**\n     * Called when the user fills out the Add Response editor and clicks Add.\n     */\n    public addResponse(data: ResponseData): void {\n        console.info(\"[EditorMasterComponent] Adding a response: \", data);\n        let command: ICommand = CommandFactory.createNewResponseDefinitionCommand(this.document.getDocumentType(),\n            data.name, data.description);\n        this.commandService.emit(command);\n        this.selectResponse(this.getResponseByName(data.name));\n    }\n\n    /**\n     * Converts a JSON formatted string example to an object.\n     * @param from\n     */\n    protected exampleAsObject(from: string): any {\n        try {\n            return JSON.parse(from);\n        } catch (e) {\n            return from;\n        }\n    }\n\n    /**\n     * Gets a definition by its name.\n     * @param name\n     */\n    protected getDefinitionByName(name: string): Oas20SchemaDefinition | Oas30SchemaDefinition {\n        if (this.document.getDocumentType() == DocumentType.openapi2) {\n            return (this.document as Oas20Document).definitions.getDefinition(name);\n        } else {\n            return (this.document as Oas30Document).components.getSchemaDefinition(name);\n        }\n    }\n\n    /**\n     * Gets a response by its name.\n     * @param name\n     */\n    protected getResponseByName(name: string): Oas20ResponseDefinition | Oas30ResponseDefinition {\n        if (this.document.getDocumentType() == DocumentType.openapi2) {\n            return (this.document as Oas20Document).responses.getResponse(name);\n        } else {\n            return (this.document as Oas30Document).components.getResponseDefinition(name);\n        }\n    }\n\n    /**\n     * Called when the user searches in the master area.\n     * @param criteria\n     */\n    public filterAll(criteria: string): void {\n        console.info(\"[EditorMasterComponent] Filtering master items: %s\", criteria);\n        this.filterCriteria = criteria;\n        if (this.filterCriteria !== null) {\n            this.filterCriteria = this.filterCriteria.toLowerCase();\n        }\n        this._paths = null;\n        this._defs = null;\n        this._responses = null;\n    }\n\n    /**\n     * Called when the user right-clicks on a path.\n     * @param event\n     * @param pathItem\n     */\n    public showPathContextMenu(event: MouseEvent, pathItem: OasPathItem): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(pathItem);\n        this.contextMenuType = \"path\";\n    }\n\n    /**\n     * Called when the user clicks somewhere in the document.  Used to close the context\n     * menu if it is open.\n     */\n    @HostListener(\"document:click\", [\"$event\"])\n    public onDocumentClick(event: MouseEvent): void {\n        // For FireFox (especially macOS), suppress the right click event\n        // to prevent it immediately closing the context menu just activated.\n        if (event && event.which === 3) {\n            return;\n        }\n        this.closeContextMenu();\n    }\n\n    /**\n     * Closes the context menu.\n     */\n    private closeContextMenu(): void {\n        this.contextMenuType = null;\n        this.contextMenuSelection = null;\n    }\n\n    /**\n     * Called when the user clicks \"New Path\" in the context-menu for a path.\n     */\n    public newPath(): void {\n        let pathItem: OasPathItem = this.contextMenuSelection.resolve(this.document) as OasPathItem;\n        this.addPathDialog.open(this.document, pathItem.getPath());\n        this.closeContextMenu();\n    }\n\n    /**\n     * Called when the user clicks \"Delete Path\" in the context-menu for a path.\n     */\n    public deletePath(): void {\n        let pathItem: OasPathItem = this.contextMenuSelection.resolve(this.document) as OasPathItem;\n        let command: ICommand = CommandFactory.createDeletePathCommand(pathItem.getPath());\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Called when the user clicks \"Clone Path\" in the context-menu for a path item.\n     */\n    public clonePath(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            let pathItem: OasPathItem = this.contextMenuSelection.resolve(this.document) as OasPathItem;\n            this.clonePathDialog.open(this.document, pathItem);\n        } else {\n            let pathItem: OasPathItem = modalData.object;\n            console.info(\"[EditorMasterComponent] Clone path item: %s\", modalData.path);\n            let cloneSrcObj: any = Library.writeNode(pathItem);\n            let command: ICommand = CommandFactory.createAddPathItemCommand(modalData.path, cloneSrcObj);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user right-clicks on a data type.\n     * @param event\n     * @param definition\n     */\n    public showDefinitionContextMenu(event: MouseEvent, definition: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(definition);\n        this.contextMenuType = \"definition\";\n    }\n\n    /**\n     * Called when the user right-clicks on a response.\n     * @param event\n     * @param definition\n     */\n    public showResponseContextMenu(event: MouseEvent, definition: Oas20ResponseDefinition | Oas30ResponseDefinition): void {\n        event.preventDefault();\n        event.stopPropagation();\n        this.contextMenuPos.left = event.clientX + \"px\";\n        this.contextMenuPos.top = event.clientY + \"px\";\n        this.contextMenuSelection = Library.createNodePath(definition);\n        this.contextMenuType = \"response\";\n    }\n\n    /**\n     * Called when the user clicks the \"Delete Definition\" item in the context-menu for a definition.\n     */\n    public deleteDefinition(): void {\n        let schemaDef: IDefinition = this.contextMenuSelection.resolve(this.document) as any;\n        let schemaDefName: string = schemaDef.getName();\n        let command: ICommand = CommandFactory.createDeleteSchemaDefinitionCommand(this.document.getDocumentType(), schemaDefName);\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Called when the user clicks the \"Delete Response\" item in the context-menu for a response.\n     */\n    public deleteResponse(): void {\n        let def: IDefinition = this.contextMenuSelection.resolve(this.document) as any;\n        let defName: string = def.getName();\n        let command: ICommand = CommandFactory.createDeleteResponseDefinitionCommand(this.document.getDocumentType(), defName);\n        this.commandService.emit(command);\n        this.closeContextMenu();\n    }\n\n    /**\n     * Called when the user clicks \"Clone Definition\" in the context-menu for a definition.\n     */\n    public cloneDefinition(modalData?: any): void {\n        if (undefined === modalData || modalData === null) {\n            let schemaDef: any = this.contextMenuSelection.resolve(this.document);\n            this.cloneDefinitionDialog.open(this.document, schemaDef);\n        } else {\n            let definition: Node = modalData.definition;\n            console.info(\"[EditorMasterComponent] Clone definition: %s\", modalData.name);\n            let cloneSrcObj: any = Library.writeNode(definition);\n            let command: ICommand = CommandFactory.createAddSchemaDefinitionCommand(this.document.getDocumentType(),\n                modalData.name, cloneSrcObj);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Clone Response\" in the context-menu for a response.\n     */\n    public cloneResponse(modalData?: any): void {\n        console.info(\"[EditorMasterComponent] Cloning response definition: \", modalData);\n        if (undefined === modalData || modalData === null) {\n            let responseDef: any = this.contextMenuSelection.resolve(this.document);\n            this.cloneResponseDialog.open(this.document, responseDef);\n        } else {\n            let definition: Node = modalData.definition;\n            console.info(\"[EditorMasterComponent] Clone response def: %s\", modalData.name);\n            let cloneSrcObj: any = Library.writeNode(definition);\n            let command: ICommand = CommandFactory.createAddResponseDefinitionCommand(this.document.getDocumentType(),\n                modalData.name, cloneSrcObj);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Rename Definition\" in the context-menu for a schema definition.\n     */\n    public renameDefinition(event?: RenameEntityEvent): void {\n        if (undefined === event || event === null) {\n            let schemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition = <any>this.contextMenuSelection.resolve(this.document);\n            let name: string = this.definitionName(schemaDef);\n            let definitionNames: string[] = [];\n            let master: EditorMasterComponent = this;\n            VisitorUtil.visitTree(this.document, new class extends CombinedVisitorAdapter {\n                public visitSchemaDefinition(node: Oas20SchemaDefinition | Oas30SchemaDefinition): void {\n                    definitionNames.push(master.definitionName(node));\n                }\n            }, TraverserDirection.down);\n            this.renameDefinitionDialog.open(schemaDef, name, newName => {\n                return definitionNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let definition: Oas20SchemaDefinition | Oas30SchemaDefinition = <any>event.entity;\n            let oldName: string = this.definitionName(definition);\n            console.info(\"[EditorMasterComponent] Rename definition to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameSchemaDefinitionCommand(this.document.getDocumentType(),\n                oldName, event.newName);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called when the user clicks \"Rename Response\" in the context-menu for a response.\n     */\n    public renameResponse(event?: RenameEntityEvent): void {\n        console.info(\"[EditorMasterComponent] Renaming response: \", event);\n        if (undefined === event || event === null) {\n            let responseDef: Oas20ResponseDefinition | Oas30ResponseDefinition = <any>this.contextMenuSelection.resolve(this.document);\n            let name: string = responseDef.getName();\n            let definitionNames: string[] = [];\n            let master: EditorMasterComponent = this;\n            VisitorUtil.visitTree(this.document, new class extends CombinedVisitorAdapter {\n                public visitResponseDefinition(node: Oas20ResponseDefinition | Oas30ResponseDefinition): void {\n                    definitionNames.push(node.getName());\n                }\n            }, TraverserDirection.down);\n            this.renameResponseDialog.open(responseDef, name, newName => {\n                return definitionNames.indexOf(newName) !== -1;\n            });\n        } else {\n            let definition: Oas20ResponseDefinition | Oas30ResponseDefinition = <any>event.entity;\n            let oldName: string = definition.getName();\n            console.info(\"[EditorMasterComponent] Rename response definition to: %s\", event.newName);\n            let command: ICommand = CommandFactory.createRenameResponseDefinitionCommand(this.document.getDocumentType(),\n                oldName, event.newName);\n            this.commandService.emit(command);\n\n            // TODO select the newly renamed response def\n        }\n    }\n\n    /**\n     * Figures out the definition name.\n     * @param schemaDef\n     */\n    protected definitionName(schemaDef: Oas20SchemaDefinition | Oas30SchemaDefinition): string {\n        return schemaDef.getName();\n    }\n\n    /**\n     * Called when the user clicks \"Rename Definition\" in the context-menu for a schema definition.\n     */\n    public renamePath(modalData?: any): void {\n        console.info(\"[EditorMasterComponent] Renaming path: \", modalData);\n        if (undefined === modalData || modalData === null) {\n            let pathItem: any = this.contextMenuSelection.resolve(this.document);\n            this.renamePathDialog.open(this.document, pathItem);\n        } else {\n            let path: Oas20PathItem | Oas30PathItem = modalData.path;\n            let oldName: string = path.getPath();\n            console.info(\"[EditorMasterComponent] Rename definition to: %s\", modalData.name);\n            let command: ICommand = CommandFactory.createRenamePathItemCommand(oldName, modalData.name, modalData.renameSubpaths);\n            this.commandService.emit(command);\n        }\n    }\n\n    /**\n     * Called to determine whether there is a validation problem associated with the given\n     * node (either directly on the node or any descendant node).\n     * @param node\n     */\n    public hasValidationProblem(node: Node): boolean {\n        let viz: HasProblemVisitor = new HasProblemVisitor();\n        VisitorUtil.visitTree(node, viz, TraverserDirection.down);\n        return viz.problemsFound;\n    }\n\n    public entityClasses(node: Node): string {\n        let classes: string[] = [];\n        if (this.hasValidationProblem(node)) {\n            classes.push(\"problem-marker\");\n        }\n        if (this.isContexted(node)) {\n            classes.push(\"contexted\");\n        }\n        if (this.isSelected(node)) {\n            classes.push(\"selected\");\n        }\n        return classes.join(' ');\n    }\n\n    /**\n     * Returns the classes that should be applied to the path item in the master view.\n     * @param node\n     * @return\n     */\n    public pathClasses(node: OasPathItem): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Returns the classes that should be applied to the schema definition in the master view.\n     * @param node\n     * @return\n     */\n    public definitionClasses(node: Node): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Returns the classes that should be applied to the response definition in the master view.\n     * @param node\n     * @return\n     */\n    public responseClasses(node: Node): string {\n        return this.entityClasses(node);\n    }\n\n    /**\n     * Opens the Add Definition Editor (full screen editor for adding a data type).\n     */\n    public openAddDefinitionEditor(): void {\n        let dtEditor: DataTypeEditorComponent = this.editors.getDataTypeEditor();\n        let handler: IDataTypeEditorHandler = {\n            onSave: (event) => {\n                this.addDefinition(event.data);\n            },\n            onCancel: () => { /* Do nothing on cancel... */ }\n        };\n        dtEditor.open(handler, this.document);\n    }\n\n    /**\n     * Opens the Add Response Editor (full screen editor for adding a response).\n     */\n    public openAddResponseEditor(): void {\n        let respEditor: ResponseEditorComponent = this.editors.getResponseEditor();\n        let handler: IResponseEditorHandler = {\n            onSave: (event) => {\n                this.addResponse(event.data);\n            },\n            onCancel: () => { /* Do nothing on cancel... */ }\n        };\n        respEditor.open(handler, this.document);\n    }\n\n    /**\n     * Gets the node path for the given data model node.\n     * @param node\n     */\n    public asNodePath(node: Node): string {\n        return ModelUtils.nodeToPath(node);\n    }\n\n    shouldShowValidationAggregate(): boolean {\n        return (this.paths().length + this.definitions().length) < 40;\n    }\n\n    importsEnabled(): boolean {\n        return this.features.getFeatures().componentImports;\n    }\n\n    importDataTypes(): void {\n        this.onImportComponent.emit(ComponentType.schema);\n    }\n\n    importResponses(): void {\n        this.onImportComponent.emit(ComponentType.response);\n    }\n\n}\n\n\n/**\n * Visitor used to search through the data model for validation problems.\n */\nclass HasProblemVisitor extends CombinedAllNodeVisitor {\n\n    public problemsFound: boolean = false;\n\n    visitNode(node: Node): void {\n        if (node._validationProblems.length > 0) {\n            this.problemsFound = true;\n        }\n    }\n\n}\n","<div class=\"editor-master\">\n    <!-- Path Context Menu -->\n    <ul id=\"path-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'path'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"newPath()\">\n                <span class=\"pficon pficon-add-circle-o\"></span>\n                <span>New Sub-Path</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renamePath()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"clonePath()\">\n                <span class=\"fa fa-clone\"></span>\n                <span>Clone</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deletePath()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Data Type Context Menu -->\n    <ul id=\"definition-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'definition'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renameDefinition()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"cloneDefinition()\">\n                <span class=\"fa fa-clone\"></span>\n                <span>Clone</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deleteDefinition()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Response Context Menu -->\n    <ul id=\"response-context-menu\" class=\"dropdown-menu context-menu\" *ngIf=\"contextMenuType === 'response'\"\n        (window:keydown)=\"onGlobalKeyDown($event)\"\n        [style.left]=\"contextMenuPos.left\" [style.top]=\"contextMenuPos.top\">\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"renameResponse()\">\n                <span class=\"fa fa-pencil-square-o\"></span>\n                <span>Rename</span>\n            </a>\n        </li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"cloneResponse()\">\n                <span class=\"fa fa-clone\"></span>\n                <span>Clone</span>\n            </a>\n        </li>\n        <li class=\"divider\"></li>\n        <li>\n            <a href=\"#\" onclick=\"return false\" (click)=\"deleteResponse()\">\n                <span class=\"pficon pficon-delete\"></span>\n                <span>Delete</span>\n            </a>\n        </li>\n    </ul>\n\n    <!-- Search - Used to Filter Paths and Data Type -->\n    <div class=\"editor-search\">\n        <search [placeholder]=\"'Search everything...'\" [searchId]=\"'masterSearch'\" (onSearch)=\"filterAll($event)\"></search>\n    </div>\n\n    <!-- Outline - Paths, Data Types, Responses -->\n    <div class=\"editor-outline\">\n        <!-- Paths Section -->\n        <section type=\"path\" label=\"Paths\" [counterItems]=\"paths()\" [inForm]=\"false\"\n                 collaborationNodePath=\"/paths\"\n                 contextHelp=\"The core of any REST API is the set of resources/paths it exposes.  Each path is of the form '/path/to/resource' and can support a number of operations.\">\n            <span actions>\n                <icon-button (onClick)=\"addPathDialog.open(document, getCurrentPathSelection())\" [pullRight]=\"true\" type=\"add\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"path-list master-entity-list\" (keydown)=\"onPathsKeypress($event)\" #pathList>\n                <signpost *ngIf=\"paths().length === 0\">\n                    <span>No paths have been created.</span>\n                    <a (click)=\"addPathDialog.open(document, '/')\">Add a path</a>\n                </signpost>\n\n                <div class=\"api-path {{ pathClasses(path) }}\" *ngFor=\"let path of paths()\">\n                    <div class=\"api-path-item\" path-item [path]=\"path.getPath()\" (click)=\"pathList.focus() ; selectPath(path)\"\n                         (contextmenu)=\"showPathContextMenu($event, path)\"></div>\n                    <collaborator-aggregate [nodePath]=\"asNodePath(path)\"></collaborator-aggregate>\n                    <validation-aggregate [models]=\"[path]\" *ngIf=\"shouldShowValidationAggregate()\"></validation-aggregate>\n                </div>\n            </div>\n        </section>\n\n        <!-- Data Types Section -->\n        <section type=\"definition\" label=\"Data Types\" [counterItems]=\"definitions()\" [inForm]=\"false\"\n                 [collaborationNodePath]=\"definitionsPath()\"\n                 contextHelp=\"It is often necessary for many operations to return the same type of data (or a list of that same data type).  Rather than define the same data type multiple times within each operation, you can create named Data Types in this section.\">\n            <span actions>\n                <icon-button (onClick)=\"openAddDefinitionEditor()\" [pullRight]=\"true\" type=\"add\" title=\"Create Data Type\"></icon-button>\n                <icon-button *ngIf=\"importsEnabled()\" (onClick)=\"importDataTypes()\" [pullRight]=\"true\" type=\"import\" title=\"Import Data Type\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"definition-list master-entity-list\" (keydown)=\"onDefinitionsKeypress($event)\" #defList>\n                <signpost *ngIf=\"definitions().length === 0\">\n                    <span>No reusable types have been created.</span>\n                    <a (click)=\"openAddDefinitionEditor()\">Add a data type</a>\n                </signpost>\n\n                <div definition-item *ngFor=\"let def of definitions()\" class=\"api-definition {{ definitionClasses(def) }}\" [schema]=\"def\"\n                     (click)=\"defList.focus() ; selectDefinition(def)\" (contextmenu)=\"showDefinitionContextMenu($event, def)\"></div>\n            </div>\n        </section>\n\n        <!-- Responses Section -->\n        <section type=\"response\" label=\"Responses\" [counterItems]=\"responses()\" [inForm]=\"false\"\n                 [collaborationNodePath]=\"responsesPath()\"\n                 contextHelp=\"Define re-usable response definition in this section, allowing quick re-use across multiple operations.\">\n            <span actions>\n                <icon-button (onClick)=\"openAddResponseEditor()\" [pullRight]=\"true\" type=\"add\" title=\"Create Response\"></icon-button>\n                <icon-button *ngIf=\"importsEnabled()\" (onClick)=\"importResponses()\" [pullRight]=\"true\" type=\"import\" title=\"Import Response\"></icon-button>\n            </span>\n            <div body tabindex=\"0\" class=\"response-list master-entity-list\" (keydown)=\"onResponsesKeypress($event)\" #respList>\n                <signpost *ngIf=\"responses().length === 0\">\n                    <span>No reusable responses have been created.</span>\n                    <a (click)=\"openAddResponseEditor()\">Add a response</a>\n                </signpost>\n\n                <div response-item *ngFor=\"let resp of responses()\" class=\"api-response {{ responseClasses(resp) }}\" [response]=\"resp\"\n                     (click)=\"respList.focus() ; selectResponse(resp)\" (contextmenu)=\"showResponseContextMenu($event, resp)\"></div>\n            </div>\n        </section>\n\n    </div>\n\n    <!-- Dialogs -->\n    <add-path-dialog #addPathDialog (onAdd)=\"addPath($event)\"></add-path-dialog>\n    <clone-path-dialog #clonePathDialog (onClone)=\"clonePath($event)\"></clone-path-dialog>\n    <rename-path-dialog #renamePathDialog (onRename)=\"renamePath($event)\"></rename-path-dialog>\n\n    <clone-definition-dialog #cloneDefinitionDialog (onClone)=\"cloneDefinition($event)\"></clone-definition-dialog>\n    <rename-entity-dialog #renameDefinitionDialog\n                          type=\"Data Type\"\n                          title=\"Rename Data Type\"\n                          warning=\"Renaming a Data Type will also update any references to the type elsewhere in the API (e.g. responses and request bodies).\"\n                          validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                          validationError=\"Enter a valid name (only alpha-numeric characters, ., - and _ are allowed - no whitespace).\"\n                          (onRename)=\"renameDefinition($event)\"></rename-entity-dialog>\n\n    <clone-response-definition-dialog #cloneResponseDialog (onClone)=\"cloneResponse($event)\"></clone-response-definition-dialog>\n    <rename-entity-dialog #renameResponseDialog\n                          type=\"Response\"\n                          title=\"Rename Response\"\n                          warning=\"Renaming a Response will also update any references to it elsewhere in the API.\"\n                          validationPattern=\"[a-zA-Z0-9\\.\\-_]+\"\n                          validationError=\"Enter a valid name (only alpha-numeric characters, ., - and _ are allowed - no whitespace).\"\n                          (onRename)=\"renameResponse($event)\"></rename-entity-dialog>\n</div>\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","/**\n * @license\n * Copyright 2022 Red Hat\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {CombinedVisitorAdapter, AaiChannelItem} from \"@apicurio/data-models\";\n\n/**\n * Visitor used to find path items.\n */\nexport class FindChannelItemsVisitor extends CombinedVisitorAdapter {\n\n    public channelItems: AaiChannelItem[] = [];\n\n    /**\n     * C'tor.\n     * @param filterCriteria\n     */\n    constructor(private filterCriteria: string) {\n        super();\n    }\n\n    /**\n     * Called when a channel item is visited.\n     * @param node\n     */\n    visitChannelItem(node: AaiChannelItem): void {\n        if (this.acceptThroughFilter(node.getName())) {\n            this.channelItems.push(node);\n        }\n    }\n\n    /**\n     * Sorts and returns the channel items.\n     */\n    public getSortedChannelItems(): AaiChannelItem[] {\n        return this.channelItems.sort( (channelItem1, channelItem2) => {\n            return channelItem1.getName().localeCompare(channelItem2.getName());\n        });\n    }\n\n    /**\n     * Returns true if the given name is accepted by the current filter criteria.\n     * @param name\n     * @return\n     */\n    private acceptThroughFilter(name: string): boolean {\n        if (this.filterCriteria === null) {\n            return true;\n        }\n        return name.toLowerCase().indexOf(this.filterCriteria) != -1;\n    }\n}\n"],"sourceRoot":"webpack:///"}